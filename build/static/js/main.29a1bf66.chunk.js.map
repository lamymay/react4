{"version":3,"sources":["assets/image/avatar.jpeg","components/basic/Index.js","components/system/rbac/user/User.js","components/system/user/UserList.js","components/system/rbac/Role.js","components/system/rbac/RoleInsert.js","components/system/user/UserInsert.js","components/app/food/Food.js","config/urls.js","components/app/blog/Blog.js","components/app/blog/ManageBlog.js","components/app/blog/BlogDetail.js","components/app/blog/BlogMd.js","components/app/food/FoodDetails.js","components/system/file/FileGet.jsx","components/system/file/File.jsx","components/basic/Login.js","components/system/file/FileSearch.jsx","config/router.js","components/system/menu/Menu.jsx","components/layout/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Index","props","state","React","Component","User","getUsers","bgColor","list","aid","avatar","nickname","textStyles","color","backgroundColor","this","map","value","key","className","style","width","height","fontSize","textAlign","UserList","url","console","log","axios","post","then","response","data","alert","msg","fromDb","setState","users","catch","error","updateUser","e","modal2Visible","columns","title","render","text","record","dataIndex","onClick","add","id","remove","bind","type","setModal2Visible","wrapClassName","visible","layout","onSubmit","Item","placeholder","onChange","event","handleMaxBackUp","htmlType","rowKey","dataSource","pageSize","bordered","start","Date","end","Role","roles","to","RoleInsert","match","params","UserInsert","query","parse","location","search","Food","getFoods","prefixUri","host","urls","listMenusBySystemIdAndLevel","file","uploadFile","listFileByQuery","getFileByCode","blog","saveBlog","updateBlog","getBlogArticleByUserId","listBlogByAuthorId","menu","listMenu","saveMenu","Blog","getTimelineListFun","apis","get","status","headers","config","code","table","images","authorId","tagId","sortId","description","content","publishDate","createDate","updateDate","timeLine","ManageBlog","getManageBlog","category","version","sortWeight","BlogDetail","mdEditor","mdParser","getArticle","article","markdown","postBody","body","MarkdownIt","html","linkify","typographer","highlight","str","lang","use","emoji","subscript","superscript","footnote","deflist","abbreviation","insert","mark","renderHTML","t1","t2","secondsElapsed","Promise","resolve","setTimeout","ref","node","view","md","imageUrl","BlogMd","handleEditorChange","updateArticleFun","uri","Object","interval","setInterval","tick","clearInterval","ret","callback","reader","FileReader","onImageUpload","handleImageUpload","FoodDetails","FileGet","getFile","trim","responseType","FileDownload","searchForFile","handleGetInputValue","target","keyCode","name","onKeyUp","File","previewVisible","previewImage","src","img","img2","localImg","fileList","uid","routes","action","authorization","info","message","success","fileName","alt","require","Login","handleUsername","username","handlePwd","pwd","keyUpFun","loginFun","user","history","push","pwdConfirm","sex","htmlFor","required","autoFocus","href","FileSearch","searchForImageList","filename","nativeEvent","routers","path","component","exact","searchForMenuList","request","parentId","systemId","sort","level","icon","note","handleInputOnChange","nameEnglish","raw","inputValue","inputName","onInputChange","Home","getMenusFun","replace","route","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29a1bf66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.758a4c9e.jpeg\";","import React from 'react';\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>欢迎主页|WELCOME</h1>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\n// import user from '../../../../assets/css/system/rbac/user.css'\r\n\r\nclass User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgColor:'blue',\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }, {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        const textStyles = {\r\n            color: 'black',\r\n            backgroundColor: this.state.bgColor\r\n        };\r\n        return (<div>\r\n            {/*<div  style=\"background-color:red;\">style</div>*/}\r\n            <h1>User</h1>\r\n\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        {/*<Link to={`/userInsert?aid=${value.aid}`}>{value.nickname}</Link>*/}\r\n                        <p  className='user-item'>{value.aid}|{value.nickname}</p>\r\n                        {/*<p  style=\"background-color:red;\">{value.aid}|{value.nickname}</p>*/}\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <br/>\r\n            <br/>\r\n            <hr/>\r\n            1. 行内样式\r\n            <div\r\n                style={{\r\n                    width:'200px',\r\n                    height:'80px',\r\n                    backgroundColor:'yellow',\r\n                    fontSize:'24px',\r\n                    textAlign:'center'\r\n                }}\r\n            >This is Page1!</div>\r\n\r\n            2. 声明样式\r\n            <p style={textStyles}>inline style</p>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default User;\r\n\r\n//https://segmentfault.com/a/1190000016952542?utm_source=tag-newest\r\n//测试引入css的方式\r\n// 1、行内引入， 特点：即在行内直接写，未能测试通过，报错，切支持度按网上说法也不是很全要驼峰编写\r\n// 2、页内引入，特点：写const变量，这样数据与js会在一起，维护调试不是很方便\r\n//3、外部引入，推荐，特点：与原生几乎一样，\r\n// 第三种的用法：1js头部 “import user from '../../../../assets/css/system/rbac/user.css'” 2使用 \"<p  className='user-item'>{value.aid}|{value.nickname}</p>\"\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\nclass UserList extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n\r\n    getInitialState() {\r\n        return {\r\n            modal2Visible: false,\r\n        };\r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({modal2Visible});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.getUsers();\r\n\r\n    }\r\n\r\n    // hasErrors(fieldsError) {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    getUsers = () => {\r\n        var port = 8001;\r\n        var url = \"http://127.0.0.1:\" + port + \"/zero/sys/user/page\";\r\n        console.log(\"######################################\");\r\n        console.log(url);\r\n        console.log(\"######################################\");\r\n        let user = {};\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n                //登录成功，获取到后台返回的数据，可以做缓存\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //更新用户\r\n    updateUser = (e) => {\r\n        console.log(\"uuuuuuuuuuuu\");\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '测试合并',\r\n                render: (text, record) => (\r\n                    <span>\r\n                       {record.nickname}--\r\n                        {record.avatar}>\r\n                        </span>\r\n                )\r\n            },\r\n            {\r\n                key: 'nickname',\r\n                title: '昵称',\r\n                dataIndex: 'nickname',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'avatar',\r\n                title: '标识',\r\n                dataIndex: 'avatar'\r\n            },\r\n            {\r\n                key: 'state',\r\n                title: '启用状态',\r\n                dataIndex: 'state'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.add}>add {record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={\"基础表格\"}>\r\n                {/*    <Button type=\"primary\" onClick={this.updateUser}>测试 primary与后台交互</Button>\r\n                <Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>\r\n                <Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n                <Button type=\"dashed\" onClick={() => this.setModal2Visible(true)}>显示垂直居中的对话框</Button>\r\n\r\n                <Modal\r\n                    title=\"垂直居中的对话框\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.modal2Visible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    //  onCancel={() => this.setModal2Visible(false)}\r\n                >\r\n\r\n                    <p>对话框的内容</p>\r\n                    <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                        <Form.Item> <Input placeholder=\"nickname\" onChange ={event => this.handleMaxBackUp(event)} /> </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                        <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                    </Form>\r\n\r\n\r\n                </Modal>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>)\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n    }\r\n\r\n\r\n    add() {\r\n        console.log(\"add-start\");\r\n        let start = new Date();\r\n        console.log(start);\r\n\r\n\r\n        //////////////////////////////////////////////////////////\r\n        var url = \"http://127.0.0.1:80/sys/users\";\r\n        console.log(url);\r\n        let user = {\r\n            'nickname': \"AXIOS\",\r\n            \"avatar\": \"avatar-01\",\r\n            \"state\": 1,\r\n            \"createDate\": 1123454444,\r\n            \"updateDate\": 1123455653\r\n        };\r\n\r\n        axios.post(url, user).then(response => {\r\n            console.log(\"111111111111111111111111response  then ==获取到后台返回的数据\");\r\n            console.log(response.data);\r\n            //登录失败\r\n            if (null == response.data.data) {\r\n                alert(response.data.msg);\r\n            }\r\n            //登录成功，获取到后台返回的数据，可以做缓存\r\n            console.log(response.data.data);\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n        //////////////////////////////////////////////////////////\r\n        console.log(\"add-end\");\r\n        let end = new Date();\r\n        console.log(end);\r\n        console.log(end - start);\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\n// import RoleInsert from './RoleInsert'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Role extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>GET 角色-动态传值测试</h2>\r\n\r\n                <ul>\r\n                    {this.state.roles.map((value, key) => {\r\n                        return <li key={key}>\r\n                            <Link to={`/roleInsert/${value.aid}`}>{value.title}</Link>\r\n                        </li>\r\n\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n","import React from \"react\";\r\n\r\n\r\nclass RoleInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //生命周期函数中获取 GET传值\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n\r\n        console.log(\"*******************\");\r\n        console.log(this.props);\r\n        console.log(\"*******************\");\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1> 新增角色</h1>\r\n            <h2> 新增角色</h2>\r\n            <h3> 新增角色</h3>\r\n            <h4> 新增角色</h4>\r\n            <h5> 新增角色</h5>\r\n            <h6> 新增角色</h6>\r\n\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default RoleInsert;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nclass UserInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        let query = url.parse(this.props.location.search, true).query;\r\n        console.log(query);\r\n        console.log(query.aid);\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>UserInsert</h1>\r\n\r\n            <hr/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default UserInsert;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Food extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    title: 'food1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: 'food2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: 'food3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: 'food4'\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getFoods = () => {\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>Food</h1>\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        <Link to={`/foodDetails?aid=${value.aid}`}>{value.title}</Link>\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Food;\r\n","// const host = \"http://127.0.0.1:8001\";\r\nconst host = \"http://122.51.110.127:80\";\r\nconst prefixUri = host + \"/zero\";\r\n\r\n// 说明 通常来说\r\n// GET 方法的uri，变量名称的关键字一般有：get\r\n// POST 方法的uri，变量名称的关键字一般有：listXXXByyy\r\n\r\nconst urls = {\r\n    listMenusBySystemIdAndLevel: prefixUri + \"/menus/SYSTEM_ID/levels/LEVEL\",\r\n    file: {\r\n        uploadFile: prefixUri + \"/file/upload\",\r\n        listFileByQuery: prefixUri + \"/sys/file/list\",\r\n        getFileByCode: prefixUri + \"/file/\",\r\n\r\n    },\r\n    blog: {\r\n        saveBlog: prefixUri + \"/v1/blogs/save\",\r\n        updateBlog: prefixUri + \"/v1/blogs/update\",\r\n        getBlogArticleByUserId: prefixUri + \"/v1/blogs/\",\r\n        listBlogByAuthorId: prefixUri + \"/v1/blogs/timeline/\",\r\n    },\r\n    menu: {\r\n        listMenu: prefixUri + \"/menus/list\",\r\n        saveMenu: prefixUri + \"/menus/save\",\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default urls;\r\n\r\n// const uriListFile = \"listFile\";\r\n// const profile = \"local\";\r\n// const profile = \"prod_160\";\r\n// function getUriPrefix(key) {\r\n//     if (key === \"local\") {\r\n//         //local\r\n//         return \"http://127.0.0.1:8001\";\r\n//     } else if (key === \"prod_160\") {\r\n//         //160\r\n//         return \"http://122.51.110.127:80\";\r\n//     }\r\n// }\r\n//\r\n// function getUri(key) {\r\n//     let host = getUriPrefix(profile);\r\n//\r\n//     if (key === uriListFile) {\r\n//         return host + \"/zero/sys/file/list\";\r\n//     } else if (key === \"saveMenu\") {\r\n//         return host + \"/zero/111111/sys/file/list\";\r\n//     }\r\n// }\r\n// function getUri(key) {\r\n//\r\n//     //local\r\n//     let protocol = \"http://\";\r\n//     let host = \"127.0.0.1\";\r\n//     let port = 8001;\r\n//     // let listMenu = protocol+host+':'+port+'/zero/menus/list';\r\n//     // let saveMenu = protocol+host+':'+port+'/zero/menus/save';\r\n//\r\n//     let httpLocal = new Object();\r\n//     httpLocal.listMenu = protocol + host + ':' + port + '/zero/menus/list';\r\n//     httpLocal.saveMenu = protocol + host + ':' + port + '/zero/menus/save';\r\n//\r\n//\r\n//     //  160\r\n//     let protocol_160 = \"http://\";\r\n//     let host_160 = \"122.51.110.127\";\r\n//     let port_160 = 80;\r\n//\r\n//     let http160 = new Object();\r\n//     http160.listMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/list';\r\n//     http160.saveMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/save';\r\n//\r\n//\r\n//     //数据封装到map\r\n//     let map = new Map();\r\n//     let local = \"local\";\r\n//     let prod_160 = \"prod_160\";\r\n//     map.set(local, httpLocal);\r\n//     map.set(prod_160, http160);\r\n//     console.log(\"------------------------- get ------------\");\r\n//     console.log(map);\r\n//     console.log(map.size);\r\n//     console.log(map.keys());\r\n//     console.log(map.entries());\r\n//     //从map中获取value  每次只要修改这里即可\r\n//     // let uris = map.get(local);\r\n//     let uris = map.get(prod_160);\r\n//     if (key === \"listMenu\") {\r\n//         return uris.listMenu;\r\n//     } else if (key === \"saveMenu\") {\r\n//         return uris.saveMenu;\r\n//     }\r\n// }\r\n","import React from \"react\";\r\nimport {Timeline} from 'antd';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass Blog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 13,\r\n            authorId: '', // 作者，所属用户ID[多作者请在描述中填充第二作者信息]\r\n            tagId: '', // 栏目ID\r\n            sortId: '',// 所属分类\r\n            status: '',// 文章的模式:0为私有，1为公开，2为仅好友查看\r\n            title: '',// 文章名称-64\r\n            description: '',// 文章描述-128\r\n            content: '',// 文章内容[text]\r\n            publishDate: '',// 发布时间\r\n            createDate: '',// 创建时间(创建未发表)\r\n            updateDate: '',// 更新时间\r\n\r\n            //时间线 渲染列表\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n        this.getTimelineListFun();\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    // 获取博客数据  图片 + 文字，这里应该获取的是文字数据 阅读数等\r\n    getTimelineListFun = (e) => {\r\n        var uId = 1;\r\n        let url = apis.blog.listBlogByAuthorId + uId;\r\n        console.log(\"--- url ---\");\r\n        console.log(url);\r\n        console.log(url);\r\n        console.log(url);\r\n\r\n\r\n        axios.get(url).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n    onClick = (e) => {\r\n        console.log(new Date());\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/*<Timeline>*/}\r\n                {/*    <Timeline.Item color=\"green\">AAA</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">BB</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">C</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"red\">Create</Timeline.Item>*/}\r\n                {/*</Timeline>*/}\r\n\r\n                <Timeline className='list'>\r\n                    {\r\n                        this.state.list.map((value, key) => {\r\n                            return (\r\n                                <Timeline.Item key={key}\r\n                                               // onClick={this.onClick()}\r\n                                >\r\n                                    <Link to={'/blog-detail'} type=\"span\">{value.timeLine}     </Link>\r\n                                </Timeline.Item>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </Timeline>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\nclass ManageBlog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            id: null,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: null,\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    getInitialState() {\r\n        return {\r\n            modal2Visible: false,\r\n        };\r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({modal2Visible});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.getManageBlog();\r\n\r\n    }\r\n\r\n    // hasErrors(fieldsError) {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    getManageBlog = () => {\r\n        var port = 80;\r\n        var url = \"http://127.0.0.1:\" + port + \"/zero/blogs/page\";\r\n        console.log(\"######################################\");\r\n        console.log(url);\r\n        console.log(\"######################################\");\r\n        let user = {};\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n                //登录成功，获取到后台返回的数据，可以做缓存\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //更新用户\r\n    updateUser = (e) => {\r\n        console.log(\"uuuuuuuuuuuu\");\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '测试合并',\r\n                render: (text, record) => (\r\n                    <span>\r\n                       {record.id}--\r\n                        {record.version}>\r\n                        </span>\r\n                )\r\n            },\r\n            {\r\n                key: 'authorId',\r\n                title: '作者id',\r\n                dataIndex: 'authorId',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'title',\r\n                title: 'title',\r\n                dataIndex: 'title',\r\n                width: 150\r\n            }, {\r\n                key: 'description',\r\n                title: 'description',\r\n                dataIndex: 'description',\r\n                width: 150\r\n            }, {\r\n                key: 'content',\r\n                title: 'content',\r\n                dataIndex: 'content',\r\n                width: 150\r\n            }, {\r\n                key: 'version',\r\n                title: 'version',\r\n                dataIndex: 'version',\r\n                width: 150\r\n            }, {\r\n                key: 'sortWeight',\r\n                title: 'sortWeight',\r\n                dataIndex: 'sortWeight',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'tagId',\r\n                title: '标签',\r\n                dataIndex: 'tagId'\r\n            }, {\r\n                key: 'category',\r\n                title: '分类',\r\n                dataIndex: 'category'\r\n            },\r\n            {\r\n                key: 'status',\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.add}>add {record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={\"基础表格\"}>\r\n                {/*    <Button type=\"primary\" onClick={this.updateUser}>测试 primary与后台交互</Button>\r\n                <Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>\r\n                <Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n                <Button type=\"dashed\" onClick={() => this.setModal2Visible(true)}>显示垂直居中的对话框</Button>\r\n\r\n                <Modal\r\n                    title=\"垂直居中的对话框\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.modal2Visible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    //  onCancel={() => this.setModal2Visible(false)}\r\n                >\r\n\r\n                    <p>对话框的内容</p>\r\n                    <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                        <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                        </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                        <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                    </Form>\r\n\r\n\r\n                </Modal>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>)\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ManageBlog;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass BlogDetail extends React.Component {\r\n\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            //  const MOCK_DATA = \"Hello.\\n\\n * This is markdown.\\n * It is fun\\n * Love it or leave it.\";\r\n            markdown: '# This is a H1  \\n## This is a H2  \\n###### This is a H6',\r\n            // #测试一级标题 ##副标题\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n//todo 组件间传值\r\n        let id = 13;\r\n        this.getArticle(13);\r\n\r\n        console.log(\"----------------------------\");\r\n    }\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    markdown: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // markdown: article.content\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                BlogDetail\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    value={this.state.markdown}\r\n                    // style={{height: '400px'}}\r\n                    renderHTML={this.renderHTML}\r\n\r\n                    config={{\r\n                        view: {\r\n                            menu: false,\r\n                            md: false,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    // onChange={this.handleEditorChange}\r\n                    // onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default BlogDetail;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n// import tasklists from 'markdown-it-task-lists'\r\n\r\n//网络请求\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\n\r\n// import hljs from 'highlight.js'\r\n// import 'highlight.js/styles/atom-one-light.css'\r\n// import './index.less';\r\n// import 'highlight.js/styles/github.css'\r\n\r\n//blog 的详情\r\n//两种写法 导出一个类\r\n//export default class BlogMd extends React.Component {\r\nclass BlogMd extends React.Component {\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            //  const MOCK_DATA = \"Hello.\\n\\n * This is markdown.\\n * It is fun\\n * Love it or leave it.\";\r\n            markdown: '# This is a H1  \\n## This is a H2  \\n###### This is a H6',\r\n            // #测试一级标题 ##副标题\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // this.props.form.validateFields();\r\n        console.log(\"----------- md -----------------\");\r\n        let id = 13;\r\n        this.getArticle(13);\r\n        //定时器\r\n        //todo 定时器 触发\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n\r\n\r\n    }\r\n\r\n    tick() {\r\n        //循环更新\r\n        this.updateArticleFun();\r\n\r\n        // this.setState((prevState) => ({\r\n        //     secondsElapsed: prevState.secondsElapsed + 1\r\n        // }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //清除\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    markdown: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    //编辑器有变化的话执行 更新文章\r\n    handleEditorChange = ({html, text}) => {\r\n        // console.log(\"html 是md 输入框中文本转换为html的文本---text 是md 输入框中的文本\");\r\n        //console.log(html);\r\n        //console.log(text);\r\n\r\n        //编辑\r\n        if (this.state.id != null) {\r\n            console.log(this.state.id);\r\n            //文章正文\r\n            this.setState({\r\n                content: text\r\n            });\r\n            //编辑文章 更新即可\r\n            this.updateArticleFun();\r\n        } else {\r\n            //todo 新增文章\r\n\r\n        }\r\n    };\r\n\r\n    updateArticleFun = () => {\r\n        let uri = apis.blog.updateBlog;\r\n        let body = new Object();\r\n        body.id = this.state.id;\r\n        body.content = this.state.content;\r\n        this.postBody(uri, body);\r\n    };\r\n\r\n    //\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // markdown: article.content\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n\r\n    // handleGetMdValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getMdValue())\r\n    // }\r\n\r\n    // handleGetHtmlValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getHtmlValue())\r\n    // }\r\n\r\n\r\n    //创建文章\r\n    crateArticleFun() {\r\n        // console.log(this.state.username);\r\n        var url = \"http://arc.com/zero/blogs\";\r\n        console.log(url);\r\n        let article = {\r\n            \"authorId\": this.state.authorId,\r\n            \"tagId\": this.state.tagId,\r\n            \"category\": this.state.category,\r\n            \"status\": this.state.status,\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"content\": this.state.content,\r\n            \"version\": this.state.version,\r\n            \"sortWeight\": this.state.sortWeight\r\n        };\r\n\r\n        let ret = this.postBody(url, article);\r\n        console.log(article);\r\n        console.log(ret);\r\n    };\r\n\r\n\r\n    //上传图片\r\n    handleImageUpload(file, callback) {\r\n\r\n        console.log(file);\r\n        console.log(callback);\r\n        const reader = new FileReader();\r\n        console.log(reader);\r\n        // reader.onload = () => {\r\n        //     // const convertBase64UrlToBlob = (urlData) => {\r\n        //     //     let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]\r\n        //     //     let bstr = atob(arr[1]);\r\n        //     //     let n = bstr.length;\r\n        //     //     let u8arr = new Uint8Array(n);\r\n        //     //     while (n--) {\r\n        //     //         u8arr[n] = bstr.charCodeAt(n)\r\n        //     //     }\r\n        //     //     return new Blob([u8arr], {type: mime})\r\n        //     };\r\n        //     const blob = convertBase64UrlToBlob(reader.result);\r\n        //     setTimeout(() => {\r\n        //         // setTimeout 模拟异步上传图片\r\n        //         // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown\r\n        //         callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')\r\n        //     }, 1000)\r\n        // };\r\n        // reader.readAsDataURL(file)\r\n    }\r\n\r\n    //-----------------------------------------------------------------------------\r\n    //react渲染DOM的节点\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*<div>Seconds Elapsed: {this.state.secondsElapsed}</div>*/}\r\n                <hr/>\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    value={this.state.markdown}\r\n                    style={{height: '400px'}}\r\n                    renderHTML={this.renderHTML}\r\n\r\n                    config={{\r\n                        view: {\r\n                            menu: true,\r\n                            md: true,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    onChange={this.handleEditorChange}\r\n                    onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogMd;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nclass FoodDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        let query = url.parse(this.props.location.search, true).query;\r\n        console.log(query);\r\n        console.log(query.aid);\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>FoodDetails</h1>\r\n\r\n            <hr/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default FoodDetails;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport apis from '../../../config/urls.js';\r\n\r\nimport FileDownload from 'react-file-download';\r\n\r\n\r\nclass FileGet extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            code: null,\r\n            file: null,\r\n            type: null,\r\n        }\r\n    }\r\n\r\n    //            <p style={textStyles}>inline style</p>\r\n\r\n    getFile = (code) => {\r\n        this.setState({\r\n            code: code,\r\n        });\r\n\r\n        if (this.state.code == null) {\r\n            alert(\"请出入合法的文件编码code\");\r\n            return;\r\n        } else if (this.state.code.trim() == \"\") {\r\n            alert(\"请出入合法的文件编码code\");\r\n            return;\r\n        }\r\n\r\n        let url = apis.file.getFileByCode + this.state.code;\r\n        console.log(url);\r\n        axios.get(url, {responseType: 'blob'}).then(response => {\r\n            console.log(response);\r\n            let code = response.data.code;\r\n            console.log(code);\r\n\r\n            FileDownload(response.data, '简历-v1.docx');\r\n        })\r\n    };\r\n\r\n\r\n    searchForFile = (e) => {\r\n        this.getFile(this.state.code);\r\n    };\r\n\r\n\r\n\r\n    // componentDidMount() {\r\n    //     //获取列表数据\r\n    // }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        //获取原生的事件对像 e.nativeEvent\r\n        this.setState({\r\n            code: event.target.value,\r\n        });\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(this.state.code);\r\n            this.getFile(event.target.value);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                           placeholder=\"code\"\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    <button onClick={this.searchForFile}>获取简历</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileGet;\r\n","import React from \"react\";\r\nimport {\r\n    Upload,\r\n    Icon,\r\n    message,\r\n    Button\r\n} from 'antd';\r\n// import axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\n// api接口地址抽取\r\nimport apis from '../../../config/urls.js';\r\n\r\nimport FileGet from './FileGet';\r\n\r\nclass File extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            previewVisible: false,\r\n            previewImage: '',\r\n            src: '',\r\n            url: '',\r\n            img: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n            img2: '',\r\n            //T:\\Project\\REACT\\react4\\src\\components\\system\\file\r\n            //T:\\Project\\REACT\\react4\\public\\img\r\n            localImg: process.env.PUBLIC_URL + 'image/404.jpg',\r\n\r\n            fileList: [\r\n                {\r\n                    uid: '-1',\r\n                    name: 'xxx.png',\r\n                    status: 'done',\r\n                    // code: 'done',\r\n                    url: 'http://127.0.0.1:8001/zero/file/upload',\r\n                },\r\n            ],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n    render() {\r\n        const props = {\r\n            name: 'file',\r\n            action: apis.file.uploadFile,\r\n            // action: 'http://122.51.110.127:8001/zero/file/upload',\r\n            headers: {\r\n                authorization: 'authorization-text',\r\n            },\r\n            //上传中、完成、失败都会调用这个函数。\r\n            onChange(info) {\r\n\r\n                if (info.file.status === 'done' && info.file.response.code === 1) {\r\n                    console.log(\"################################\");\r\n                    console.log(info);\r\n                    console.log(\"--------------------info.file\");\r\n                    console.log(info.file);\r\n                    console.log(\"--------------------info.fileList\");\r\n                    console.log(info.fileList);\r\n                    console.log(\"--------------------info.event\");\r\n                    console.log(info.event);\r\n                    console.log(\"--------------------文件上传成功\");\r\n\r\n                    console.log(info.file.response.code);\r\n                    console.log(info.file.response.msg);\r\n                    console.log(info.file.response.data);\r\n\r\n                    console.log(\"--------------------info.file.response\");\r\n                    console.log(info.file.response);\r\n                    message.success(`${info.file.name}-->${info.file.response.data} 文件上传成功`);\r\n                    let fileName = info.file.response.data;\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(this);\r\n                    console.log(this);\r\n                    //info.flie.name = fileName;\r\n                    // this.setState(\r\n                    //     {\r\n                    //         img2: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n                    //\r\n                    //     }\r\n                    // )\r\n\r\n                } else if (info.file.status === 'error') {\r\n                    message.error(`${info.file.name} 文件上传失败`);\r\n                } else {\r\n                    //console.log(\"失败\" + info.file.response.msg);\r\n                    console.log(\"失败\");\r\n                }\r\n\r\n                console.log(\"################################\");\r\n            },\r\n        };\r\n\r\n        /*        const props_ = {\r\n                    name: 'file',\r\n                    directory: true,\r\n                    //     multiple: true,\r\n                    action: 'http://127.0.0.1:8001/zero/file/upload',\r\n                    onChange(info) {\r\n\r\n                    },\r\n                };*/\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Upload {...props}>\r\n                    <Button>\r\n                        <Icon type=\"upload\"/> Click to Upload\r\n                    </Button>\r\n                </Upload>\r\n\r\n                {/*<Upload {...props}>*/}\r\n                {/*    <Button>*/}\r\n                {/*        <Icon type=\"upload\"/> Click to Upload*/}\r\n                {/*    </Button>*/}\r\n                {/*</Upload>*/}\r\n\r\n                {/*<input>文件上传</input>*/}\r\n\r\n\r\n                {/*<p className=\"ant-upload-text\" onChange={this.postFileFun}>点击或者拖拽到此即可上传</p>*/}\r\n                {/*<p className=\"ant-upload-hint\">*/}\r\n                {/*    Support for a single or bulk upload. Strictly prohibit from uploading company data or other*/}\r\n                {/*    band files*/}\r\n                {/*</p>*/}\r\n\r\n\r\n                <br/>\r\n                <br/>\r\n                <FileGet/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <h3>测试React多种加载图片的方法</h3>\r\n                <hr/>\r\n                {/*<img src=\"http://122.51.110.127/zero/file/girl1_15725385342508ea81a509b8f4/\" />*/}\r\n                {/*<img src=\"http://122.51.110.127/zero/file/girl1_15725385342508ea81a509b8f4/\" />*/}\r\n                <div className='img-title'>从后台去读去图片</div>\r\n                <img src={this.state.img} style={{\r\n                    width: '250px',\r\n                    height: '250px',\r\n                    textAlign: 'center'\r\n                }}\r\n                     alt=\"\"\r\n                />\r\n\r\n\r\n                <div>下面是[../../../assets/image]文件中的IMG</div>\r\n                <img src={[require(\"../../../assets/image/avatar.jpeg\")]} className='img-body' alt=\"\"/>\r\n                {/*<img src={require('../../../../public/image/404.jpg')}/>*/}\r\n\r\n                <div>下面是[PUBLIC]文件中的IMG(两种方式都可以读取)</div>\r\n                {/*<img src={process.env.PUBLIC_URL + '/image/404.jpg'} className='img-body'/>*/}\r\n                <img src={this.state.localImg} className='img-body' alt=\"\"/>\r\n\r\n\r\n                <hr/>\r\n                <div>\r\n                    <p className='front-ms'>字体 front-ms</p>\r\n                    <p className='front-Aria'>字体 front-Aria</p>\r\n                    <p className='front-Helvetica'>字体 front-Helvetica</p>\r\n                    <p className='front-song'>字体 front-song</p>\r\n                    <p className='front-sans-serif'>字体 front-sans-serif</p>\r\n                    <p className='front-black'>字体 front-black</p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default File;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n// import {Form, Icon, Input, Button, Checkbox,} from 'antd';\r\n// import \"antd/dist/antd.css\";\r\nimport '../../assets/css/layout/login.css'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '', //账号\r\n            pwd: '', // 密码\r\n            pwdConfirm: '', // 确认密码\r\n            type: 'worker', // 用户类型 默认求职者\r\n            sex: 3,\r\n            info: '',\r\n        }\r\n    }\r\n\r\n\r\n    //   hasErrors=(fieldsError)=> {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(new Date());\r\n        console.log(\"componentDidMount\");\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    handleUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePwd = (e) => {\r\n        this.setState({\r\n            pwd: e.target.value\r\n        });\r\n    };\r\n\r\n    keyUpFun = (e) => {\r\n        console.log(e.keyCode === 13);\r\n        if (13 === e.keyCode) {\r\n            this.loginFun(e);\r\n        }\r\n    };\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    loginFun = (e) => {\r\n\r\n\r\n        let host = \"http://127.0.0.1\";\r\n        let port = 8001;\r\n        let uri = \"/zero/v2/login/json/process\";\r\n        let url = host + \":\" + port + uri;\r\n        console.log(this.state.username);\r\n        console.log(this.state.pwd);\r\n        console.log(this.state.info);\r\n\r\n\r\n        console.log(url);\r\n        let user = {\r\n            'identifier': this.state.username,\r\n            \"credential\": this.state.pwd,\r\n            \"identityType\": 1\r\n            //identityType\r\n        };\r\n\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败  小于1 失败\r\n                if (null === response && response.data.code < 1) {\r\n                    alert(response.data.msg);\r\n                    this.props.history.push(\"/user\");\r\n                } else {\r\n                    //登录成功，获取到后台返回的数据，可以做缓存\r\n                    console.log(\" 登录成功\" + response.data.msg);\r\n                    // this.props.history.push(\"/blog\");\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n                //this.props.history.push(\"/login\");\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center-all\">\r\n\r\n                <div className=\"heading   \">\r\n                    <h2>登录 Please sign in</h2>\r\n                </div>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"username\" className=\"sr-only\">名称</label>\r\n                    <input type=\"text\"\r\n                           id=\"username\" name=\"identifier\"\r\n                           onChange={this.handleUsername}\r\n                           value={this.state.username}\r\n                           placeholder=\"手机号/邮箱/用户名\"\r\n                           className=\"form-control\"\r\n                           required\r\n                           autoFocus/>\r\n                </p>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"password\"\r\n                           className=\"sr-only\">密码</label>\r\n                    <input type=\"password\"\r\n                           value={this.state.pwd}\r\n                           onChange={this.handlePwd}\r\n                           onKeyUp={this.keyUpFun}\r\n                           className=\"form-control\"\r\n                           placeholder=\"密码\"\r\n                           id=\"password\"\r\n                           name=\"credential\"\r\n                           required/>\r\n                </p>\r\n\r\n                {/*                    <input name=\"rememberMe\" id=\"rememberMe\" type=\"checkbox\"\r\n                           className=\"checkbox\" value=\"true\"/><label\r\n                    htmlFor=\"rememberMe\">30 天内记住我</label>*/}\r\n\r\n                <input name=\"identityType\" type=\"hidden\" value=\"1\"/>\r\n\r\n                <div>\r\n                    <button onClick={this.loginFun} className=\"btn-login-submit \">点我登录</button>\r\n                </div>\r\n\r\n                <div className=\"forgotPasswordContainer CanBePulledDown\"\r\n                     id=\"forgotPasswordDiv\">\r\n                    <a href=\"https://app.yinxiang.com/ForgotPassword.action\"\r\n                       target=\"_top\" className=\"forgot-password\">\r\n                        忘记密码？</a>\r\n                </div>\r\n\r\n                {/*                 <div className=\"Btn Btn_emph Btn_super Btn_Yx\">\r\n                        <img\r\n                            src=\"https://static.app.yinxiang.com/embedded-web/web/static/media/wechat_icon@2x.e20b7172.png\"/>\r\n                        <span>使用微信登录</span>\r\n                    </div>*/}\r\n\r\n\r\n                <div className=\"footer wrapper\">\r\n                    <a href=\"https://www.yinxiang.com/tos/\" className=\"footer-entry\">服务条款</a>\r\n                    <a href=\"https://www.yinxiang.com/privacy/\" className=\"footer-entry\">|隐私政策</a>\r\n                    <span className=\"footer-entry last\">    版权所有 2007 - 2019 笔记。保留所有权利。</span>\r\n                </div>\r\n\r\n                <hr/>\r\n                <h3> 获取输入值账号{this.state.username}</h3>\r\n                <h3> 获取输入值密码{this.state.pwd} </h3>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\nimport '../../../assets/css/system/file/file.css'\r\nimport apis from '../../../config/urls.js';\r\n\r\n\r\nclass FileSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            code: null,\r\n            name: '',\r\n            type: null,\r\n            // info: '',\r\n            // image: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n            images: [],\r\n        }\r\n    }\r\n\r\n\r\n    //搜索 获取图片的集合\r\n    searchForImageList = (filename) => {\r\n        console.log(\"######## 搜索 获取图片的集合 #########\");\r\n        let url = apis.file.listFileByQuery;\r\n\r\n        let query = {};\r\n        console.log(filename);\r\n        query.name = this.state.name;\r\n        // query.name = this.state.name;\r\n        axios.post(url, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            if (code === 1) {\r\n                this.setState({\r\n                    images: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForImageList(null);\r\n    }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                {this.state.name}\r\n\r\n                <div className=\"front-black\">检索图片</div>\r\n\r\n\r\n                <p>\r\n                    {/*<label htmlFor=\"username\" className=\"sr-only\">名称</label>*/}\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                        // required\r\n                        //    value={this.state.name}\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForImageList}>搜索</button>\r\n                </p>\r\n\r\n\r\n                {this.state.images.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.name}${value.id}`}>\r\n                            <img\r\n                                key={`${value.name}${value.id}`}\r\n                                src={value.url}\r\n                                className='image-node'\r\n                                alt=''></img>\r\n                            <p className='front-black'>{value.name}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <h2>完</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileSearch;\r\n","import Index from \"../components/basic/Index\";\r\nimport User from \"../components/system/rbac/user/User\";\r\nimport UserList from \"../components/system/user/UserList\";\r\nimport Role from \"../components/system/rbac/Role\";\r\nimport RoleInsert from \"../components/system/rbac/RoleInsert\";\r\nimport UserInsert from \"../components/system/user/UserInsert\";\r\nimport Food from \"../components/app/food/Food\";\r\nimport Blog from \"../components/app/blog/Blog\";\r\nimport ManageBlog from \"../components/app/blog/ManageBlog\";\r\nimport BlogDetail from \"../components/app/blog/BlogDetail\";\r\nimport BlogMd from \"../components/app/blog/BlogMd\";\r\nimport FoodDetails from \"../components/app/food/FoodDetails\";\r\nimport File from \"../components/system/file/File\";\r\nimport Login from \"../components/basic/Login\";\r\nimport FileSearch from \"../components/system/file/FileSearch\";\r\nimport Menu from \"../components/system/menu/Menu\";\r\nimport React from \"react\";\r\n\r\nconst routers = [\r\n    {\r\n        path: \"/index\",\r\n        component: Index,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/user\",\r\n        component: User,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/user-list\",\r\n        component: UserList,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/role\",\r\n        component: Role,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/roleInsert/:aid\",\r\n        component: RoleInsert,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/userInsert\",\r\n        component: UserInsert,\r\n        exact: true\r\n    },\r\n    //app 模块的\r\n    {\r\n        path: \"/blog\",\r\n        component: Blog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/manage-blog\",\r\n        component: ManageBlog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/blog-detail\",\r\n        component: BlogDetail,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/bmd\",\r\n        component: BlogMd,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/food\",\r\n        component: Food,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/FoodDetails\",\r\n        component: FoodDetails,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file\",\r\n        component: File,\r\n        exact: true,\r\n        routes: [\r\n            {\r\n                path: \"/file-add\",\r\n                component: Login,\r\n                exact: true\r\n            }, {\r\n                path: \"/file-update\",\r\n                component: Login,\r\n                exact: true\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: Login,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file-search\",\r\n        component: FileSearch,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/menu\",\r\n        component: Menu,\r\n        exact: true\r\n    }\r\n];\r\n\r\nexport default routers;\r\n\r\n//                        reder={props=>(\r\n//                             <route.component{... props} routers={route.children}>\r\n//                         )\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import {Link} from \"react-router-dom\";\r\n// import  Home from '../../../components/layout/Home'\r\nimport '../../../assets/css/system/menu/menu.css'\r\nimport apis from '../../../config/urls.js';\r\n\r\n\r\nclass Menu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            parentId: null,\r\n            systemId: null,//适用系统的id\r\n            code: null,\r\n            name: \"测试\",\r\n            nameEnglish: null,\r\n            sort: 0,\r\n            level: 0,// 级别，1=第一级，2=第二级，，，\r\n            state: 1,// 状态，暂时规划true=非0/false=0\r\n            url: null,// 菜单URL地址\r\n            icon: null,// icon地址\r\n            note: null,\r\n\r\n\r\n            raw: {\r\n                id: null,\r\n                parentId: null,\r\n                systemId: null,//适用系统的id\r\n                code: null,\r\n                name: \"测试\",\r\n                nameEnglish: null,\r\n                sort: 0,\r\n                level: 0,// 级别，1=第一级，2=第二级，，，\r\n                state: 1,// 状态，暂时规划true=非0/false=0\r\n                url: null,// 菜单URL地址\r\n                icon: null,// icon地址\r\n                note: null,\r\n            },\r\n            // info: '',\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForMenuList(\"\");\r\n    }\r\n\r\n    //请求服务器获取数据集合\r\n    searchForMenuList = (e) => {\r\n        let url = apis.menu.listMenu;\r\n        let query = {};\r\n        axios.post(url,query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(response.config);\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(\"###################\");\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n\r\n\r\n    };\r\n\r\n\r\n    /*\r\n        searchForMenuList = (name) => {\r\n            let url = apis.menu.listMenu;\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n\r\n            console.log(\"######## 搜索 获取图片的集合 #########\");\r\n            let query = {};\r\n            // console.log(filename);\r\n            // query.name = this.state.name;\r\n            // query.name = this.state.name;\r\n            axios.post(url,query).then(response => {\r\n                console.log(\"##### response ####\");\r\n                console.log(response);\r\n                console.log(\"###################\");\r\n                let code = response.data.code;\r\n                // //失败  小于1 失败\r\n                // if (null === response && response.data.code == 1) {\r\n                //     // this.props.history.push(\"/Success\");\r\n                if (code === 1) {\r\n                    let arr = [];\r\n                    // arr.push(this.state.raw);\r\n                    // console.log(\"arr.push(response.data.data);\");\r\n                    // console.log(response.data.data);\r\n                    let resultArray = arr.concat(response.data.data);\r\n                    console.log(resultArray);\r\n                    this.setState({\r\n                        list: resultArray\r\n                    });\r\n                    console.table(this.state.images);\r\n                }\r\n                //\r\n                // } else {\r\n                //     alert(response.data.msg);\r\n                //     alert(\"FAIL\");\r\n                //     console.log(\"FAIL\");\r\n                //     console.log(response);\r\n                //     // this.props.history.push(\"/file-search\");\r\n                // }\r\n            })\r\n                // .catch(function (error) {\r\n                //     //异常\r\n                //     console.log(error);\r\n                //     console.log('catch 异常',);\r\n                // });\r\n            ;\r\n        };\r\n    */\r\n\r\n    //请求服务器 保存数据\r\n    saveMenu = (e) => {\r\n        console.log(\"######## saveMenu #########\");\r\n        let url = apis.menu.saveMenu;\r\n        console.log(url);\r\n        //input 的参数怎么获取\r\n\r\n\r\n        let request = {};\r\n        request.parentId = this.state.parentId;\r\n        request.code = null;\r\n        request.name = this.state.name;\r\n        request.systemId = this.state.systemId;\r\n        request.sort = this.state.sort;\r\n        request.level = this.state.level;\r\n        request.state = this.state.state;\r\n        request.url = this.state.url;\r\n        request.icon = this.state.icon;\r\n        request.note = this.state.note;\r\n\r\n        //request  .nameEnglish = this.state.nameEnglish;\r\n        console.table(this.state);\r\n        console.table(request);\r\n        console.log(request);\r\n\r\n        // query.name = this.state.name;\r\n        axios.post(url, request).then(response => {\r\n\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n\r\n                // this.setState({\r\n                // });\r\n            }\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        //异常\r\n            .catch(function (error) {\r\n                alert(error);\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    /////////////////////////////////\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n\r\n            // raw: {\r\n            //     [inputName]: inputValue\r\n            // }\r\n        })\r\n    }\r\n\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    //获取input的值\r\n    handleInputOnChange = (event) => {\r\n        console.log(event);\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        //如何知道是那个id的input框 ？\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Menu</h1>\r\n                <h2>Menu</h2>\r\n                <h3>  {this.state.name}</h3>\r\n                <h4>  {this.state.note}</h4>\r\n                <h4>  {this.state.systemId}</h4>\r\n                <h4>  {this.state.sort}</h4>\r\n                <hr/>\r\n\r\n\r\n                <div className=\"front-black\">检索菜单</div>\r\n                <p>\r\n                    {/*<label htmlFor=\"username\" className=\"sr-only\">名称</label>*/}\r\n                    <input type=\"text\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                           required\r\n                        // value={this.state.name}\r\n                        // defaultValue={this.state.name}\r\n\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForMenuList}>搜索</button>\r\n                </p>\r\n\r\n\r\n                {/* save insert 创建    新增 新建的框框*/}\r\n                <form className='image-node'>\r\n\r\n                    <div>\r\n                        名称：<input type=\"text\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  placeholder=\"name\"\r\n                                  autoFocus\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        地址：<input type=\"text\"\r\n                                  id=\"url\"\r\n                                  name=\"url\"\r\n                                  placeholder=\"url\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n\r\n                        系统：<input type=\"text\"\r\n                                  id=\"systemId\"\r\n                                  name=\"systemId\"\r\n                                  placeholder=\"systemId\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        上级：<input type=\"text\"\r\n                                  id=\"parentId\"\r\n                                  name=\"parentId\"\r\n                                  placeholder=\"parentId\"\r\n                        // required\r\n                        //    value={this.state.name}\r\n                                  className='menu-input-save'\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        状态：<input type=\"text\"\r\n                                  id=\"state\"\r\n                                  name=\"state\"\r\n                                  placeholder=\"state\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        注释：<input type=\"text\"\r\n                                  id=\"note\"\r\n                                  name=\"note\"\r\n                                  placeholder=\"note\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n                    排序：<input type=\"text\"\r\n                              id=\"sort\"\r\n                              name=\"sort\"\r\n                              placeholder=\"sort\"\r\n                              className=\"menu-input-save-sort\"\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n\r\n\r\n                    {/*nameEnglish  icon  */}\r\n                    <button\r\n                        className=\"node-for-save-btn\"\r\n                        onClick={e => this.saveMenu(e)}>保存\r\n                    </button>\r\n\r\n                </form>\r\n\r\n                {/*渲染list 数据*/}\r\n\r\n                {this.state.list.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.id}${value.name}`}\r\n                             className='image-node'\r\n                        >\r\n                            id:{value.id}\r\n                            <br/>\r\n                            systemId:{value.systemId}\r\n                            <br/>\r\n                            pId:{value.parentId}\r\n                            <br/>\r\n                            sort{value.sort} <br/>\r\n                            name:{value.name}\r\n                            <br/>\r\n                            level:{value.level}\r\n                            <br/>\r\n                            state:{value.state}\r\n                            <br/>\r\n                            url:{value.url}\r\n                            <br/>\r\n                            icon:{value.icon}\r\n                            <br/>\r\n                            {/*note:{value.note}*/}\r\n                            {/*createDate:{value.createDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*updateDate:{value.updateDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*<p className='front-black'>{value.name}</p>*/}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// import Role from '../system/rbac/Role';\r\n// import UserList from '../system/user/UserList';\r\n// import User from '../system/rbac/user/User';\r\n// import UserInsert from '../system/user/UserInsert';\r\n// import RoleInsert from '../system/rbac/RoleInsert';\r\n// import File from '../system/file/File';\r\n// import Login from '../basic/Login';\r\n// import Food from '../app/food/Food';\r\n// import Index from '../basic/Index';\r\n// import FoodDetails from '../app/food/FoodDetails';\r\n// import FileSearch from '../system/file/FileSearch';\r\n// import Menu from '../system/menu/Menu';\r\n\r\n//路由与 api接口地址抽取\r\nimport routers from '../../config/router.js';\r\nimport apis from '../../config/urls.js';\r\n\r\n//css\r\nimport '../../assets/css/layout/home.css'\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    //初始化函数触发\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"componentDidMount--初始化的时候去获取菜单数据\");\r\n        this.getMenusFun();\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    // 初始化的时候去获取菜单数据\r\n    getMenusFun = (e) => {\r\n        var systemId = 4;\r\n        var level = 0;//0 全部\r\n        //localhost:8001/zero/menus/2/levels/0\r\n        // var url = \"http://arc.com/zero/menus/\" + menuId + \"/levels/\" + level;\r\n\r\n        let url = apis.listMenusBySystemIdAndLevel;\r\n        url = url.replace(\"SYSTEM_ID\", systemId);\r\n        url = url.replace(\"LEVEL\", level);\r\n        console.log(url);\r\n\r\n        axios.get(url).then(response => {\r\n            console.log(\"########## response #########\");\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n            console.log(\"########## response.data #########\");\r\n            console.log(response.data);\r\n            console.log(\"###################\");\r\n\r\n\r\n            if (response != null) {\r\n                console.log(\"########## response.data.data #########\");\r\n                //成功，获取到后台返回的数据，可以做缓存\r\n                console.log(response.data.msg);\r\n                console.log(response.data.data);\r\n                console.log(\"###################\");\r\n                // this.props.history.push(\"/Success\");\r\n                this.setState({\r\n                    list: response.data.data\r\n                })\r\n            }\r\n\r\n\r\n            //失败  小于1 失败\r\n            if (null === response && response.data.code < 1) {\r\n                alert(response.data.msg);\r\n                console.log(\"FAIL\");\r\n                this.props.history.push(\"/index\");\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常 被 catch',);\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Router>\r\n                    <div className=\"title\">\r\n                        {\r\n                            this.state.list.map((value, key) => {\r\n                                return (\r\n                                    <Link key={key} to={value.url}>{value.name}</Link>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        routers.map((route, key) => {\r\n                            if (route.exact) {\r\n                                return <Route exact\r\n                                              key={route.path}\r\n                                              path={route.path}\r\n                                              render={props => (\r\n                                                  <route.component{...props} routes={route.routes}/>\r\n                                              )}/>;\r\n                            } else {\r\n                                return <Route\r\n                                    key={route.path}\r\n                                    path={route.path}\r\n                                    render={props => (\r\n                                        <route.component{...props} routes={route.routes}/>\r\n                                    )}/>;\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                    {/*<Route exact path=\"/user\" component={User}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/roleInsert/:aid\" component={RoleInsert}/>*/}\r\n                    {/*<Route exact path=\"/userInsert\" component={UserInsert}/>*/}\r\n                    {/*<Route exact path=\"/food\" component={Food}/>*/}\r\n                    {/*<Route exact path=\"/foodDetails\" component={FoodDetails}/>*/}\r\n                    {/*<Route exact path=\"/file\" component={File}/>*/}\r\n                    {/*<Route exact path=\"/login\" component={Login}/>*/}\r\n                    {/*<Route exact path=\"/index\" component={Index}/>*/}\r\n                    {/*<Route exact path=\"/user-list\" component={UserList}/>*/}\r\n                    {/*<Route exact path=\"/file-search\" component={FileSearch}/>*/}\r\n                    {/*<Route exact path=\"/menu\" component={Menu}/>*/}\r\n\r\n\r\n                </Router>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// 原始的\r\n//              {\r\n//                         routers.map((route, key) => {\r\n//                             if (route.exact) {\r\n//                                 return <Route exact path={route.path} component={route.component} key={route.path}/>\r\n//                             }\r\n//                         })\r\n//\r\n//                     }\r\n","import React from 'react';\nimport Home from './components/layout/Home';\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\n// import User from \"./components/system/rbac/user/User\";\n\nfunction App() {\n    return (\n        <div>\n            <Home/>\n            {/*<User/>*/}\n        </div>\n    )\n        ;\n}\n\nexport default App;\n\n// import logo from './assets/image/logo.svg';\n// import './assets/App.css';\n// import './assets/index.css';\n// import Main from './components/layout/Main';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}