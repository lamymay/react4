{"version":3,"sources":["components/basic/Index.js","components/test/CssTest.js","components/system/rbac/Role.js","components/system/rbac/user/UserInsert.js","config/urls.js","components/system/rbac/user/User.js","components/system/resource/Resource.js","components/system/rbac/RoleInsert.js","components/app/food/Food.js","components/app/blog/Blog.js","components/app/blog/ManageBlog.js","components/app/blog/BlogDetail.js","components/app/blog/BlogMd.js","components/app/food/FoodDetails.js","components/system/menu/Menu.jsx","components/basic/Login.js","components/system/file/FileUpload2.jsx","components/system/file/FileDownload2.jsx","components/system/file/FileSearch.jsx","components/system/file/FileManage.jsx","components/system/file/File.jsx","config/router.js","components/app/shop/ShoppingReceipt.js","components/layout/Home.js","App.js","serviceWorker.js","index.js"],"names":["Index","props","state","React","Component","CssTest","getCssTests","bgColor","list","aid","avatar","nickname","textStyles","color","backgroundColor","this","map","value","key","className","style","width","height","fontSize","textAlign","href","Role","getUsers","roles","title","to","UserInsert","saveUser","console","log","id","visible","visibleForInsert","setState","wrapClassName","onOk","executeInsertModal","onCancel","cancelInsertModal","layout","onSubmit","updateUser","Item","placeholder","onChange","event","handleMaxBackUp","type","htmlType","prefixUri","host","urls","listMenusBySystemIdAndLevel","file","downloadFileByIdOrCode","uploadFile","deleteFile","save","getByIdOrCode","listFileByQuery","listPage","resource","scan","delete","update","getByCode","blog","saveBlog","updateBlog","getBlogArticleByUserId","listBlogByAuthorId","menu","listMenu","saveMenu","user","index","listUser","listPageUser","receipt","User","refreshTable","axios","post","then","response","data","code","msg","alert","fromDb","users","catch","error","showModal","flag","e","tableTitle","test","inputValue","target","inputName","name","columns","dataIndex","render","text","record","onClick","remove","bind","onInputChange","rowKey","dataSource","pageSize","bordered","url","get","Resource","dataFromDb","content","scanResourceFromController","high","RoleInsert","match","params","Food","getFoods","Blog","getTimelineListFun","apis","status","headers","config","table","images","Date","authorId","tagId","sortId","description","publishDate","createDate","updateDate","timeLine","ManageBlog","getManageBlog","category","version","sortWeight","modal2Visible","add","setModal2Visible","BlogDetail","mdEditor","mdParser","getArticle","article","markdown","postBody","body","MarkdownIt","html","linkify","typographer","highlight","str","lang","use","emoji","subscript","superscript","footnote","deflist","abbreviation","insert","mark","renderHTML","t1","t2","secondsElapsed","Promise","resolve","setTimeout","ref","node","view","md","imageUrl","BlogMd","handleEditorChange","updateArticleFun","uri","Object","interval","setInterval","tick","clearInterval","ret","callback","reader","FileReader","onImageUpload","handleImageUpload","FoodDetails","query","parse","location","search","Menu","searchForMenuList","request","parentId","systemId","sort","level","icon","note","handleGetInputValue","nativeEvent","keyCode","searchForImageList","handleInputOnChange","nameEnglish","raw","autoFocus","required","onKeyUp","Login","handleUsername","username","handlePwd","pwd","keyUpFun","loginFun","info","history","push","pwdConfirm","sex","htmlFor","FileUpload2","fileList","uid","routes","action","authorization","message","success","fileName","FileDownload2","getFile","symbol","trim","responseType","FileDownload","alertMessage","searchForDownloadFile","FileSearch","filename","src","alt","FileManage","statusText","contentType","contentDisposition","length","lengthUnit","download","File","showFileDownload","display_name","background","display","routers","path","component","exact","saveShoppingReceipt","totalFinalPrice","transactionTime","priceUnit","Home","getMenusFun","replace","route","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.722494cf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>欢迎主页|WELCOME</h1>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\n// import user from '../../../../assets/css/system/rbac/user.css'\r\n\r\nclass CssTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgColor:'blue',\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }, {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getCssTests = () => {\r\n\r\n    };\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        const textStyles = {\r\n            color: 'black',\r\n            backgroundColor: this.state.bgColor\r\n        };\r\n        return (<div>\r\n            {/*<div  style=\"background-color:red;\">style</div>*/}\r\n            <h1>CssTest</h1>\r\n\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        {/*<Link to={`/userInsert?aid=${value.aid}`}>{value.nickname}</Link>*/}\r\n                        <p  className='user-item'>{value.aid}|{value.nickname}</p>\r\n                        {/*<p  style=\"background-color:red;\">{value.aid}|{value.nickname}</p>*/}\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <br/>\r\n            <br/>\r\n            <hr/>\r\n            1. 行内样式\r\n            <div\r\n                style={{\r\n                    width:'200px',\r\n                    height:'80px',\r\n                    backgroundColor:'yellow',\r\n                    fontSize:'24px',\r\n                    textAlign:'center'\r\n                }}>\r\n            <a href=\"https://github.com/lamymay/zero\">后端源码 github</a>\r\n            <a href=\"https://github.com/lamymay/react4\">前端源码 github</a>\r\n            </div>\r\n\r\n            2. 声明样式\r\n            <p style={textStyles}>inline style</p>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default CssTest;\r\n\r\n//https://segmentfault.com/a/1190000016952542?utm_source=tag-newest\r\n//测试引入css的方式\r\n// 1、行内引入， 特点：即在行内直接写，未能测试通过，报错，切支持度按网上说法也不是很全要驼峰编写\r\n// 2、页内引入，特点：写const变量，这样数据与js会在一起，维护调试不是很方便\r\n//3、外部引入，推荐，特点：与原生几乎一样，\r\n// 第三种的用法：1js头部 “import user from '../../../../assets/css/system/rbac/user.css'” 2使用 \"<p  className='user-item'>{value.aid}|{value.nickname}</p>\"\r\n","import React from \"react\";\r\n// import RoleInsert from './RoleInsert'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Role extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>GET 角色-动态传值测试</h2>\r\n\r\n                <ul>\r\n                    {this.state.roles.map((value, key) => {\r\n                        return <li key={key}>\r\n                            <Link to={`/roleInsert/${value.aid}`}>{value.title}</Link>\r\n                        </li>\r\n\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nimport {Button, Card, Form, Input, Modal} from \"antd\";\r\n\r\n// 新增用户\r\nclass UserInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            id: -1,\r\n            visible: false\r\n            //\r\n            // roles: [\r\n            //     {\r\n            //         aid: '1',\r\n            //         title: '标题1'\r\n            //     }, {\r\n            //         aid: '2',\r\n            //         title: '标题2'\r\n            //     }\r\n            //     , {\r\n            //         aid: '3',\r\n            //         title: '标题3'\r\n            //     }\r\n            //     , {\r\n            //         aid: '4',\r\n            //         title: '标题4'\r\n            //     }\r\n            // ]\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"ch ch ch\");\r\n\r\n        console.log(this.props.visibleForInsert);\r\n        // console.log(this.state.visible);\r\n\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        // let query = url.parse(this.props.location.search, true).query;\r\n        // console.log(query);\r\n        // console.log(this.state.id);\r\n    }\r\n\r\n\r\n    saveUser = () => {\r\n        console.log(\"save!!!!!!\");\r\n    };\r\n\r\n    //\r\n    // getInitialState() {\r\n    //     return {\r\n    //         modal2Visible: false,\r\n    //     };\r\n    // }\r\n\r\n    cancelInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n\r\n            <Modal\r\n                title=\"垂直居中的对话框\"\r\n                wrapClassName=\"vertical-center-modal\"\r\n                visible={this.props.visibleForInsert}\r\n                onOk={() => this.executeInsertModal(false)}\r\n                onCancel={() => this.cancelInsertModal(false)}\r\n            >\r\n\r\n\r\n                <p>对话框的内容= {this.props.visibleForInsert}</p>\r\n                <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                    <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                    </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                    <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInsert;\r\n","// const host = \"http://127.0.0.1:8001\";\r\nconst host = \"http://122.51.110.127:80\";\r\nconst prefixUri = host + \"/zero\";\r\n\r\n// 说明 通常来说\r\n// GET 方法的uri，变量名称的关键字一般有：get\r\n// POST 方法的uri，变量名称的关键字一般有：listXXXByyy\r\n\r\nconst urls = {\r\n    listMenusBySystemIdAndLevel: prefixUri + \"/menus/SYSTEM_ID/levels/LEVEL\",\r\n\r\n    //文件相关\r\n    file: {\r\n        //文件下载 download 返回流\r\n        downloadFileByIdOrCode: prefixUri + \"/files/\",\r\n        //上传文件\r\n        uploadFile: prefixUri + \"/files/upload\",\r\n\r\n        //文件操作 删除文件 & 文件记录\r\n        deleteFile: prefixUri + \"/files/delete/\",\r\n\r\n        //文件记录\r\n        save: prefixUri + \"/sys/file/save\",\r\n        getByIdOrCode: prefixUri + \"/files/\",\r\n        listFileByQuery: prefixUri + \"/sys/file/list\",\r\n        // delete: prefixUri + \"/sys/file/delete/id/\",\r\n        listPage: prefixUri + \"/sys/file/page\",\r\n    },\r\n\r\n    //resource 完全使用 RESTFul  ?  ，项目中使用get + post 来实现\r\n    resource: {\r\n        // GET 扫描所有controller资源\r\n        scan: prefixUri + \"/sys/resource/scan/controller\",\r\n        save: prefixUri + \"/sys/resource\",\r\n        delete: prefixUri + \"/sys/resource/\",\r\n        update: prefixUri + \"/sys/resource/id\",\r\n        getByCode: prefixUri + \"/resource/\",\r\n        listPage: prefixUri + \"/sys/resource/page\",\r\n        listFileByQuery: prefixUri + \"/sys/resource/list\",\r\n    },\r\n    blog: {\r\n        saveBlog: prefixUri + \"/v1/blogs/save\",\r\n        updateBlog: prefixUri + \"/v1/blogs/update\",\r\n        getBlogArticleByUserId: prefixUri + \"/v1/blogs/\",\r\n        listBlogByAuthorId: prefixUri + \"/v1/blogs/timeline/\",\r\n    },\r\n    menu: {\r\n        listMenu: prefixUri + \"/menus/list\",\r\n        saveMenu: prefixUri + \"/menus/save\",\r\n    },\r\n    user: {\r\n        index: \"/user\",\r\n        listUser: prefixUri + \"/sys/users/list\",\r\n        saveUser: prefixUri + \"/sys/users/save\",\r\n        delete: prefixUri + \"/sys/users/delete/\",\r\n        listPageUser: prefixUri + \"/sys/users/page\",\r\n    },\r\n    receipt: {\r\n        index: \"/receipt\",\r\n        // list  : prefixUri + \"/receipt/list\",\r\n        listPage: prefixUri + \"/shopping/receipt/page\",\r\n        delete: prefixUri + \"/shopping/receipt/delete/\",\r\n        save: prefixUri + \"/shopping/receipt/save\",\r\n        update: prefixUri + \"/shopping/receipt/update\",\r\n    }\r\n};\r\n\r\n\r\nexport default urls;\r\n\r\n// const uriListFile = \"listFile\";\r\n// const profile = \"local\";\r\n// const profile = \"prod_160\";\r\n// function getUriPrefix(key) {\r\n//     if (key === \"local\") {\r\n//         //local\r\n//         return \"http://127.0.0.1:8001\";\r\n//     } else if (key === \"prod_160\") {\r\n//         //160\r\n//         return \"http://122.51.110.127:80\";\r\n//     }\r\n// }\r\n//\r\n// function getUri(key) {\r\n//     let host = getUriPrefix(profile);\r\n//\r\n//     if (key === uriListFile) {\r\n//         return host + \"/zero/sys/file/list\";\r\n//     } else if (key === \"saveMenu\") {\r\n//         return host + \"/zero/111111/sys/file/list\";\r\n//     }\r\n// }\r\n// function getUri(key) {\r\n//\r\n//     //local\r\n//     let protocol = \"http://\";\r\n//     let host = \"127.0.0.1\";\r\n//     let port = 8001;\r\n//     // let listMenu = protocol+host+':'+port+'/zero/menus/list';\r\n//     // let saveMenu = protocol+host+':'+port+'/zero/menus/save';\r\n//\r\n//     let httpLocal = new Object();\r\n//     httpLocal.listMenu = protocol + host + ':' + port + '/zero/menus/list';\r\n//     httpLocal.saveMenu = protocol + host + ':' + port + '/zero/menus/save';\r\n//\r\n//\r\n//     //  160\r\n//     let protocol_160 = \"http://\";\r\n//     let host_160 = \"122.51.110.127\";\r\n//     let port_160 = 80;\r\n//\r\n//     let http160 = new Object();\r\n//     http160.listMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/list';\r\n//     http160.saveMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/save';\r\n//\r\n//\r\n//     //数据封装到map\r\n//     let map = new Map();\r\n//     let local = \"local\";\r\n//     let prod_160 = \"prod_160\";\r\n//     map.set(local, httpLocal);\r\n//     map.set(prod_160, http160);\r\n//     console.log(\"------------------------- get ------------\");\r\n//     console.log(map);\r\n//     console.log(map.size);\r\n//     console.log(map.keys());\r\n//     console.log(map.entries());\r\n//     //从map中获取value  每次只要修改这里即可\r\n//     // let uris = map.get(local);\r\n//     let uris = map.get(prod_160);\r\n//     if (key === \"listMenu\") {\r\n//         return uris.listMenu;\r\n//     } else if (key === \"saveMenu\") {\r\n//         return uris.saveMenu;\r\n//     }\r\n// }\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\n\r\nimport UserInsert from \"./UserInsert\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n} from 'antd';\r\nimport urls from \"../../../../config/urls\";\r\n\r\nclass User extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"用户列表\",\r\n            users: [],\r\n            visibleForInsert: false,\r\n            test: \"453455454\"\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.refreshTable();\r\n    }\r\n\r\n    refreshTable = () => {\r\n        axios.post(urls.user.listPageUser, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n                    console.log(\"refreshTable\");\r\n                    console.log(response.data.msg);\r\n                    console.log(response.data.msg);\r\n                    console.log(response.data.msg);\r\n                }\r\n\r\n\r\n                //失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n\r\n    };\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveUser = (e) => {\r\n        axios.post(urls.user.saveUser, {\r\n            nickname: this.state.nickname,\r\n            state: this.state.state == null ? 0 : this.state.state\r\n\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    nickname: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        })\r\n\r\n\r\n        //异常\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                alert(response);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            // {\r\n            //     key: 'id',\r\n            //     title: '测试合并',\r\n            //     render: (text, record) => (\r\n            //         <span>\r\n            //            {record.nickname}--\r\n            //             {record.avatar}>\r\n            //             </span>\r\n            //     )\r\n            // },\r\n            {\r\n                key: 'nickname',\r\n                title: '昵称',\r\n                dataIndex: 'nickname',\r\n                width: 150\r\n            },\r\n            // {\r\n            //     key: 'avatar',\r\n            //     title: '标识',\r\n            //     dataIndex: 'avatar'\r\n            // },\r\n            {\r\n                key: 'state',\r\n                title: '启用状态',\r\n                dataIndex: 'state'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                        <Button onClick={this.remove.bind(this, record.id)}>删除-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                <Button type=\"primary\" onClick={this.showModal}>新增人员 </Button>\r\n                {/*<Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>*/}\r\n                {/*<Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n\r\n                {/*<UserInsert visibleForInsert={this.state.visibleForInsert} user={this}/>*/}\r\n\r\n                <Modal\r\n                    title=\"新增用户\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.visibleForInsert}\r\n                    onOk={() => this.executeInsertModal(false)}\r\n                    onCancel={() => this.cancelInsertModal(false)}\r\n                >\r\n\r\n                    {/* save insert 创建    新增 新建的框框*/}\r\n                    <div>\r\n\r\n\r\n                        <div>\r\n                            昵称：<input type=\"text\"\r\n                                      name=\"nickname\"\r\n                                      name=\"nickname\"\r\n                                      placeholder=\"nickname\"\r\n                                      autoFocus\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        <div>\r\n                            状态：<input type=\"text\"\r\n                                      id=\"state\"\r\n                                      name=\"state\"\r\n                                      placeholder=\"state\"\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        {/*<div>*/}\r\n                        {/*    avatar：<input type=\"text\"*/}\r\n                        {/*              id=\"avatar\"*/}\r\n                        {/*              name=\"avatar\"*/}\r\n                        {/*              placeholder=\"avatar\"*/}\r\n                        {/*              onChange={e => this.onInputChange(e)}*/}\r\n                        {/*/>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n\r\n\r\n                </Modal>\r\n\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = urls.user.delete + id;\r\n        console.log(url);\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\n\r\n\r\n//对于 Resource 的CRUD\r\nclass Resource extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"资源列表\",\r\n            visibleForInsert: false,\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.resource.listPage, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                    console.log(this.state.list);\r\n\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    scanResourceFromController = () => {\r\n        axios.get(urls.resource.scan, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n                    var dataFromDb = response.data.data.content;\r\n\r\n                    //赋值\r\n                    this.setState({list: response.data.data.content});\r\n                    console.log(this.state.list);\r\n\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n        console.log(\"############ scanResourceFromController ###########\");\r\n        // this.refreshTable();\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            // {key: 'code', title: 'code', dataIndex: 'code', width: 20, high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'parentId', title: 'parentId', dataIndex: 'parentId'},\r\n            {key: 'note', title: 'note', dataIndex: 'note'},\r\n            {key: 'priority', title: 'priority', dataIndex: 'priority'},\r\n            {key: 'type', title: 'type', dataIndex: 'type'},\r\n            {key: 'resourceName', title: 'resourceName', dataIndex: 'resourceName', high: 20},\r\n            {key: 'method', title: 'method', dataIndex: 'method', width: 20, high: 20},\r\n            {key: 'path', title: 'path', dataIndex: 'path'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n            //列名称--数据源的字段名\r\n            // {key: 'id', title: '文件大小', render: (text, record) => (<span>    {record.size} {record.sizeUnit}</span>)},\r\n\r\n            {\r\n                key: 'remove', title: '操作',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                        <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n            <button onClick={this.scanResourceFromController}>扫描</button>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>hh\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        axios.get(urls.file.delete + id).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Resource;\r\n","import React from \"react\";\r\n\r\n\r\nclass RoleInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //生命周期函数中获取 GET传值\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n\r\n        console.log(\"*******************\");\r\n        console.log(this.props);\r\n        console.log(\"*******************\");\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1> 新增角色</h1>\r\n            <h2> 新增角色</h2>\r\n            <h3> 新增角色</h3>\r\n            <h4> 新增角色</h4>\r\n            <h5> 新增角色</h5>\r\n            <h6> 新增角色</h6>\r\n\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default RoleInsert;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Food extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    title: 'food1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: 'food2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: 'food3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: 'food4'\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getFoods = () => {\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>Food</h1>\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        <Link to={`/foodDetails?aid=${value.aid}`}>{value.title}</Link>\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Food;\r\n","import React from \"react\";\r\nimport {Timeline} from 'antd';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass Blog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 13,\r\n            authorId: '', // 作者，所属用户ID[多作者请在描述中填充第二作者信息]\r\n            tagId: '', // 栏目ID\r\n            sortId: '',// 所属分类\r\n            status: '',// 文章的模式:0为私有，1为公开，2为仅好友查看\r\n            title: '',// 文章名称-64\r\n            description: '',// 文章描述-128\r\n            content: '',// 文章内容[text]\r\n            publishDate: '',// 发布时间\r\n            createDate: '',// 创建时间(创建未发表)\r\n            updateDate: '',// 更新时间\r\n\r\n            //时间线 渲染列表\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n        this.getTimelineListFun();\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    // 获取博客数据  图片 + 文字，这里应该获取的是文字数据 阅读数等\r\n    getTimelineListFun = (e) => {\r\n        var uId = 1;\r\n        let url = apis.blog.listBlogByAuthorId + uId;\r\n        console.log(\"--- url ---\");\r\n        console.log(url);\r\n        console.log(url);\r\n        console.log(url);\r\n\r\n\r\n        axios.get(url).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n    onClick = (e) => {\r\n        console.log(new Date());\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/*<Timeline>*/}\r\n                {/*    <Timeline.Item color=\"green\">AAA</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">BB</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">C</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"red\">Create</Timeline.Item>*/}\r\n                {/*</Timeline>*/}\r\n\r\n                <Timeline className='list'>\r\n                    {\r\n                        this.state.list.map((value, key) => {\r\n                            return (\r\n                                <Timeline.Item key={key}\r\n                                               // onClick={this.onClick()}\r\n                                >\r\n                                    <Link to={'/blog-detail'} type=\"span\">{value.timeLine}     </Link>\r\n                                </Timeline.Item>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </Timeline>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\nclass ManageBlog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            id: null,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: null,\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    getInitialState() {\r\n        return {\r\n            modal2Visible: false,\r\n        };\r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({modal2Visible});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.getManageBlog();\r\n\r\n    }\r\n\r\n    // hasErrors(fieldsError) {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    getManageBlog = () => {\r\n        var port = 80;\r\n        var url = \"http://127.0.0.1:\" + port + \"/zero/blogs/page\";\r\n        console.log(\"######################################\");\r\n        console.log(url);\r\n        console.log(\"######################################\");\r\n        let user = {};\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n                //登录成功，获取到后台返回的数据，可以做缓存\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //更新用户\r\n    updateUser = (e) => {\r\n        console.log(\"uuuuuuuuuuuu\");\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '测试合并',\r\n                render: (text, record) => (\r\n                    <span>\r\n                       {record.id}--\r\n                        {record.version}>\r\n                        </span>\r\n                )\r\n            },\r\n            {\r\n                key: 'authorId',\r\n                title: '作者id',\r\n                dataIndex: 'authorId',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'title',\r\n                title: 'title',\r\n                dataIndex: 'title',\r\n                width: 150\r\n            }, {\r\n                key: 'description',\r\n                title: 'description',\r\n                dataIndex: 'description',\r\n                width: 150\r\n            }, {\r\n                key: 'content',\r\n                title: 'content',\r\n                dataIndex: 'content',\r\n                width: 150\r\n            }, {\r\n                key: 'version',\r\n                title: 'version',\r\n                dataIndex: 'version',\r\n                width: 150\r\n            }, {\r\n                key: 'sortWeight',\r\n                title: 'sortWeight',\r\n                dataIndex: 'sortWeight',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'tagId',\r\n                title: '标签',\r\n                dataIndex: 'tagId'\r\n            }, {\r\n                key: 'category',\r\n                title: '分类',\r\n                dataIndex: 'category'\r\n            },\r\n            {\r\n                key: 'status',\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.add}>add {record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={\"基础表格\"}>\r\n                {/*    <Button type=\"primary\" onClick={this.updateUser}>测试 primary与后台交互</Button>\r\n                <Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>\r\n                <Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n                <Button type=\"dashed\" onClick={() => this.setModal2Visible(true)}>显示垂直居中的对话框</Button>\r\n\r\n                <Modal\r\n                    title=\"垂直居中的对话框\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.modal2Visible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    //  onCancel={() => this.setModal2Visible(false)}\r\n                >\r\n\r\n                    <p>对话框的内容</p>\r\n                    <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                        <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                        </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                        <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                    </Form>\r\n\r\n\r\n                </Modal>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>)\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ManageBlog;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass BlogDetail extends React.Component {\r\n\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            //  const MOCK_DATA = \"Hello.\\n\\n * This is markdown.\\n * It is fun\\n * Love it or leave it.\";\r\n            markdown: '# This is a H1  \\n## This is a H2  \\n###### This is a H6',\r\n            // #测试一级标题 ##副标题\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n//todo 组件间传值\r\n        let id = 13;\r\n        this.getArticle(13);\r\n\r\n        console.log(\"----------------------------\");\r\n    }\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    markdown: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // markdown: article.content\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                BlogDetail\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    value={this.state.markdown}\r\n                    // style={{height: '400px'}}\r\n                    renderHTML={this.renderHTML}\r\n\r\n                    config={{\r\n                        view: {\r\n                            menu: false,\r\n                            md: false,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    // onChange={this.handleEditorChange}\r\n                    // onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default BlogDetail;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n// import tasklists from 'markdown-it-task-lists'\r\n\r\n//网络请求\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\n// import hljs from 'highlight.js'\r\n// import 'highlight.js/styles/atom-one-light.css'\r\n// import './index.less';\r\n// import 'highlight.js/styles/github.css'\r\n\r\n//blog 的详情\r\n//两种写法 导出一个类\r\n//export default class BlogMd extends React.Component {\r\nclass BlogMd extends React.Component {\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // this.props.form.validateFields();\r\n        console.log(\"----------- md -----------------\");\r\n        let id = 13;\r\n        this.getArticle(13);\r\n        //定时器\r\n        //todo 定时器 触发\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n\r\n\r\n    }\r\n\r\n    tick() {\r\n        //循环更新\r\n        this.updateArticleFun();\r\n\r\n        // this.setState((prevState) => ({\r\n        //     secondsElapsed: prevState.secondsElapsed + 1\r\n        // }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //清除\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    content: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    //编辑器有变化的话执行 更新文章\r\n    handleEditorChange = ({html, text}) => {\r\n        // console.log(\"html 是md 输入框中文本转换为html的文本---text 是md 输入框中的文本\");\r\n        //console.log(html);\r\n        //console.log(text);\r\n\r\n        //编辑\r\n        if (this.state.id != null) {\r\n            console.log(this.state.id);\r\n            //文章正文\r\n            this.setState({\r\n                content: text\r\n            });\r\n            //编辑文章 更新即可\r\n            this.updateArticleFun();\r\n        } else {\r\n            //todo 新增文章\r\n\r\n        }\r\n    };\r\n\r\n    updateArticleFun = () => {\r\n        let uri = apis.blog.updateBlog;\r\n        let body = new Object();\r\n        body.id = this.state.id;\r\n        body.content = this.state.content;\r\n        this.postBody(uri, body);\r\n    };\r\n\r\n    //\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n\r\n    // handleGetMdValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getMdValue())\r\n    // }\r\n\r\n    // handleGetHtmlValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getHtmlValue())\r\n    // }\r\n\r\n\r\n    //创建文章\r\n    crateArticleFun() {\r\n        // console.log(this.state.username);\r\n        var url = \"http://arc.com/zero/blogs\";\r\n        console.log(url);\r\n        let article = {\r\n            \"authorId\": this.state.authorId,\r\n            \"tagId\": this.state.tagId,\r\n            \"category\": this.state.category,\r\n            \"status\": this.state.status,\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"content\": this.state.content,\r\n            \"version\": this.state.version,\r\n            \"sortWeight\": this.state.sortWeight\r\n        };\r\n\r\n        let ret = this.postBody(url, article);\r\n        console.log(article);\r\n        console.log(ret);\r\n    };\r\n\r\n\r\n    //上传图片\r\n    handleImageUpload(file, callback) {\r\n\r\n        console.log(file);\r\n        console.log(callback);\r\n        const reader = new FileReader();\r\n        console.log(reader);\r\n        // reader.onload = () => {\r\n        //     // const convertBase64UrlToBlob = (urlData) => {\r\n        //     //     let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]\r\n        //     //     let bstr = atob(arr[1]);\r\n        //     //     let n = bstr.length;\r\n        //     //     let u8arr = new Uint8Array(n);\r\n        //     //     while (n--) {\r\n        //     //         u8arr[n] = bstr.charCodeAt(n)\r\n        //     //     }\r\n        //     //     return new Blob([u8arr], {type: mime})\r\n        //     };\r\n        //     const blob = convertBase64UrlToBlob(reader.result);\r\n        //     setTimeout(() => {\r\n        //         // setTimeout 模拟异步上传图片\r\n        //         // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown\r\n        //         callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')\r\n        //     }, 1000)\r\n        // };\r\n        // reader.readAsDataURL(file)\r\n    }\r\n\r\n    //-----------------------------------------------------------------------------\r\n    //react渲染DOM的节点\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    style={{height: '700px'}}\r\n                    value={this.state.content}\r\n                    renderHTML={this.renderHTML}\r\n                    config={{\r\n                        view: {\r\n                            menu: true,\r\n                            md: true,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    onChange={this.handleEditorChange}\r\n                    onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogMd;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nclass FoodDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        let query = url.parse(this.props.location.search, true).query;\r\n        console.log(query);\r\n        console.log(query.aid);\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>FoodDetails</h1>\r\n\r\n            <hr/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default FoodDetails;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import {Link} from \"react-router-dom\";\r\n// import  Home from '../../../components/layout/Home'\r\nimport '../../../assets/css/system/menu/menu.css'\r\nimport apis from '../../../config/urls.js';\r\n\r\n\r\nclass Menu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            parentId: null,\r\n            systemId: null,//适用系统的id\r\n            code: null,\r\n            name: \"测试\",\r\n            nameEnglish: null,\r\n            sort: 0,\r\n            level: 0,// 级别，1=第一级，2=第二级，，，\r\n            state: 1,// 状态，暂时规划true=非0/false=0\r\n            url: null,// 菜单URL地址\r\n            icon: null,// icon地址\r\n            note: null,\r\n\r\n\r\n            raw: {\r\n                id: null,\r\n                parentId: null,\r\n                systemId: null,//适用系统的id\r\n                code: null,\r\n                name: \"测试\",\r\n                nameEnglish: null,\r\n                sort: 0,\r\n                level: 0,// 级别，1=第一级，2=第二级，，，\r\n                state: 1,// 状态，暂时规划true=非0/false=0\r\n                url: null,// 菜单URL地址\r\n                icon: null,// icon地址\r\n                note: null,\r\n            },\r\n            // info: '',\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForMenuList(\"\");\r\n    }\r\n\r\n    //请求服务器获取数据集合\r\n    searchForMenuList = (e) => {\r\n        let url = apis.menu.listMenu;\r\n        let query = {};\r\n        axios.post(url, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(response.config);\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(\"###################\");\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n\r\n\r\n    };\r\n\r\n\r\n    /*\r\n        searchForMenuList = (name) => {\r\n            let url = apis.menu.listMenu;\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n\r\n            console.log(\"######## 搜索 获取图片的集合 #########\");\r\n            let query = {};\r\n            // console.log(filename);\r\n            // query.name = this.state.name;\r\n            // query.name = this.state.name;\r\n            axios.post(url,query).then(response => {\r\n                console.log(\"##### response ####\");\r\n                console.log(response);\r\n                console.log(\"###################\");\r\n                let code = response.data.code;\r\n                // //失败  小于1 失败\r\n                // if (null === response && response.data.code == 1) {\r\n                //     // this.props.history.push(\"/Success\");\r\n                if (code === 1) {\r\n                    let arr = [];\r\n                    // arr.push(this.state.raw);\r\n                    // console.log(\"arr.push(response.data.data);\");\r\n                    // console.log(response.data.data);\r\n                    let resultArray = arr.concat(response.data.data);\r\n                    console.log(resultArray);\r\n                    this.setState({\r\n                        list: resultArray\r\n                    });\r\n                    console.table(this.state.images);\r\n                }\r\n                //\r\n                // } else {\r\n                //     alert(response.data.msg);\r\n                //     alert(\"FAIL\");\r\n                //     console.log(\"FAIL\");\r\n                //     console.log(response);\r\n                //     // this.props.history.push(\"/file-search\");\r\n                // }\r\n            })\r\n                // .catch(function (error) {\r\n                //     //异常\r\n                //     console.log(error);\r\n                //     console.log('catch 异常',);\r\n                // });\r\n            ;\r\n        };\r\n    */\r\n\r\n    //请求服务器 保存数据\r\n    saveMenu = (e) => {\r\n        console.log(\"######## saveMenu #########\");\r\n        let url = apis.menu.saveMenu;\r\n        console.log(url);\r\n        //input 的参数怎么获取\r\n\r\n\r\n        let request = {};\r\n        request.parentId = this.state.parentId;\r\n        request.code = null;\r\n        request.name = this.state.name;\r\n        request.systemId = this.state.systemId;\r\n        request.sort = this.state.sort;\r\n        request.level = this.state.level;\r\n        request.state = this.state.state;\r\n        request.url = this.state.url;\r\n        request.icon = this.state.icon;\r\n        request.note = this.state.note;\r\n\r\n        //request  .nameEnglish = this.state.nameEnglish;\r\n        console.table(this.state);\r\n        console.table(request);\r\n        console.log(request);\r\n\r\n        // query.name = this.state.name;\r\n        axios.post(url, request).then(response => {\r\n\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n\r\n                // this.setState({\r\n                // });\r\n            }\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        //异常\r\n            .catch(function (error) {\r\n                alert(error);\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    /////////////////////////////////\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n\r\n            // raw: {\r\n            //     [inputName]: inputValue\r\n            // }\r\n        })\r\n    }\r\n\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    //获取input的值\r\n    handleInputOnChange = (event) => {\r\n        console.log(event);\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        //如何知道是那个id的input框 ？\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>  {this.state.name}</h3>\r\n                <h4>  {this.state.note}</h4>\r\n                <h4>  {this.state.systemId}</h4>\r\n                <h4>  {this.state.sort}</h4>\r\n\r\n\r\n                <h2>菜单管理</h2>\r\n\r\n                {/*<p className=\"front-black\">检索菜单</p>*/}\r\n                <p>\r\n                    {/*<label htmlFor=\"username\" className=\"sr-only\">名称</label>*/}\r\n                    <input type=\"text\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                           required\r\n                        // value={this.state.name}\r\n                        // defaultValue={this.state.name}\r\n\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForMenuList}>检索菜单</button>\r\n                </p>\r\n\r\n\r\n                {/* save insert 创建    新增 新建的框框*/}\r\n                <form className='image-node'>\r\n\r\n                    <div>\r\n                        名称：<input type=\"text\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  placeholder=\"name\"\r\n                                  autoFocus\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        地址：<input type=\"text\"\r\n                                  id=\"url\"\r\n                                  name=\"url\"\r\n                                  placeholder=\"url\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n\r\n                        系统：<input type=\"text\"\r\n                                  id=\"systemId\"\r\n                                  name=\"systemId\"\r\n                                  placeholder=\"systemId\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        上级：<input type=\"text\"\r\n                                  id=\"parentId\"\r\n                                  name=\"parentId\"\r\n                                  placeholder=\"parentId\"\r\n                        // required\r\n                        //    value={this.state.name}\r\n                                  className='menu-input-save'\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        状态：<input type=\"text\"\r\n                                  id=\"state\"\r\n                                  name=\"state\"\r\n                                  placeholder=\"state\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        注释：<input type=\"text\"\r\n                                  id=\"note\"\r\n                                  name=\"note\"\r\n                                  placeholder=\"note\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n                    排序：<input type=\"text\"\r\n                              id=\"sort\"\r\n                              name=\"sort\"\r\n                              placeholder=\"sort\"\r\n                              className=\"menu-input-save-sort\"\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n\r\n\r\n                    {/*nameEnglish  icon  */}\r\n                    <button\r\n                        className=\"node-for-save-btn\"\r\n                        onClick={e => this.saveMenu(e)}>保存\r\n                    </button>\r\n\r\n                </form>\r\n\r\n                {/*渲染list 数据*/}\r\n\r\n                {this.state.list.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.id}${value.name}`}\r\n                             className='image-node'\r\n                        >\r\n                            id:{value.id}\r\n                            <br/>\r\n                            systemId:{value.systemId}\r\n                            <br/>\r\n                            pId:{value.parentId}\r\n                            <br/>\r\n                            sort{value.sort} <br/>\r\n                            name:{value.name}\r\n                            <br/>\r\n                            level:{value.level}\r\n                            <br/>\r\n                            state:{value.state}\r\n                            <br/>\r\n                            url:{value.url}\r\n                            <br/>\r\n                            icon:{value.icon}\r\n                            <br/>\r\n                            {/*note:{value.note}*/}\r\n                            {/*createDate:{value.createDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*updateDate:{value.updateDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*<p className='front-black'>{value.name}</p>*/}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n// import {Form, Icon, Input, Button, Checkbox,} from 'antd';\r\n// import \"antd/dist/antd.css\";\r\nimport '../../assets/css/layout/login.css'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '', //账号\r\n            pwd: '', // 密码\r\n            pwdConfirm: '', // 确认密码\r\n            type: 'worker', // 用户类型 默认求职者\r\n            sex: 3,\r\n            info: '',\r\n        }\r\n    }\r\n\r\n\r\n    //   hasErrors=(fieldsError)=> {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(new Date());\r\n        console.log(\"componentDidMount\");\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    handleUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePwd = (e) => {\r\n        this.setState({\r\n            pwd: e.target.value\r\n        });\r\n    };\r\n\r\n    keyUpFun = (e) => {\r\n        console.log(e.keyCode === 13);\r\n        if (13 === e.keyCode) {\r\n            this.loginFun(e);\r\n        }\r\n    };\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    loginFun = (e) => {\r\n\r\n\r\n        let host = \"http://127.0.0.1\";\r\n        let port = 8001;\r\n        let uri = \"/zero/v2/login/json/process\";\r\n        let url = host + \":\" + port + uri;\r\n        console.log(this.state.username);\r\n        console.log(this.state.pwd);\r\n        console.log(this.state.info);\r\n\r\n\r\n        console.log(url);\r\n        let user = {\r\n            'identifier': this.state.username,\r\n            \"credential\": this.state.pwd,\r\n            \"identityType\": 1\r\n            //identityType\r\n        };\r\n\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败  小于1 失败\r\n                if (null === response && response.data.code < 1) {\r\n                    alert(response.data.msg);\r\n                    this.props.history.push(\"/user\");\r\n                } else {\r\n                    //登录成功，获取到后台返回的数据，可以做缓存\r\n                    console.log(\" 登录成功\" + response.data.msg);\r\n                    // this.props.history.push(\"/blog\");\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n                //this.props.history.push(\"/login\");\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center-all\">\r\n\r\n                <div className=\"heading   \">\r\n                    <h2>登录 Please sign in</h2>\r\n                </div>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"username\" className=\"sr-only\">名称</label>\r\n                    <input type=\"text\"\r\n                           id=\"username\" name=\"identifier\"\r\n                           onChange={this.handleUsername}\r\n                           value={this.state.username}\r\n                           placeholder=\"手机号/邮箱/用户名\"\r\n                           className=\"form-control\"\r\n                           required\r\n                           autoFocus/>\r\n                </p>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"password\"\r\n                           className=\"sr-only\">密码</label>\r\n                    <input type=\"password\"\r\n                           value={this.state.pwd}\r\n                           onChange={this.handlePwd}\r\n                           onKeyUp={this.keyUpFun}\r\n                           className=\"form-control\"\r\n                           placeholder=\"密码\"\r\n                           id=\"password\"\r\n                           name=\"credential\"\r\n                           required/>\r\n                </p>\r\n\r\n                {/*                    <input name=\"rememberMe\" id=\"rememberMe\" type=\"checkbox\"\r\n                           className=\"checkbox\" value=\"true\"/><label\r\n                    htmlFor=\"rememberMe\">30 天内记住我</label>*/}\r\n\r\n                <input name=\"identityType\" type=\"hidden\" value=\"1\"/>\r\n\r\n                <div>\r\n                    <button onClick={this.loginFun} className=\"btn-login-submit \">点我登录</button>\r\n                </div>\r\n\r\n                <div className=\"forgotPasswordContainer CanBePulledDown\"\r\n                     id=\"forgotPasswordDiv\">\r\n                    <a href=\"https://app.yinxiang.com/ForgotPassword.action\"\r\n                       target=\"_top\" className=\"forgot-password\">\r\n                        忘记密码？</a>\r\n                </div>\r\n\r\n                {/*                 <div className=\"Btn Btn_emph Btn_super Btn_Yx\">\r\n                        <img\r\n                            src=\"https://static.app.yinxiang.com/embedded-web/web/static/media/wechat_icon@2x.e20b7172.png\"/>\r\n                        <span>使用微信登录</span>\r\n                    </div>*/}\r\n\r\n\r\n                <div className=\"footer wrapper\">\r\n                    <a href=\"https://www.yinxiang.com/tos/\" className=\"footer-entry\">服务条款</a>\r\n                    <a href=\"https://www.yinxiang.com/privacy/\" className=\"footer-entry\">|隐私政策</a>\r\n                    <span className=\"footer-entry last\">    版权所有 2007 - 2019 笔记。保留所有权利。</span>\r\n                </div>\r\n\r\n                <hr/>\r\n                <h3> 获取输入值账号{this.state.username}</h3>\r\n                <h3> 获取输入值密码{this.state.pwd} </h3>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {\r\n    Upload,\r\n    Icon,\r\n    message,\r\n    Button\r\n} from 'antd';\r\n// import axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\n// api接口地址抽取\r\nimport urls from '../../../config/urls.js';\r\n\r\nclass FileUpload2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            fileList: [\r\n                {\r\n                    uid: '-1',\r\n                    name: 'xxx.png',\r\n                    status: 'done',\r\n                    // code: 'done',\r\n                    url: 'http://127.0.0.1:8001/zero/file/upload',\r\n                },\r\n            ],\r\n\r\n            //\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n    render() {\r\n        const props = {\r\n            name: 'file',\r\n            action: urls.file.uploadFile,\r\n            // action: 'http://122.51.110.127:8001/zero/file/upload',\r\n            headers: {\r\n                authorization: 'authorization-text',\r\n            },\r\n            //上传中、完成、失败都会调用这个函数。\r\n            onChange(info) {\r\n                if (info.file.status === 'done' && info.file.response.code === 1) {\r\n                    console.log(\"################################\");\r\n                    console.log(info);\r\n                    console.log(\"--------------------info.file\");\r\n                    console.log(info.file);\r\n                    console.log(\"--------------------info.fileList\");\r\n                    console.log(info.fileList);\r\n                    console.log(\"--------------------info.event\");\r\n                    console.log(info.event);\r\n                    console.log(\"--------------------文件上传成功\");\r\n\r\n                    console.log(info.file.response.code);\r\n                    console.log(info.file.response.msg);\r\n                    console.log(info.file.response.data);\r\n\r\n                    console.log(\"--------------------info.file.response\");\r\n                    console.log(info.file.response);\r\n                    message.success(`${info.file.name}-->${info.file.response.data} 文件上传成功`);\r\n                    let fileName = info.file.response.data;\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(this);\r\n                    //info.flie.name = fileName;\r\n                    // this.setState(\r\n                    //     {\r\n                    //         img2: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n                    //\r\n                    //     }\r\n                    // )\r\n\r\n\r\n                } else if (info.file.status === 'error') {\r\n                    message.error(`${info.file.name} 文件上传失败`);\r\n                } else {\r\n                    //console.log(\"失败\" + info.file.response.msg);\r\n                    console.log(\"失败\");\r\n                }\r\n                console.log(\"################################\");\r\n            },\r\n        };\r\n\r\n        /*        const props_ = {\r\n                    name: 'file',\r\n                    directory: true,\r\n                    //     multiple: true,\r\n                    action: 'http://127.0.0.1:8001/zero/file/upload',\r\n                    onChange(info) {\r\n\r\n                    },\r\n                };*/\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Upload {...props}>\r\n                    <Button>\r\n                        <Icon type=\"upload\"/> 上传\r\n                    </Button>\r\n                </Upload>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUpload2;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport FileDownload from 'react-file-download';\r\n\r\n// 文件下载\r\nclass FileDownload2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            //注意 参数 symbol 意思是“标记”\r\n            //目的是：查询文件记录的一个检索参数，尽可能做到可以确定唯一一条数据，否则 应该提示检索到多条数据，请继续选择一个或者多个 以供下载\r\n            symbol: null,\r\n            alertMessage: \"请出入合法查询条件\",\r\n            // file: null,\r\n            type: null,\r\n        }\r\n    }\r\n\r\n    getFile = (symbol) => {\r\n        //  检索条件 symbol  校验与赋值\r\n        if (this.state.symbol == null || this.state.symbol.trim() == \"\") {\r\n            alert(this.state.alertMessage);\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            symbol: symbol,\r\n        });\r\n\r\n        let url = urls.file.downloadFileByIdOrCode + this.state.symbol;\r\n        console.log(url);\r\n        axios.get(url, {responseType: 'blob'}).then(response => {\r\n\r\n            // let fileName = \"temp.jpg\";\r\n            let fileName = response.headers['filename'];\r\n            console.log(response);\r\n            console.log(response.headers);\r\n            // console.log(response.data.symbol);\r\n\r\n            FileDownload(response.data, fileName);\r\n        })\r\n    };\r\n\r\n\r\n    //onClick button 事件函数\r\n    searchForDownloadFile = (e) => {\r\n        this.getFile(this.state.symbol);\r\n    };\r\n\r\n\r\n    // componentDidMount() {\r\n    //     //获取列表数据\r\n    // }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        //获取原生的事件对像 e.nativeEvent\r\n        this.setState({\r\n            symbol: event.target.value,\r\n        });\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(this.state.symbol);\r\n            this.getFile(event.target.value);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                           placeholder=\"code/id/name\"\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    <button onClick={this.searchForDownloadFile}>获取文件</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileDownload2;\r\n//            <p style={textStyles}>inline style</p>\r\n\r\n//返回数据中获取 文件名称\r\n\r\n\r\n//https://www.jianshu.com/p/eb785e4318f4\r\n//download(){\r\n//         const url = \"文件地址\"\r\n//         axios.get(url,{\r\n//             responseType:'blob'\r\n//         }).then( res => {\r\n//             let blob = new Blob([res.data])\r\n//             let downloadElement = document.createElement('a')\r\n//             let href = window.URL.createObjectURL(blob); //创建下载的链接\r\n//             downloadElement.href = href;\r\n//             downloadElement.download = `new name`; //下载后文件名\r\n//             document.body.appendChild(downloadElement);\r\n//             downloadElement.click(); //点击下载\r\n//             document.body.removeChild(downloadElement); //下载完成移除元素\r\n//             window.URL.revokeObjectURL(href); //释放blob对象\r\n//         })\r\n//\r\n//     }\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\nimport urls from '../../../config/urls.js';\r\n\r\n\r\nclass FileSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            code: null,\r\n            name: '',\r\n            type: null,\r\n            // info: '',\r\n            // image: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n            images: [],\r\n        }\r\n    }\r\n\r\n\r\n    //搜索 获取图片的集合\r\n    searchForImageList = (filename) => {\r\n        console.log(\"######## 搜索 获取图片的集合 #########\");\r\n\r\n        let query = {};\r\n        query.name = this.state.name;\r\n\r\n        console.log(\"查询参数\");\r\n        console.log(query);\r\n\r\n        axios.post(urls.file.listFileByQuery, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(\"################\");\r\n\r\n            // //失败  小于1 失败\r\n            if (response.data.code === 1) {\r\n                this.setState({\r\n                    images: response.data.data\r\n                });\r\n\r\n                console.log(this.state.images);                // this.props.history.push(\"/Success\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                console.log('catch 异常',);\r\n                console.log(error);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForImageList(null);\r\n    }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------> 搜索的参数\");\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                        // required\r\n                        //    value={this.state.name}\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForImageList}>检索文件</button>\r\n                </p>\r\n\r\n\r\n                {this.state.images.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.name}${value.id}`}>\r\n                            <img\r\n                                key={`${value.name}${value.id}`}\r\n                                src={value.url}\r\n                                className='image-node-1'\r\n                                alt=''></img>\r\n                            <p className='front-black'>{value.name}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <h2>完</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileSearch;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    // Modal,\r\n    // Form,\r\n    // Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n}\r\n    from\r\n        'antd';\r\nimport FileDownload from \"react-file-download\";\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\n\r\n//对于 File 的CRUD\r\nclass FileManage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"文件列表\",\r\n            visibleForInsert: false,\r\n            symbol: '',\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.file.listPage, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n                    console.log(dataFromDb);\r\n\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                    console.log(this.state.list);\r\n\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n    };\r\n\r\n    remove(id) {\r\n        axios.get(urls.file.deleteFile + id).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n            });\r\n    }\r\n\r\n\r\n    // download\r\n    download(id) {\r\n        console.log(\"download\");\r\n        console.log(\"id=\" + id);\r\n\r\n        console.log(this.state.symbol);\r\n        console.log(this.state.symbol);\r\n        console.log(this.state.symbol);\r\n        console.log(this.state.symbol);\r\n        let url = urls.file.downloadFileByIdOrCode + id;\r\n        axios.get(url, {responseType: 'blob'})\r\n            .then(response => {\r\n                console.log(\"---------------------------------------\");\r\n                console.log(response.data);\r\n                console.log(response.status);\r\n                console.log(response.statusText);\r\n                console.log(response.headers);\r\n                console.log(response.config);\r\n                console.log(\"---------------------------------------\");\r\n\r\n\r\n                // let fileName = \"temp.jpg\";\r\n                let fileName = response.headers['filename'];\r\n                let contentType = response.headers['content-type'];\r\n                let contentDisposition = response.headers['content-disposition'];\r\n                console.log(\"##############fileName########\");\r\n                console.log(fileName);\r\n                console.log(contentDisposition);\r\n                console.log(contentType);\r\n                console.log(\"######################\");\r\n                console.log(response);\r\n                console.log(response.headers);\r\n                console.log(\"symbol symbol symbol symbol\");\r\n                console.log(response.data.symbol);\r\n\r\n                FileDownload(response.data, fileName);\r\n            }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('异常  catch =====',);\r\n        });\r\n    }\r\n\r\n//  错误\r\n//    axios.post('/api',{\r\n//     // 传参\r\n// },\r\n// {\r\n//     responseType:'blob'    // 设置响应数据类型\r\n// })\r\n// .then(res=>{\r\n//     if (res.status == 200) {\r\n//         let url = window.URL.createObjectURL(new Blob([res.data]))\r\n//         let link= document.createElement('a')\r\n//         link.style.display='none'\r\n//         link.href=url\r\n//         link.setAttribute('download', fileName)    // 自定义下载文件名（如exemple.txt）\r\n//         document.body.appendChild(link)\r\n//         link.click()\r\n//     }\r\n// })\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            // {key: 'code', title: 'code', dataIndex: 'code', width: 20, high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'suffix', title: 'suffix', dataIndex: 'suffix'},\r\n            {key: 'version', title: 'version', dataIndex: 'version', high: 20},\r\n            // {key: 'path', title: 'path', dataIndex: 'path', width: 20, high: 20},\r\n            {key: 'state', title: '启用状态', dataIndex: 'state'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '文件大小',\r\n                render: (text, record) => (<span>    {record.length} {record.lengthUnit}</span>)\r\n            },\r\n\r\n            {\r\n                key: 'remove', title: '操作',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.download.bind(this, record.id)}>download-{record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FileManage;\r\n","import React from \"react\";\r\nimport '../../../assets/css/system/file/file.css'\r\n\r\n\r\nimport FileUpload2 from './FileUpload2';\r\n//说明 FileDownload2 是因为名称冲突二取名的， 是用于下载文件的\r\nimport FileDownload2 from './FileDownload2';\r\n//旧版本文件下载 //import FileGet from './FileGet';\r\nimport FileSearch from \"./FileSearch\";\r\nimport FileManage from \"./FileManage\";\r\n\r\nclass File extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //此状态机为display的取值\r\n            display_name: 'none',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n\r\n    //编辑按钮的单击事件，修改状态机display_name的取值\r\n    showFileDownload = () => {\r\n        // this.setState({display_name: 'block',})\r\n        if (this.state.display_name == 'none') {\r\n            this.setState({\r\n                display_name: 'block',\r\n            })\r\n        } else if (this.state.display_name == 'block') {\r\n            this.setState({\r\n                display_name: 'none',\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div\r\n                    style={{\r\n                        // width: '50px',\r\n                        // height: '50px',\r\n                        // float: 'left',\r\n                        // backgroundColor: 'yellow',\r\n                        // fontSize: '24px'\r\n                    }}>\r\n                    <FileUpload2/>\r\n                    <FileDownload2/>\r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                {/*文件列表*/}\r\n                <FileManage/>\r\n                <FileSearch/>\r\n\r\n\r\n                <hr/>\r\n                <button onClick={this.showFileDownload}>附加功能开关</button>\r\n                <div style={{\r\n                    background: '#fff',\r\n                    display: this.state.display_name\r\n                }}>\r\n                    {/* 通过状态机display_name获取diaplay取值 */}\r\n                    <FileUpload2/>\r\n                </div>\r\n                <hr/>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default File;\r\n\r\n\r\n// 设计目标：\r\n//1 文件记录数据的列表显示，计划展示属性   1文件全称 2文件版本 3大小 4位置\r\n//2 文件 单个上传 & 单个下载  批量下载是否加入 待定\r\n//3 文件搜索 ， 搜索条件 1名称  2大小过滤 3 类型 5位置（在 develop/server）\r\n//4 单条数据编辑，涉及接口 get update delete\r\n","import Index from \"../components/basic/Index\";\r\nimport CssTest from \"../components/test/CssTest\";\r\nimport Role from \"../components/system/rbac/Role\";\r\nimport User from \"../components/system/rbac/user/User\";\r\nimport Resource from \"../components/system/resource/Resource\";\r\nimport UserInsert from \"../components/system/rbac/user/UserInsert\";\r\nimport RoleInsert from \"../components/system/rbac/RoleInsert\";\r\nimport Food from \"../components/app/food/Food\";\r\nimport Blog from \"../components/app/blog/Blog\";\r\nimport ManageBlog from \"../components/app/blog/ManageBlog\";\r\nimport BlogDetail from \"../components/app/blog/BlogDetail\";\r\nimport BlogMd from \"../components/app/blog/BlogMd\";\r\nimport FoodDetails from \"../components/app/food/FoodDetails\";\r\nimport Menu from \"../components/system/menu/Menu\";\r\nimport Login from \"../components/basic/Login\";\r\n\r\nimport File from \"../components/system/file/File\";\r\nimport FileManage from \"../components/system/file/FileManage\";\r\nimport FileSearch from \"../components/system/file/FileSearch\";\r\n\r\nimport React from \"react\";\r\n\r\n//购物小票\r\nimport ShoppingReceipt from '../components/app/shop/ShoppingReceipt'\r\n\r\nconst routers = [\r\n\r\n    // test\r\n    {\r\n        path: \"/css-test\",\r\n        component: CssTest,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/role\",\r\n        component: Role,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/roleInsert/:aid\",\r\n        component: RoleInsert,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/userInsert\",\r\n        component: UserInsert,\r\n        exact: true\r\n    },\r\n    //app 模块的\r\n    {\r\n        path: \"/blog\",\r\n        component: Blog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/sr\",\r\n        component: ShoppingReceipt,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/manage-blog\",\r\n        component: ManageBlog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/blog-detail\",\r\n        component: BlogDetail,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/bmd\",\r\n        component: BlogMd,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/food\",\r\n        component: Food,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/FoodDetails\",\r\n        component: FoodDetails,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file\",\r\n        component: File,\r\n        exact: true\r\n        //,\r\n        // routes: [\r\n        //     {\r\n        //         path: \"/file-add\",\r\n        //         component: Login,\r\n        //         exact: true\r\n        //     }, {\r\n        //         path: \"/file-update\",\r\n        //         component: Login,\r\n        //         exact: true\r\n        //     },\r\n\r\n        // ]\r\n    },\r\n    {\r\n        path: \"/file-search\",\r\n        component: FileSearch,\r\n        exact: true\r\n    },\r\n\r\n    //system 模块的\r\n\r\n    {\r\n        path: \"/index\",\r\n        component: Index,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/user\",\r\n        component: User,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/menu\",\r\n        component: Menu,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/resource\",\r\n        component: Resource,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file1\",\r\n        component: FileManage,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: Login,\r\n        exact: true\r\n    },\r\n];\r\n\r\nexport default routers;\r\n\r\n//                        reder={props=>(\r\n//                             <route.component{... props} routers={route.children}>\r\n//                         )\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport urls from \"../../../config/urls\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n} from 'antd';\r\n\r\nclass ShoppingReceipt extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"列表\",\r\n            list: [],\r\n            visibleForInsert: false,\r\n\r\n            name: \"\",\r\n            transactionTime: null,//交易时间\r\n            totalFinalPrice: 0,//成交价\r\n            state: true,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        console.log(\"获取列表数据----->\");\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.receipt.listPage, {})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n                    console.log(dataFromDb);\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState(\r\n            {\r\n                visibleForInsert: true,\r\n                name: \"\",\r\n            }\r\n        );\r\n\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n\r\n    };\r\n\r\n\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    // 保存 executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存 executeInsertModal\");\r\n        this.saveShoppingReceipt();\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"input的名/值：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            // {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'transactionTime', title: '交易时间', dataIndex: 'transactionTime'},\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '成交价',\r\n                render: (text, record) => (<span>{record.totalFinalPrice}{record.priceUnit}</span>)\r\n            },\r\n\r\n            {key: 'totalDiscount', title: '总折扣', dataIndex: 'totalDiscount', high: 20},\r\n            // {key: 'path', title: 'path', dataIndex: 'path', width: 20, high: 20},\r\n            {key: 'state', title: '启用状态', dataIndex: 'state'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n\r\n            {\r\n                key: 'remove', title: '操作', render: (text, record) => (\r\n                    <span>\r\n                    <Button onClick={this.update}>update {record.id}</Button>\r\n                    <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>)\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n                <Card title={this.state.tableTitle}>\r\n\r\n                    {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                    <Button type=\"primary\" onClick={this.showModal}>新增 </Button>\r\n\r\n                    <Modal\r\n                        title=\"新增\"\r\n                        wrapClassName=\"vertical-center-modal\"\r\n                        visible={this.state.visibleForInsert}\r\n                        onOk={() => this.executeInsertModal(false)}\r\n                        onCancel={() => this.cancelInsertModal(false)}\r\n                    >\r\n\r\n\r\n                        {/* save insert 创建    新增 新建的框框*/}\r\n                        <div>\r\n\r\n                            <div>\r\n                                名称：<input type=\"text\"\r\n                                          name=\"name\"\r\n                                          name=\"name\"\r\n                                          placeholder=\"name\"\r\n                                          autoFocus\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            />\r\n                            </div>\r\n\r\n                            <div>\r\n                                实付：<input type=\"text\"\r\n                                          id=\"totalFinalPrice\"\r\n                                          name=\"totalFinalPrice\"\r\n                                          placeholder=\"totalFinalPrice\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            /></div>\r\n\r\n                            <div>\r\n                                折扣：<input type=\"text\"\r\n                                          id=\"totalDiscount\"\r\n                                          name=\"totalDiscount\"\r\n                                          placeholder=\"totalDiscount\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            />\r\n                            </div>\r\n\r\n                            <div>\r\n                                状态：<input type=\"text\"\r\n                                          id=\"state\"\r\n                                          name=\"state\"\r\n                                          placeholder=\"state\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            />\r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                时间：<input type=\"text\"\r\n                                          id=\"transactionTime\"\r\n                                          name=\"transactionTime\"\r\n                                          placeholder=\"transactionTime\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            /></div>\r\n\r\n                        </div>\r\n                    </Modal>\r\n\r\n\r\n                    <Table\r\n                        rowKey={record => record.id}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pageSize={10}\r\n                        bordered>\r\n                    </Table>\r\n                </Card>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = urls.receipt.delete + id;\r\n        console.log(url);\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n    }\r\n\r\n    // update one row\r\n    update(id) {\r\n        console.log(\"update -->\" + id);\r\n        axios.post(urls.receipt.update, {\r\n            //更新\r\n\r\n        }).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveShoppingReceipt = (e) => {\r\n        axios.post(urls.receipt.save,\r\n            {\r\n                name: this.state.name,\r\n                // transactionTime: this.state.transactionTime,\r\n                totalFinalPrice: this.state.totalFinalPrice,\r\n                //null / 0  其他为true\r\n                state: this.state.state == null||this.state.state==0 ? false : true\r\n\r\n            }\r\n        ).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    nickname: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        })\r\n\r\n\r\n        //异常\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                alert(response);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default ShoppingReceipt;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// import Role from '../system/rbac/Role';\r\n// import UserList from '../system/user/UserList';\r\n// import User from '../system/rbac/user/User';\r\n// import UserInsert from '../system/user/UserInsert';\r\n// import RoleInsert from '../system/rbac/RoleInsert';\r\n// import File from '../system/file/File';\r\n// import Login from '../basic/Login';\r\n// import Food from '../app/food/Food';\r\n// import Index from '../basic/Index';\r\n// import FoodDetails from '../app/food/FoodDetails';\r\n// import FileSearch from '../system/file/FileSearch';\r\n// import Menu from '../system/menu/Menu';\r\n\r\n//路由与 api接口地址抽取\r\nimport routers from '../../config/router.js';\r\nimport apis from '../../config/urls.js';\r\n\r\n//css\r\nimport '../../assets/css/layout/home.css'\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    //初始化函数触发\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.getMenusFun();\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    // 初始化的时候去获取菜单数据\r\n    getMenusFun = (e) => {\r\n        var systemId = 4;\r\n        var level = 0;//0 全部\r\n        //localhost:8001/zero/menus/2/levels/0\r\n        // var url = \"http://arc.com/zero/menus/\" + menuId + \"/levels/\" + level;\r\n\r\n        let url = apis.listMenusBySystemIdAndLevel;\r\n        url = url.replace(\"SYSTEM_ID\", systemId);\r\n        url = url.replace(\"LEVEL\", level);\r\n        console.log(url);\r\n\r\n        axios.get(url).then(response => {\r\n            if (response != null) {\r\n                //成功，获取到后台返回的数据，可以做缓存\r\n                // this.props.history.push(\"/Success\");\r\n                this.setState({\r\n                    list: response.data.data\r\n                })\r\n            }\r\n\r\n\r\n            //失败  小于1 失败\r\n            if (null === response && response.data.code < 1) {\r\n                alert(response.data.msg);\r\n                console.log(\"FAIL\");\r\n                this.props.history.push(\"/index\");\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常 被 catch',);\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Router>\r\n                    <div className=\"title\">\r\n                        {\r\n                            this.state.list.map((value, key) => {\r\n                                return (\r\n                                    <Link key={key} to={value.url}>{value.name}</Link>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        routers.map((route, key) => {\r\n                            if (route.exact) {\r\n                                return <Route exact\r\n                                              key={route.path}\r\n                                              path={route.path}\r\n                                              render={props => (\r\n                                                  <route.component{...props} routes={route.routes}/>\r\n                                              )}/>;\r\n                            } else {\r\n                                return <Route\r\n                                    key={route.path}\r\n                                    path={route.path}\r\n                                    render={props => (\r\n                                        <route.component{...props} routes={route.routes}/>\r\n                                    )}/>;\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                    {/*<Route exact path=\"/user\" component={User}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/roleInsert/:aid\" component={RoleInsert}/>*/}\r\n                    {/*<Route exact path=\"/userInsert\" component={UserInsert}/>*/}\r\n                    {/*<Route exact path=\"/food\" component={Food}/>*/}\r\n                    {/*<Route exact path=\"/foodDetails\" component={FoodDetails}/>*/}\r\n                    {/*<Route exact path=\"/file\" component={File}/>*/}\r\n                    {/*<Route exact path=\"/login\" component={Login}/>*/}\r\n                    {/*<Route exact path=\"/index\" component={Index}/>*/}\r\n                    {/*<Route exact path=\"/user-list\" component={UserList}/>*/}\r\n                    {/*<Route exact path=\"/file-search\" component={FileSearch}/>*/}\r\n                    {/*<Route exact path=\"/menu\" component={Menu}/>*/}\r\n\r\n\r\n                </Router>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// 原始的\r\n//              {\r\n//                         routers.map((route, key) => {\r\n//                             if (route.exact) {\r\n//                                 return <Route exact path={route.path} component={route.component} key={route.path}/>\r\n//                             }\r\n//                         })\r\n//\r\n//                     }\r\n","import React from 'react';\nimport Home from './components/layout/Home';\n// import Content from './components/layout/Content';\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n            <Home/>\n            {/*<Route exact path='/roster' component={Home}/>*/}\n            {/*<Content/>*/}\n\n        </div>\n    )\n        ;\n}\n\nexport default App;\n\n// import logo from './assets/image/logo.svg';\n// import './assets/App.css';\n// import './assets/index.css';\n// import Main from './components/layout/Main';\n//https://www.jianshu.com/p/5e8297858ea8\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}