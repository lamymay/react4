{"version":3,"sources":["components/basic/Index.js","components/test/CssTest.js","components/test/ToolTest.js","components/test/QRTest.js","config/urls.js","components/system/rbac/role/RoleAddResource.js","components/system/rbac/role/RoleInsert.js","components/system/rbac/role/RoleList.js","components/system/rbac/role/Role.js","components/system/rbac/user/User.js","components/system/rbac/resource/Resource.js","components/system/rbac/user/UserInsert.js","components/app/food/Food.js","components/app/blog/Blog.js","components/app/blog/ManageBlog.js","components/app/blog/BlogDetail.js","components/app/blog/BlogMd.js","components/app/food/FoodDetails.js","components/system/menu/Menu.jsx","components/basic/Login.js","components/system/file/FileUpload2.jsx","components/system/file/FileDownload2.jsx","components/system/file/FileSearch.jsx","components/system/file/FileManage.jsx","components/system/file/File.jsx","components/app/shop/ShoppingReceipt.js","config/router.js","components/layout/Home.js","App.js","serviceWorker.js","index.js"],"names":["Index","props","state","React","Component","CssTest","getCssTests","bgColor","list","aid","avatar","nickname","textStyles","color","backgroundColor","this","map","value","key","className","style","width","height","fontSize","textAlign","href","ToolTest","getToolTests","require","QRCode","QRTest","data","dataTips","e","inputValue","target","inputName","name","console","log","setState","type","id","placeholder","onChange","onInputChange","prefixUri","host","urls","listMenusBySystemIdAndLevel","file","downloadFileByIdOrCode","uploadFile","deleteFile","save","getByIdOrCode","listFileByQuery","listPage","resource","scan","delete","deleteBatch","update","addResourcesToRole","getByCode","role","user","index","listUser","saveUser","listPageUser","blog","saveBlog","updateBlog","getBlogArticleByUserId","listBlogByAuthorId","menu","listMenu","saveMenu","receipt","RoleAddResource","roles","autoFocus","RoleInsert","RoleList","showModal","visibleForInsert","showModalForRoleAddResource","visibleForAddResource","listResource","axios","post","then","response","code","dataFromDb","content","resources","catch","error","msg","refreshTable","alert","deleteUrl","tableTitle","resourceIds","test","refreshTableForRole","visible","columns","title","dataIndex","render","text","record","onClick","remove","bind","wrapClassName","onOk","executeInsertModal","onCancel","cancelInsertModal","okModalForAddResourcesToRole","cancelModalForAddResourcesToRole","rowKey","dataSource","pageSize","bordered","query","listPageForRole","fromDb","url","Role","getUsers","to","User","users","flag","get","Resource","scanResourceFromController","deleteAllResource","ids","i","length","push","UserInsert","layout","onSubmit","updateUser","Item","event","handleMaxBackUp","htmlType","Food","getFoods","Blog","getTimelineListFun","apis","status","headers","config","table","images","Date","authorId","tagId","sortId","description","publishDate","createDate","updateDate","timeLine","ManageBlog","getManageBlog","category","version","sortWeight","modal2Visible","add","setModal2Visible","BlogDetail","mdEditor","mdParser","getArticle","article","markdown","postBody","body","MarkdownIt","html","linkify","typographer","highlight","str","lang","use","emoji","subscript","superscript","footnote","deflist","abbreviation","insert","mark","renderHTML","t1","t2","secondsElapsed","Promise","resolve","setTimeout","ref","node","view","md","imageUrl","BlogMd","handleEditorChange","updateArticleFun","uri","interval","setInterval","tick","clearInterval","ret","callback","reader","FileReader","onImageUpload","handleImageUpload","FoodDetails","parse","location","search","Menu","searchForMenuList","request","parentId","systemId","sort","level","icon","note","handleGetInputValue","nativeEvent","keyCode","searchForImageList","handleInputOnChange","nameEnglish","raw","required","onKeyUp","Login","handleUsername","username","handlePwd","pwd","keyUpFun","loginFun","info","history","pwdConfirm","sex","htmlFor","FileUpload2","fileList","uid","routes","action","authorization","message","success","fileName","FileDownload2","getFile","symbol","trim","responseType","FileDownload","alertMessage","searchForDownloadFile","FileSearch","filename","src","alt","FileManage","statusText","contentType","contentDisposition","high","lengthUnit","download","File","showFileDownload","display_name","background","display","ShoppingReceipt","saveShoppingReceipt","totalFinalPrice","totalFinalPriceTax","transactionTime","priceUnit","routers","path","component","exact","Home","getMenusFun","replace","route","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44632ba8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>欢迎主页|WELCOME</h1>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\n// import user from '../../../../assets/css/system/rbac/user.css'\r\n\r\nclass CssTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgColor:'blue',\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }, {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getCssTests = () => {\r\n\r\n    };\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        const textStyles = {\r\n            color: 'black',\r\n            backgroundColor: this.state.bgColor\r\n        };\r\n        return (<div>\r\n            {/*<div  style=\"background-color:red;\">style</div>*/}\r\n            <h1>CssTest</h1>\r\n\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        {/*<Link to={`/userInsert?aid=${value.aid}`}>{value.nickname}</Link>*/}\r\n                        <p  className='user-item'>{value.aid}|{value.nickname}</p>\r\n                        {/*<p  style=\"background-color:red;\">{value.aid}|{value.nickname}</p>*/}\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <br/>\r\n            <br/>\r\n            <hr/>\r\n            1. 行内样式\r\n            <div\r\n                style={{\r\n                    width:'200px',\r\n                    height:'80px',\r\n                    backgroundColor:'yellow',\r\n                    fontSize:'24px',\r\n                    textAlign:'center'\r\n                }}>\r\n            <a href=\"https://github.com/lamymay/zero\">后端源码 github</a>\r\n            <a href=\"https://github.com/lamymay/react4\">前端源码 github</a>\r\n            </div>\r\n\r\n            2. 声明样式\r\n            <p style={textStyles}>inline style</p>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default CssTest;\r\n\r\n//https://segmentfault.com/a/1190000016952542?utm_source=tag-newest\r\n//测试引入css的方式\r\n// 1、行内引入， 特点：即在行内直接写，未能测试通过，报错，切支持度按网上说法也不是很全要驼峰编写\r\n// 2、页内引入，特点：写const变量，这样数据与js会在一起，维护调试不是很方便\r\n//3、外部引入，推荐，特点：与原生几乎一样，\r\n// 第三种的用法：1js头部 “import user from '../../../../assets/css/system/rbac/user.css'” 2使用 \"<p  className='user-item'>{value.aid}|{value.nickname}</p>\"\r\n","import React from \"react\";\r\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\n// import user from '../../../../assets/css/system/rbac/user.css'\r\n\r\nclass ToolTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgColor:'blue',\r\n            list: [\r\n\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getToolTests = () => {\r\n\r\n    };\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        const textStyles = {\r\n            color: 'black',\r\n            backgroundColor: this.state.bgColor\r\n        };\r\n        return (<div>\r\n            {/*<div  style=\"background-color:red;\">style</div>*/}\r\n            <h1>ToolTest</h1>\r\n\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        {/*<Link to={`/userInsert?aid=${value.aid}`}>{value.nickname}</Link>*/}\r\n                        <p  className='user-item'>{value.aid}|{value.nickname}</p>\r\n                        {/*<p  style=\"background-color:red;\">{value.aid}|{value.nickname}</p>*/}\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <br/>\r\n            <br/>\r\n            <hr/>\r\n            1. 行内样式\r\n            <div\r\n                style={{\r\n                    width:'200px',\r\n                    height:'80px',\r\n                    backgroundColor:'yellow',\r\n                    fontSize:'24px',\r\n                    textAlign:'center'\r\n                }}>\r\n            <a href=\"https://github.com/lamymay/zero\">后端源码 github</a>\r\n            <a href=\"https://github.com/lamymay/react4\">前端源码 github</a>\r\n            </div>\r\n\r\n            2. 声明样式\r\n            <p style={textStyles}>inline style</p>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default ToolTest;\r\n\r\n//https://segmentfault.com/a/1190000016952542?utm_source=tag-newest\r\n//测试引入css的方式\r\n// 1、行内引入， 特点：即在行内直接写，未能测试通过，报错，切支持度按网上说法也不是很全要驼峰编写\r\n// 2、页内引入，特点：写const变量，这样数据与js会在一起，维护调试不是很方便\r\n//3、外部引入，推荐，特点：与原生几乎一样，\r\n// 第三种的用法：1js头部 “import user from '../../../../assets/css/system/rbac/user.css'” 2使用 \"<p  className='user-item'>{value.aid}|{value.nickname}</p>\"\r\n","//import React from \"react\";\n//import * as QrCode from 'qrcode.react'\n\nvar React = require('react');\nvar QRCode = require('qrcode.react');\n\nclass QRTest extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: 'http://bing.com',\n            dataTips: '请输入字符',\n        }\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    onInputChange(e) {\n        //es6变量名是一个变量\n        let inputValue = e.target.value,\n            inputName = e.target.name;\n        console.log(\"#####################\");\n        console.log(\"input的名/值：\" + inputName + \"/\" + inputValue);\n        // this.state.raw.[inputName] = inputValue\n        this.setState({\n            [inputName]: inputValue\n        })\n\n        console.log(this.state.data);\n\n        // this.setState({\n        //     name: '你猜'\n        // })\n    }\n\n    // getQRTests = () => {\n    //     var v1 = 'http://bing.com'\n    //     console.log(v1);\n    //     console.log(this.state.data);\n    // };\n\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\n\n    render() {\n\n        return (<div>\n            <br/>\n            <br/>\n            <br/>\n\n            <div>\n                状态：<input type=\"text\"\n                          id=\"data\"\n                          name=\"data\"\n                          placeholder={this.state.dataTips}\n                          onChange={e => this.onInputChange(e)}\n            />\n            </div>\n            <br/>\n\n            <div>\n                {this.state.dataTips}: {this.state.data}\n            </div>\n            <br/>\n\n\n            <QRCode value={this.state.data}/>\n\n        </div>);\n    }\n}\n\nexport default QRTest;\n\n\n//二维码存储多少数据?\n//https://www.qrcode.com/en/about/version.html\n\n//· 数字数据 :7,089个\n// · 字母数据 :4,296个\n// · 8位字节数据 :2,953个\n// · 中国汉字、日本汉字数据 :1,817个\n\n\n//https://jolylai.github.io/notebook-react/antd-pro/env.html#config-文件\n\n\n\n//https://zhuanlan.zhihu.com/p/95855648\n\n\n\n//https://blog.csdn.net/songshu92/article/details/99567343\n//修改配置\n// 可以通过 npm run eject 命令将配置文件暴露出来，然后去修改里面的webpack配置\n// 安装 react-app-rewired 包后，在根目录创建 config-overrides.js 自定义配置，最后修改 package.json 中的 scripts（替换react-scripts为react-app-rewired）​​\n//\n// 多环境配置\n// 安装 dotenv-cli 包\n// 根据需求在根目录创建 .env 文件（注意：只能以 REACT_APP_ 开头），如创建 .env.development、.env.production，内容如下：\n// // .env.development\n// REACT_APP_ENV=development\n//\n// // .env.production\n// REACT_APP_ENV=production\n//\n//\n// 继续修改 package.json 中的 scripts 指定环境\n// package.json demo如下：\n// \"scripts\": {\n//     \"start\": \"react-app-rewired start\",\n//     \"build:dev\": \"dotenv -e .env.development react-app-rewired build\",\n//     \"build:pro\": \"dotenv -e .env.production react-app-rewired build\",\n//     \"test\": \"react-app-rewired test\",\n//     \"eject\": \"react-scripts eject\"\n// },\n// \"devDependencies\": {\n//     \"dotenv-cli\": \"^2.0.1\",\n//     \"react-app-rewired\": \"^2.1.3\"\n// }\n// 测试\n// 运行开发环境（npm start）、打包测试环境（npm run build:dev）、打包生产环境（npm run build:pro），分别 打印 process.env 如下：\n//\n// // 1. 开发环境（npm start）\n// {NODE_ENV: \"development\", PUBLIC_URL: \"\", REACT_APP_ENV: \"development\"}\n//\n// // 2. 测试环境（npm run build:dev）\n// {NODE_ENV: \"production\", PUBLIC_URL: \"\", REACT_APP_ENV: \"development\"}\n//\n// // 3. 生产环境（npm run build:pro）\n// {NODE_ENV: \"production\", PUBLIC_URL: \"\", REACT_APP_ENV: \"production\"}\n// 使用\n// html中：%REACT_APP_ENV%\n// js/jsx中：可以在 process.env 中访问\n\n\n\n\n","const host = \"http://127.0.0.1:8001\";\r\n// const host = \"http://122.51.110.127:80\";   //127\r\n// const host = \"http://192.168.2.243:80\";  //X230\r\n// const host = \"http://122.51.110.127:80\";   //线上\r\n//const host = \"http://192.168.2.104:8002\";  //10400\r\n// const host = \"http://127.0.0.1:8002\"; //MAC\r\n\r\nconst prefixUri = host + \"/zero\";\r\n\r\n// 说明 通常来说\r\n// GET 方法的uri，变量名称的关键字一般有：get\r\n// POST 方法的uri，变量名称的关键字一般有：listXXXByyy\r\n\r\nconst urls = {\r\n    listMenusBySystemIdAndLevel: prefixUri + \"/menus/SYSTEM_ID/levels/LEVEL\",\r\n\r\n    //文件相关\r\n    file: {\r\n        //文件下载 download 返回流\r\n        downloadFileByIdOrCode: prefixUri + \"/files/\",\r\n        //上传文件\r\n        uploadFile: prefixUri + \"/files/upload\",\r\n\r\n        //文件操作 删除文件 & 文件记录\r\n        deleteFile: prefixUri + \"/files/delete/\",\r\n\r\n        //文件记录\r\n        save: prefixUri + \"/sys/file/save\",\r\n        getByIdOrCode: prefixUri + \"/files/\",\r\n        listFileByQuery: prefixUri + \"/sys/file/list\",\r\n        // delete: prefixUri + \"/sys/file/delete/id/\",\r\n        listPage: prefixUri + \"/sys/file/page\",\r\n    },\r\n\r\n    //resource 完全使用 RESTFul  ?  ，项目中使用get + post 来实现\r\n    resource: {\r\n        // GET 扫描所有controller资源\r\n        scan: prefixUri + \"/sys/resources/scan/controller\",\r\n        save: prefixUri + \"/sys/resources\",\r\n        delete: prefixUri + \"/sys/resources/\",\r\n        deleteBatch: prefixUri + \"/sys/resources/delete/batch\",\r\n        update: prefixUri + \"/sys/resources/id\",\r\n        addResourcesToRole: prefixUri + \"/sys/resources/{id}/resources\",\r\n        getByCode: prefixUri + \"/resources/\",\r\n        listPage: prefixUri + \"/sys/resources/page\",\r\n        listFileByQuery: prefixUri + \"/sys/resources/list\",\r\n    },\r\n    role: {\r\n        // GET 扫描所有controller资源\r\n        save: prefixUri + \"/sys/roles\",\r\n        delete: prefixUri + \"/sys/roles/\",\r\n        update: prefixUri + \"/sys/roles/id\",\r\n        getByCode: prefixUri + \"/roles/\",\r\n        listPage: prefixUri + \"/sys/roles/page\",\r\n        listFileByQuery: prefixUri + \"/sys/roles/list\",\r\n    },\r\n    user: {\r\n        index: \"/user\",\r\n        listUser: prefixUri + \"/sys/users/list\",\r\n        saveUser: prefixUri + \"/sys/users/save\",\r\n        delete: prefixUri + \"/sys/users/delete/\",\r\n        listPageUser: prefixUri + \"/sys/users/page\",\r\n    },\r\n    blog: {\r\n        saveBlog: prefixUri + \"/v1/blogs/save\",\r\n        updateBlog: prefixUri + \"/v1/blogs/update\",\r\n        getBlogArticleByUserId: prefixUri + \"/v1/blogs/\",\r\n        listBlogByAuthorId: prefixUri + \"/v1/blogs/timeline/\",\r\n    },\r\n    menu: {\r\n        listMenu: prefixUri + \"/menus/list\",\r\n        saveMenu: prefixUri + \"/menus/save\",\r\n    },\r\n    receipt: {\r\n        index: \"/receipt\",\r\n        // list  : prefixUri + \"/receipt/list\",\r\n        listPage: prefixUri + \"/shopping/receipt/page\",\r\n        delete: prefixUri + \"/shopping/receipt/delete/\",\r\n        save: prefixUri + \"/shopping/receipt/save\",\r\n        update: prefixUri + \"/shopping/receipt/update\",\r\n    }\r\n};\r\n\r\n\r\nexport default urls;\r\n\r\n// const uriListFile = \"listFile\";\r\n// const profile = \"local\";\r\n// const profile = \"prod_160\";\r\n// function getUriPrefix(key) {\r\n//     if (key === \"local\") {\r\n//         //local\r\n//         return \"http://127.0.0.1:8001\";\r\n//     } else if (key === \"prod_160\") {\r\n//         //160\r\n//         return \"http://122.51.110.127:80\";\r\n//     }\r\n// }\r\n//\r\n// function getUri(key) {\r\n//     let host = getUriPrefix(profile);\r\n//\r\n//     if (key === uriListFile) {\r\n//         return host + \"/zero/sys/file/list\";\r\n//     } else if (key === \"saveMenu\") {\r\n//         return host + \"/zero/111111/sys/file/list\";\r\n//     }\r\n// }\r\n// function getUri(key) {\r\n//\r\n//     //local\r\n//     let protocol = \"http://\";\r\n//     let host = \"127.0.0.1\";\r\n//     let port = 8001;\r\n//     // let listMenu = protocol+host+':'+port+'/zero/menus/list';\r\n//     // let saveMenu = protocol+host+':'+port+'/zero/menus/save';\r\n//\r\n//     let httpLocal = new Object();\r\n//     httpLocal.listMenu = protocol + host + ':' + port + '/zero/menus/list';\r\n//     httpLocal.saveMenu = protocol + host + ':' + port + '/zero/menus/save';\r\n//\r\n//\r\n//     //  160\r\n//     let protocol_160 = \"http://\";\r\n//     let host_160 = \"122.51.110.127\";\r\n//     let port_160 = 80;\r\n//\r\n//     let http160 = new Object();\r\n//     http160.listMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/list';\r\n//     http160.saveMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/save';\r\n//\r\n//\r\n//     //数据封装到map\r\n//     let map = new Map();\r\n//     let local = \"local\";\r\n//     let prod_160 = \"prod_160\";\r\n//     map.set(local, httpLocal);\r\n//     map.set(prod_160, http160);\r\n//     console.log(\"------------------------- get ------------\");\r\n//     console.log(map);\r\n//     console.log(map.size);\r\n//     console.log(map.keys());\r\n//     console.log(map.entries());\r\n//     //从map中获取value  每次只要修改这里即可\r\n//     // let uris = map.get(local);\r\n//     let uris = map.get(prod_160);\r\n//     if (key === \"listMenu\") {\r\n//         return uris.listMenu;\r\n//     } else if (key === \"saveMenu\") {\r\n//         return uris.saveMenu;\r\n//     }\r\n// }\r\n","import React from \"react\";\r\n// import urls from '../../../../config/urls';\r\n// import {Modal} from \"antd\";\r\n// import axios from \"axios\";\r\nimport \"../../../../assets/css/system/rbac/role/role.css\"\r\n\r\nclass RoleAddResource extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //生命周期函数中获取 GET传值\r\n        // console.log(this.props.match.params.aid);\r\n        // console.log(this.props.match.params.aid);\r\n        // console.log(this.props.match.params.aid);\r\n        // console.log(this.props.match.params.aid);\r\n\r\n        console.log(\"*******************\");\r\n        console.log(this.props);\r\n        console.log(\"*******************\");\r\n    }\r\n\r\n\r\n//字符串拼接\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <div>\r\n\r\n\r\n                {/*渲染list 数据*/}\r\n\r\n     {/*           {this.state.resources.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.id}${value.name}`}\r\n                             className='image-node'\r\n                        >\r\n                            id:{value.id}\r\n                            <br/>\r\n                            systemId:{value.systemId}\r\n                            <br/>\r\n                            pId:{value.parentId}\r\n                            <br/>\r\n                            sort{value.sort} <br/>\r\n                            name:{value.name}\r\n                            <br/>\r\n                            level:{value.level}\r\n                            <br/>\r\n                            state:{value.state}\r\n                            <br/>\r\n                            url:{value.url}\r\n                            <br/>\r\n                            icon:{value.icon}\r\n                            <br/>\r\n                            note:{value.note}\r\n                            createDate:{value.createDate}\r\n                            <br/>\r\n                            updateDate:{value.updateDate}\r\n                            <br/>\r\n                            <p className='front-black'>{value.name}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n*/}\r\n\r\n                <div>\r\n                    昵称：<input type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"name\"\r\n                              autoFocus\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n                </div>\r\n                <div>\r\n                    状态：<input type=\"text\"\r\n                              id=\"state\"\r\n                              name=\"state\"\r\n                              placeholder=\"state\"\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n                </div>\r\n                {/*<div>*/}\r\n                {/*    avatar：<input type=\"text\"*/}\r\n                {/*              id=\"avatar\"*/}\r\n                {/*              name=\"avatar\"*/}\r\n                {/*              placeholder=\"avatar\"*/}\r\n                {/*              onChange={e => this.onInputChange(e)}*/}\r\n                {/*/>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default RoleAddResource;\r\n","import React from \"react\";\r\n// import {Modal} from \"antd\";\r\n\r\n\r\nclass RoleInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //生命周期函数中获取 GET传值\r\n        // console.log(this.props.match.params.aid);\r\n        // console.log(this.props.match.params.aid);\r\n        // console.log(this.props.match.params.aid);\r\n        // console.log(this.props.match.params.aid);\r\n\r\n        console.log(\"*******************\");\r\n        console.log(this.props);\r\n        console.log(\"*******************\");\r\n    }\r\n\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n            {/* save insert 创建    新增 新建的框框*/}\r\n            <div>\r\n\r\n\r\n                <div>\r\n                    昵称：<input type=\"text\"\r\n                              name=\"name\"\r\n                              placeholder=\"name\"\r\n                              autoFocus\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n                </div>\r\n                <div>\r\n                    状态：<input type=\"text\"\r\n                              id=\"state\"\r\n                              name=\"state\"\r\n                              placeholder=\"state\"\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n                </div>\r\n                {/*<div>*/}\r\n                {/*    avatar：<input type=\"text\"*/}\r\n                {/*              id=\"avatar\"*/}\r\n                {/*              name=\"avatar\"*/}\r\n                {/*              placeholder=\"avatar\"*/}\r\n                {/*              onChange={e => this.onInputChange(e)}*/}\r\n                {/*/>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default RoleInsert;\r\n","import React from \"react\";\r\nimport urls from '../../../../config/urls';\r\nimport axios from \"axios\";\r\nimport RoleAddResource from \"./RoleAddResource\"\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    // Form,\r\n    // Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n} from 'antd';\r\nimport RoleInsert from \"./RoleInsert\";\r\n\r\nclass RoleList extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            deleteUrl: urls.role.delete,\r\n            tableTitle: \"角色列表\",\r\n            list: [],\r\n            resources: [],\r\n            resourceIds: [],\r\n            visibleForInsert: false,\r\n            visibleForAddResource: true,\r\n            test: \"0002\"\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.refreshTableForRole();\r\n    }\r\n\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        // console.log(model);\r\n        // console.log(model);\r\n        // console.log(model);\r\n        // if (\"RoleInsert\" == model) {\r\n        //     this.setState({\r\n        //         visibleForInsert: true,\r\n        //     });\r\n        // }else if(\"RoleAddResource\"==model){\r\n        //     console.log(\"RoleAddResource\");\r\n        // }\r\n\r\n        console.log(\"原始的状态 \" + this.state.visibleForInsert);\r\n        this.setState({\r\n            visibleForInsert: !this.state.visibleForInsert,\r\n        });\r\n        console.log(\"修改后的状态 \" + this.state.visibleForInsert);\r\n\r\n        console.log(\"子父组件传值 ，flag=  \" + this.state.visibleForInsert);\r\n    };\r\n\r\n    ///////// todo 抽取\r\n    showModalForRoleAddResource = () => {\r\n        // let showAddResourceFlag = !this.state.visibleForAddResource;\r\n        let showAddResourceFlag = true;\r\n        console.log(showAddResourceFlag);\r\n        console.log(showAddResourceFlag);\r\n        console.log(showAddResourceFlag);\r\n        console.log(showAddResourceFlag);\r\n        console.log(\"原始visibleForAddResource的状态 \" + this.state.visibleForAddResource);\r\n        this.setState({visibleForAddResource: showAddResourceFlag});\r\n        console.log(\"修改后visibleForAddResource的状态 \" + this.state.visibleForAddResource);\r\n        console.log(\"子父组件传值visibleForAddResource =  \" + this.state.visibleForAddResource);\r\n    };\r\n\r\n\r\n\r\n    //Modal1-executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n    // Modal1 -\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //Modal2\r\n    okModalForAddResourcesToRole(visible) {\r\n        this.listResource();\r\n\r\n        // this.setState({visibleForInsert: visible});\r\n        console.log(\"###################################\");\r\n        console.log(\"okModalForAddResourcesToRole\");\r\n        console.log(\"visible\" + visible);\r\n        console.log(\"SAVE\");\r\n        console.log(this.state.resources);\r\n        // this.saveUser();\r\n        console.log(\"###################################\");\r\n    }\r\n\r\n    // Modal2\r\n    cancelModalForAddResourcesToRole(visible) {\r\n        // this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 cancelModalForAddResourcesToRole\");\r\n    }\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n\r\n    //获取资源列表\r\n    listResource = () => {\r\n        axios.post(urls.resource.listPage, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n                    var dataFromDb = response.data.data.content;\r\n                    //赋值\r\n                    this.setState({resources: dataFromDb});\r\n                    console.log(this.state.resources);\r\n                }\r\n\r\n            }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('catch异常',);\r\n        });\r\n\r\n    };\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            // {\r\n            //     key: 'id',\r\n            //     title: '测试合并',\r\n            //     render: (text, record) => (\r\n            //         <span>\r\n            //            {record.name}--\r\n            //             {record.avatar}>\r\n            //             </span>\r\n            //     )\r\n            // },\r\n            {\r\n                key: 'id',\r\n                title: 'id',\r\n                dataIndex: 'id'\r\n            }, {\r\n                key: 'name',\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'root',\r\n                title: 'root',\r\n                dataIndex: 'root'\r\n            }, {\r\n                key: 'note',\r\n                title: 'note',\r\n                dataIndex: 'note'\r\n            },\r\n            {\r\n                key: 'state',\r\n                title: '启用状态',\r\n                dataIndex: 'state'\r\n            },\r\n            {\r\n                key: 'createTime',\r\n                title: '创建时间',\r\n                dataIndex: 'createTime'\r\n            },\r\n            {\r\n                key: 'updateTime',\r\n                title: '更新时间',\r\n                dataIndex: 'updateTime'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.remove.bind(this, record.id, this.state.deleteUrl)}>保存</Button>\r\n                        <Button onClick={this.remove.bind(this, record.id, this.state.deleteUrl)}>删除</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////  return  //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                <Button type=\"primary\" onClick={this.showModal}>新增 </Button>\r\n                {/*<Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>*/}\r\n                {/*<Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n                {/*<UserInsert visibleForInsert={this.state.visibleForInsert} user={this}/>*/}\r\n                <Modal\r\n                    title=\"新增\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.visibleForInsert}\r\n                    onOk={() => this.executeInsertModal(false)}\r\n                    onCancel={() => this.cancelInsertModal(false)}\r\n                >\r\n                    <RoleInsert/>\r\n                </Modal>\r\n\r\n                <Button type=\"primary\" onClick={this.showModalForRoleAddResource}>RoleAddResource </Button>\r\n                <Modal\r\n                    title=\"RoleAddResource\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.visibleForAddResource}\r\n                    onOk={() => this.okModalForAddResourcesToRole(false)}\r\n                    onCancel={() => this.cancelModalForAddResourcesToRole(false)}\r\n                >\r\n                    <RoleAddResource/>\r\n\r\n                </Modal>\r\n\r\n\r\n                {/*<Button type=\"primary\" onClick={this.showModal}>测试RoleAddResource </Button>*/}\r\n                {/*<Modal*/}\r\n                {/*title=\"测试RoleAddResource\"*/}\r\n                {/*wrapClassName=\"vertical-center-modal\"*/}\r\n                {/*visible={this.state.visibleForInsert}*/}\r\n                {/*onOk={() => this.executeInsertModal(false)}*/}\r\n                {/*onCancel={() => this.cancelInsertModal(false)}*/}\r\n                {/*>*/}\r\n                {/*<RoleInsert/>*/}\r\n                {/*</Modal>*/}\r\n\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n\r\n    // 发请求去查询分页数据\r\n    refreshTableForRole(listPage, query) {\r\n        this.listPageForRole(urls.role.listPage, {});\r\n    }\r\n\r\n    //查分页数据\r\n    listPageForRole(listPage, query) {\r\n        // let roleList = new Array();\r\n        axios.post(listPage, query).then(response => {\r\n            console.log(response.data);\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(\"refreshTable\");\r\n                console.log(response.data.msg);\r\n            }\r\n            //失败\r\n            if (null == response.data.data) {\r\n                alert(response.data.msg);\r\n            }\r\n\r\n\r\n            var fromDb = response.data.data;\r\n            console.log(fromDb);\r\n            //赋值\r\n            this.setState({list: fromDb});\r\n\r\n            console.log(this.state.list);\r\n        }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('异常  catch  list page role====',);\r\n        });\r\n    }\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveUser = (e) => {\r\n        axios.post(urls.user.saveUser, {\r\n            name: this.state.name,\r\n            state: this.state.state == null ? 0 : this.state.state\r\n\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    name: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        }).catch(function (response) {\r\n            console.log(response);\r\n            alert(response);\r\n            console.log('catch 异常',);\r\n        });\r\n        ;\r\n    };\r\n\r\n    //删除\r\n    remove(id, deleteUrl) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = deleteUrl + id;\r\n        console.log(url);\r\n        axios.delete(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n            console.log('异常',);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default RoleList;\r\n","import React from \"react\";\r\n// import RoleInsert from './RoleInsert'\r\nimport RoleList from './RoleList'\r\n// import RoleInsert from './RoleInsert'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Role extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <RoleList/>\r\n                </div>\r\n                <div>\r\n                    <h2>GET 角色-动态传值测试</h2>\r\n\r\n                    <ul>\r\n                        {this.state.roles.map((value, key) => {\r\n                            return <li key={key}>\r\n                                <Link to={`/roleInsert/${value.aid}`}>{value.title}</Link>\r\n                            </li>\r\n\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\n\r\n// import UserInsert from \"./UserInsert\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    // Form,\r\n    // Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n} from 'antd';\r\nimport urls from \"../../../../config/urls\";\r\n\r\nclass User extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"用户列表\",\r\n            users: [],\r\n            visibleForInsert: false,\r\n            test: \"453455454\"\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.refreshTable();\r\n    }\r\n\r\n    refreshTable = () => {\r\n        axios.post(urls.user.listPageUser, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n                    console.log(\"refreshTable\");\r\n                    console.log(response.data.msg);\r\n                    console.log(response.data.msg);\r\n                    console.log(response.data.msg);\r\n                }\r\n\r\n\r\n                //失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n\r\n    };\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveUser = (e) => {\r\n        axios.post(urls.user.saveUser, {\r\n            nickname: this.state.nickname,\r\n            state: this.state.state == null ? 0 : this.state.state\r\n\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    nickname: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        })\r\n\r\n\r\n            //异常\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                alert(response);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            // {\r\n            //     key: 'id',\r\n            //     title: '测试合并',\r\n            //     render: (text, record) => (\r\n            //         <span>\r\n            //            {record.nickname}--\r\n            //             {record.avatar}>\r\n            //             </span>\r\n            //     )\r\n            // },\r\n            {\r\n                key: 'nickname',\r\n                title: '昵称',\r\n                dataIndex: 'nickname',\r\n                width: 150\r\n            },\r\n            // {\r\n            //     key: 'avatar',\r\n            //     title: '标识',\r\n            //     dataIndex: 'avatar'\r\n            // },\r\n            {\r\n                key: 'state',\r\n                title: '启用状态',\r\n                dataIndex: 'state'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                        <Button onClick={this.remove.bind(this, record.id)}>删除-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                <Button type=\"primary\" onClick={this.showModal}>新增人员 </Button>\r\n                {/*<Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>*/}\r\n                {/*<Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n\r\n                {/*<UserInsert visibleForInsert={this.state.visibleForInsert} user={this}/>*/}\r\n\r\n                <Modal\r\n                    title=\"新增\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.visibleForInsert}\r\n                    onOk={() => this.executeInsertModal(false)}\r\n                    onCancel={() => this.cancelInsertModal(false)}\r\n                >\r\n\r\n                    {/* save insert 创建    新增 新建的框框*/}\r\n                    <div>\r\n\r\n\r\n                        <div>\r\n                            昵称：<input type=\"text\"\r\n                                      name=\"nickname\"\r\n                                      placeholder=\"nickname\"\r\n                                      autoFocus\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        <div>\r\n                            状态：<input type=\"text\"\r\n                                      id=\"state\"\r\n                                      name=\"state\"\r\n                                      placeholder=\"state\"\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        {/*<div>*/}\r\n                        {/*    avatar：<input type=\"text\"*/}\r\n                        {/*              id=\"avatar\"*/}\r\n                        {/*              name=\"avatar\"*/}\r\n                        {/*              placeholder=\"avatar\"*/}\r\n                        {/*              onChange={e => this.onInputChange(e)}*/}\r\n                        {/*/>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n\r\n\r\n                </Modal>\r\n\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = urls.user.delete + id;\r\n        console.log(url);\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport urls from '../../../../config/urls.js';\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\n\r\n\r\n//对于 Resource 的CRUD\r\nclass Resource extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"资源列表\",\r\n            visibleForInsert: false,\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.resource.listPage, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response);\r\n                console.log(response.data);\r\n                console.log(response.data.content);\r\n\r\n                    //赋值\r\n                    this.setState({list: response.data.content});\r\n                    console.log(this.state.list);\r\n\r\n            }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('catch异常',);\r\n        });\r\n    };\r\n\r\n    scanResourceFromController = () => {\r\n        console.log(\"############ scanResourceFromController ###########\");\r\n        axios.get(urls.resource.scan, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n                    //赋值\r\n                    this.setState({list: response.data.data.content});\r\n                    console.log(this.state.list);\r\n                    this.refreshTable();\r\n                }\r\n            }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('异常  catch ');\r\n        });\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            {key: 'id', title: 'id', dataIndex: 'id'},\r\n            // {key: 'code', title: 'code', dataIndex: 'code', width: 20, high: 20},\r\n            {key: 'path', title: 'path', dataIndex: 'path'},\r\n            // {key: 'name', title: 'name', dataIndex: 'name'},\r\n            {key: 'resourceName', title: 'resourceName', dataIndex: 'resourceName'},\r\n            {key: 'parentId', title: 'parentId', dataIndex: 'parentId'},\r\n            {key: 'method', title: 'method', dataIndex: 'method'},\r\n            // {key: 'note', title: 'note', dataIndex: 'note'},\r\n            // {key: 'priority', title: 'priority', dataIndex: 'priority'},\r\n            // {key: 'type', title: 'type', dataIndex: 'type'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n            //列名称--数据源的字段名\r\n            // {key: 'id', title: '文件大小', render: (text, record) => (<span>    {record.size} {record.sizeUnit}</span>)},\r\n            {\r\n                key: 'remove', title: '操作',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                        <Button onClick={this.remove.bind(this, record.id)}>remove</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n\r\n        //////////////////////\r\n        return (<div>\r\n            <Card title={this.state.tableTitle}>\r\n                <Button type=\"primary\" onClick={this.scanResourceFromController}>扫描</Button>\r\n                <Button type=\"danger\" onClick={this.deleteAllResource}>清空</Button>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>hh\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        axios.delete(urls.resource.delete + id).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('catch异常',);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //删除全部\r\n    deleteAllResource = () => {\r\n        let ids = [];\r\n        for (var i = 0; i < this.state.list.length; i++) {\r\n            ids.push(this.state.list[i].id);\r\n        }\r\n        console.log(ids);\r\n\r\n        axios.post(urls.resource.deleteBatch, ids).then(response => {\r\n            if (response !== null && response !== 0) {\r\n                console.log(response);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('catch异常',);\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport default Resource;\r\n","import React from \"react\";\r\nimport {\r\n    // Card,\r\n    Button, Form, Input, Modal\r\n} from \"antd\";\r\n\r\n// 新增用户\r\nclass UserInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            id: -1,\r\n            visible: false\r\n            //\r\n            // roles: [\r\n            //     {\r\n            //         aid: '1',\r\n            //         title: '标题1'\r\n            //     }, {\r\n            //         aid: '2',\r\n            //         title: '标题2'\r\n            //     }\r\n            //     , {\r\n            //         aid: '3',\r\n            //         title: '标题3'\r\n            //     }\r\n            //     , {\r\n            //         aid: '4',\r\n            //         title: '标题4'\r\n            //     }\r\n            // ]\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"ch ch ch\");\r\n\r\n        console.log(this.props.visibleForInsert);\r\n        // console.log(this.state.visible);\r\n\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        // let query = url.parse(this.props.location.search, true).query;\r\n        // console.log(query);\r\n        // console.log(this.state.id);\r\n    }\r\n\r\n\r\n    saveUser = () => {\r\n        console.log(\"save!!!!!!\");\r\n    };\r\n\r\n    //\r\n    // getInitialState() {\r\n    //     return {\r\n    //         modal2Visible: false,\r\n    //     };\r\n    // }\r\n\r\n    cancelInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n\r\n            <Modal\r\n                title=\"垂直居中的对话框\"\r\n                wrapClassName=\"vertical-center-modal\"\r\n                visible={this.props.visibleForInsert}\r\n                onOk={() => this.executeInsertModal(false)}\r\n                onCancel={() => this.cancelInsertModal(false)}\r\n            >\r\n\r\n\r\n                <p>对话框的内容= {this.props.visibleForInsert}</p>\r\n                <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                    <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                    </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                    <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInsert;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Food extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    title: 'food1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: 'food2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: 'food3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: 'food4'\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getFoods = () => {\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>Food</h1>\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        <Link to={`/foodDetails?aid=${value.aid}`}>{value.title}</Link>\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Food;\r\n","import React from \"react\";\r\nimport {Timeline} from 'antd';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass Blog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 13,\r\n            authorId: '', // 作者，所属用户ID[多作者请在描述中填充第二作者信息]\r\n            tagId: '', // 栏目ID\r\n            sortId: '',// 所属分类\r\n            status: '',// 文章的模式:0为私有，1为公开，2为仅好友查看\r\n            title: '',// 文章名称-64\r\n            description: '',// 文章描述-128\r\n            content: '',// 文章内容[text]\r\n            publishDate: '',// 发布时间\r\n            createDate: '',// 创建时间(创建未发表)\r\n            updateDate: '',// 更新时间\r\n\r\n            //时间线 渲染列表\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n        this.getTimelineListFun();\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    // 获取博客数据  图片 + 文字，这里应该获取的是文字数据 阅读数等\r\n    getTimelineListFun = (e) => {\r\n        var uId = 1;\r\n        let url = apis.blog.listBlogByAuthorId + uId;\r\n        console.log(\"--- url ---\");\r\n        console.log(url);\r\n        console.log(url);\r\n        console.log(url);\r\n\r\n\r\n        axios.get(url).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n    onClick = (e) => {\r\n        console.log(new Date());\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/*<Timeline>*/}\r\n                {/*    <Timeline.Item color=\"green\">AAA</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">BB</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">C</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"red\">Create</Timeline.Item>*/}\r\n                {/*</Timeline>*/}\r\n\r\n                <Timeline className='list'>\r\n                    {\r\n                        this.state.list.map((value, key) => {\r\n                            return (\r\n                                <Timeline.Item key={key}\r\n                                               // onClick={this.onClick()}\r\n                                >\r\n                                    <Link to={'/blog-detail'} type=\"span\">{value.timeLine}     </Link>\r\n                                </Timeline.Item>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </Timeline>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\nclass ManageBlog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            id: null,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: null,\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    getInitialState() {\r\n        return {\r\n            modal2Visible: false,\r\n        };\r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({modal2Visible});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.getManageBlog();\r\n\r\n    }\r\n\r\n    // hasErrors(fieldsError) {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    getManageBlog = () => {\r\n        var port = 80;\r\n        var url = \"http://127.0.0.1:\" + port + \"/zero/blogs/page\";\r\n        console.log(\"######################################\");\r\n        console.log(url);\r\n        console.log(\"######################################\");\r\n        let user = {};\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n                //登录成功，获取到后台返回的数据，可以做缓存\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //更新用户\r\n    updateUser = (e) => {\r\n        console.log(\"uuuuuuuuuuuu\");\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '测试合并',\r\n                render: (text, record) => (\r\n                    <span>\r\n                       {record.id}--\r\n                        {record.version}>\r\n                        </span>\r\n                )\r\n            },\r\n            {\r\n                key: 'authorId',\r\n                title: '作者id',\r\n                dataIndex: 'authorId',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'title',\r\n                title: 'title',\r\n                dataIndex: 'title',\r\n                width: 150\r\n            }, {\r\n                key: 'description',\r\n                title: 'description',\r\n                dataIndex: 'description',\r\n                width: 150\r\n            }, {\r\n                key: 'content',\r\n                title: 'content',\r\n                dataIndex: 'content',\r\n                width: 150\r\n            }, {\r\n                key: 'version',\r\n                title: 'version',\r\n                dataIndex: 'version',\r\n                width: 150\r\n            }, {\r\n                key: 'sortWeight',\r\n                title: 'sortWeight',\r\n                dataIndex: 'sortWeight',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'tagId',\r\n                title: '标签',\r\n                dataIndex: 'tagId'\r\n            }, {\r\n                key: 'category',\r\n                title: '分类',\r\n                dataIndex: 'category'\r\n            },\r\n            {\r\n                key: 'status',\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.add}>add {record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={\"基础表格\"}>\r\n                {/*    <Button type=\"primary\" onClick={this.updateUser}>测试 primary与后台交互</Button>\r\n                <Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>\r\n                <Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n                <Button type=\"dashed\" onClick={() => this.setModal2Visible(true)}>显示垂直居中的对话框</Button>\r\n\r\n                <Modal\r\n                    title=\"垂直居中的对话框\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.modal2Visible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    //  onCancel={() => this.setModal2Visible(false)}\r\n                >\r\n\r\n                    <p>对话框的内容</p>\r\n                    <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                        <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                        </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                        <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                    </Form>\r\n\r\n\r\n                </Modal>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>)\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ManageBlog;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass BlogDetail extends React.Component {\r\n\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            //  const MOCK_DATA = \"Hello.\\n\\n * This is markdown.\\n * It is fun\\n * Love it or leave it.\";\r\n            markdown: '# This is a H1  \\n## This is a H2  \\n###### This is a H6',\r\n            // #测试一级标题 ##副标题\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n//todo 组件间传值\r\n        let id = 13;\r\n        this.getArticle(id);\r\n\r\n        console.log(\"----------------------------\");\r\n    }\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    markdown: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // markdown: article.content\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                BlogDetail\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    value={this.state.markdown}\r\n                    // style={{height: '400px'}}\r\n                    renderHTML={this.renderHTML}\r\n\r\n                    config={{\r\n                        view: {\r\n                            menu: false,\r\n                            md: false,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    // onChange={this.handleEditorChange}\r\n                    // onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default BlogDetail;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n// import tasklists from 'markdown-it-task-lists'\r\n\r\n//网络请求\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\n// import hljs from 'highlight.js'\r\n// import 'highlight.js/styles/atom-one-light.css'\r\n// import './index.less';\r\n// import 'highlight.js/styles/github.css'\r\n\r\n//blog 的详情\r\n//两种写法 导出一个类\r\n//export default class BlogMd extends React.Component {\r\nclass BlogMd extends React.Component {\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // this.props.form.validateFields();\r\n        console.log(\"----------- md -----------------\");\r\n        let id = 13;\r\n        this.getArticle(id);\r\n        //定时器\r\n        //todo 定时器 触发\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n\r\n\r\n    }\r\n\r\n    tick() {\r\n        //循环更新\r\n        this.updateArticleFun();\r\n\r\n        // this.setState((prevState) => ({\r\n        //     secondsElapsed: prevState.secondsElapsed + 1\r\n        // }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //清除\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    content: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    //编辑器有变化的话执行 更新文章\r\n    handleEditorChange = ({html, text}) => {\r\n        // console.log(\"html 是md 输入框中文本转换为html的文本---text 是md 输入框中的文本\");\r\n        //console.log(html);\r\n        //console.log(text);\r\n\r\n        //编辑\r\n        if (this.state.id != null) {\r\n            console.log(this.state.id);\r\n            //文章正文\r\n            this.setState({\r\n                content: text\r\n            });\r\n            //编辑文章 更新即可\r\n            this.updateArticleFun();\r\n        } else {\r\n            //todo 新增文章\r\n\r\n        }\r\n    };\r\n\r\n    updateArticleFun = () => {\r\n        let uri = apis.blog.updateBlog;\r\n        let body = {};\r\n        body.id = this.state.id;\r\n        body.content = this.state.content;\r\n        this.postBody(uri, body);\r\n    };\r\n\r\n    //\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n\r\n    // handleGetMdValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getMdValue())\r\n    // }\r\n\r\n    // handleGetHtmlValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getHtmlValue())\r\n    // }\r\n\r\n\r\n    //创建文章\r\n    crateArticleFun() {\r\n        // console.log(this.state.username);\r\n        var url = \"http://arc.com/zero/blogs\";\r\n        console.log(url);\r\n        let article = {\r\n            \"authorId\": this.state.authorId,\r\n            \"tagId\": this.state.tagId,\r\n            \"category\": this.state.category,\r\n            \"status\": this.state.status,\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"content\": this.state.content,\r\n            \"version\": this.state.version,\r\n            \"sortWeight\": this.state.sortWeight\r\n        };\r\n\r\n        let ret = this.postBody(url, article);\r\n        console.log(article);\r\n        console.log(ret);\r\n    };\r\n\r\n\r\n    //上传图片\r\n    handleImageUpload(file, callback) {\r\n\r\n        console.log(file);\r\n        console.log(callback);\r\n        const reader = new FileReader();\r\n        console.log(reader);\r\n        // reader.onload = () => {\r\n        //     // const convertBase64UrlToBlob = (urlData) => {\r\n        //     //     let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]\r\n        //     //     let bstr = atob(arr[1]);\r\n        //     //     let n = bstr.length;\r\n        //     //     let u8arr = new Uint8Array(n);\r\n        //     //     while (n--) {\r\n        //     //         u8arr[n] = bstr.charCodeAt(n)\r\n        //     //     }\r\n        //     //     return new Blob([u8arr], {type: mime})\r\n        //     };\r\n        //     const blob = convertBase64UrlToBlob(reader.result);\r\n        //     setTimeout(() => {\r\n        //         // setTimeout 模拟异步上传图片\r\n        //         // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown\r\n        //         callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')\r\n        //     }, 1000)\r\n        // };\r\n        // reader.readAsDataURL(file)\r\n    }\r\n\r\n    //-----------------------------------------------------------------------------\r\n    //react渲染DOM的节点\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    style={{height: '700px'}}\r\n                    value={this.state.content}\r\n                    renderHTML={this.renderHTML}\r\n                    config={{\r\n                        view: {\r\n                            menu: true,\r\n                            md: true,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    onChange={this.handleEditorChange}\r\n                    onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogMd;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nclass FoodDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        let query = url.parse(this.props.location.search, true).query;\r\n        console.log(query);\r\n        console.log(query.aid);\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>FoodDetails</h1>\r\n\r\n            <hr/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default FoodDetails;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import {Link} from \"react-router-dom\";\r\n// import  Home from '../../../components/layout/Home'\r\nimport '../../../assets/css/system/menu/menu.css'\r\nimport apis from '../../../config/urls.js';\r\n\r\n\r\nclass Menu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            parentId: null,\r\n            systemId: null,//适用系统的id\r\n            code: null,\r\n            name: \"测试\",\r\n            nameEnglish: null,\r\n            sort: 0,\r\n            level: 0,// 级别，1=第一级，2=第二级，，，\r\n            state: 1,// 状态，暂时规划true=非0/false=0\r\n            url: null,// 菜单URL地址\r\n            icon: null,// icon地址\r\n            note: null,\r\n\r\n\r\n            raw: {\r\n                id: null,\r\n                parentId: null,\r\n                systemId: null,//适用系统的id\r\n                code: null,\r\n                name: \"测试\",\r\n                nameEnglish: null,\r\n                sort: 0,\r\n                level: 0,// 级别，1=第一级，2=第二级，，，\r\n                state: 1,// 状态，暂时规划true=非0/false=0\r\n                url: null,// 菜单URL地址\r\n                icon: null,// icon地址\r\n                note: null,\r\n            },\r\n            // info: '',\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForMenuList(\"\");\r\n    }\r\n\r\n    //请求服务器获取数据集合\r\n    searchForMenuList = (e) => {\r\n        let url = apis.menu.listMenu;\r\n        let query = {};\r\n        axios.post(url, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(response.config);\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(\"###################\");\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n\r\n\r\n    };\r\n\r\n\r\n    /*\r\n        searchForMenuList = (name) => {\r\n            let url = apis.menu.listMenu;\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n\r\n            console.log(\"######## 搜索 获取图片的集合 #########\");\r\n            let query = {};\r\n            // console.log(filename);\r\n            // query.name = this.state.name;\r\n            // query.name = this.state.name;\r\n            axios.post(url,query).then(response => {\r\n                console.log(\"##### response ####\");\r\n                console.log(response);\r\n                console.log(\"###################\");\r\n                let code = response.data.code;\r\n                // //失败  小于1 失败\r\n                // if (null === response && response.data.code == 1) {\r\n                //     // this.props.history.push(\"/Success\");\r\n                if (code === 1) {\r\n                    let arr = [];\r\n                    // arr.push(this.state.raw);\r\n                    // console.log(\"arr.push(response.data.data);\");\r\n                    // console.log(response.data.data);\r\n                    let resultArray = arr.concat(response.data.data);\r\n                    console.log(resultArray);\r\n                    this.setState({\r\n                        list: resultArray\r\n                    });\r\n                    console.table(this.state.images);\r\n                }\r\n                //\r\n                // } else {\r\n                //     alert(response.data.msg);\r\n                //     alert(\"FAIL\");\r\n                //     console.log(\"FAIL\");\r\n                //     console.log(response);\r\n                //     // this.props.history.push(\"/file-search\");\r\n                // }\r\n            })\r\n                // .catch(function (error) {\r\n                //     //异常\r\n                //     console.log(error);\r\n                //     console.log('catch 异常',);\r\n                // });\r\n            ;\r\n        };\r\n    */\r\n\r\n    //请求服务器 保存数据\r\n    saveMenu = (e) => {\r\n        console.log(\"######## saveMenu #########\");\r\n        let url = apis.menu.saveMenu;\r\n        console.log(url);\r\n        //input 的参数怎么获取\r\n\r\n\r\n        let request = {};\r\n        request.parentId = this.state.parentId;\r\n        request.code = null;\r\n        request.name = this.state.name;\r\n        request.systemId = this.state.systemId;\r\n        request.sort = this.state.sort;\r\n        request.level = this.state.level;\r\n        request.state = this.state.state;\r\n        request.url = this.state.url;\r\n        request.icon = this.state.icon;\r\n        request.note = this.state.note;\r\n\r\n        //request  .nameEnglish = this.state.nameEnglish;\r\n        console.table(this.state);\r\n        console.table(request);\r\n        console.log(request);\r\n\r\n        // query.name = this.state.name;\r\n        axios.post(url, request).then(response => {\r\n\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n\r\n                // this.setState({\r\n                // });\r\n            }\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        //异常\r\n            .catch(function (error) {\r\n                alert(error);\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    /////////////////////////////////\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n\r\n            // raw: {\r\n            //     [inputName]: inputValue\r\n            // }\r\n        })\r\n    }\r\n\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    //获取input的值\r\n    handleInputOnChange = (event) => {\r\n        console.log(event);\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        //如何知道是那个id的input框 ？\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>  {this.state.name}</h3>\r\n                <h4>  {this.state.note}</h4>\r\n                <h4>  {this.state.systemId}</h4>\r\n                <h4>  {this.state.sort}</h4>\r\n\r\n\r\n                <h2>菜单管理</h2>\r\n\r\n                {/*<p className=\"front-black\">检索菜单</p>*/}\r\n                <p>\r\n                    {/*<label htmlFor=\"username\" className=\"sr-only\">名称</label>*/}\r\n                    <input type=\"text\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                           required\r\n                        // value={this.state.name}\r\n                        // defaultValue={this.state.name}\r\n\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForMenuList}>检索菜单</button>\r\n                </p>\r\n\r\n\r\n                {/* save insert 创建    新增 新建的框框*/}\r\n                <form className='image-node'>\r\n\r\n                    <div>\r\n                        名称：<input type=\"text\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  placeholder=\"name\"\r\n                                  autoFocus\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        地址：<input type=\"text\"\r\n                                  id=\"url\"\r\n                                  name=\"url\"\r\n                                  placeholder=\"url\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n\r\n                        系统：<input type=\"text\"\r\n                                  id=\"systemId\"\r\n                                  name=\"systemId\"\r\n                                  placeholder=\"systemId\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        上级：<input type=\"text\"\r\n                                  id=\"parentId\"\r\n                                  name=\"parentId\"\r\n                                  placeholder=\"parentId\"\r\n                        // required\r\n                        //    value={this.state.name}\r\n                                  className='menu-input-save'\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        状态：<input type=\"text\"\r\n                                  id=\"state\"\r\n                                  name=\"state\"\r\n                                  placeholder=\"state\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        注释：<input type=\"text\"\r\n                                  id=\"note\"\r\n                                  name=\"note\"\r\n                                  placeholder=\"note\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n                    排序：<input type=\"text\"\r\n                              id=\"sort\"\r\n                              name=\"sort\"\r\n                              placeholder=\"sort\"\r\n                              className=\"menu-input-save-sort\"\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n\r\n\r\n                    {/*nameEnglish  icon  */}\r\n                    <button\r\n                        className=\"node-for-save-btn\"\r\n                        onClick={e => this.saveMenu(e)}>保存\r\n                    </button>\r\n\r\n                </form>\r\n\r\n                {/*渲染list 数据*/}\r\n\r\n                {this.state.list.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.id}${value.name}`}\r\n                             className='image-node'\r\n                        >\r\n                            id:{value.id}\r\n                            <br/>\r\n                            systemId:{value.systemId}\r\n                            <br/>\r\n                            pId:{value.parentId}\r\n                            <br/>\r\n                            sort{value.sort} <br/>\r\n                            name:{value.name}\r\n                            <br/>\r\n                            level:{value.level}\r\n                            <br/>\r\n                            state:{value.state}\r\n                            <br/>\r\n                            url:{value.url}\r\n                            <br/>\r\n                            icon:{value.icon}\r\n                            <br/>\r\n                            {/*note:{value.note}*/}\r\n                            {/*createDate:{value.createDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*updateDate:{value.updateDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*<p className='front-black'>{value.name}</p>*/}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n// import {Form, Icon, Input, Button, Checkbox,} from 'antd';\r\n// import \"antd/dist/antd.css\";\r\nimport '../../assets/css/layout/login.css'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '', //账号\r\n            pwd: '', // 密码\r\n            pwdConfirm: '', // 确认密码\r\n            type: 'worker', // 用户类型 默认求职者\r\n            sex: 3,\r\n            info: '',\r\n        }\r\n    }\r\n\r\n\r\n    //   hasErrors=(fieldsError)=> {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(new Date());\r\n        console.log(\"componentDidMount\");\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    handleUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePwd = (e) => {\r\n        this.setState({\r\n            pwd: e.target.value\r\n        });\r\n    };\r\n\r\n    keyUpFun = (e) => {\r\n        console.log(e.keyCode === 13);\r\n        if (13 === e.keyCode) {\r\n            this.loginFun(e);\r\n        }\r\n    };\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    loginFun = (e) => {\r\n\r\n\r\n        let host = \"http://127.0.0.1\";\r\n        let port = 8001;\r\n        let uri = \"/zero/v2/login/json/process\";\r\n        let url = host + \":\" + port + uri;\r\n        console.log(this.state.username);\r\n        console.log(this.state.pwd);\r\n        console.log(this.state.info);\r\n\r\n\r\n        console.log(url);\r\n        let user = {\r\n            'identifier': this.state.username,\r\n            \"credential\": this.state.pwd,\r\n            \"identityType\": 1\r\n            //identityType\r\n        };\r\n\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败  小于1 失败\r\n                if (null === response && response.data.code < 1) {\r\n                    alert(response.data.msg);\r\n                    this.props.history.push(\"/user\");\r\n                } else {\r\n                    //登录成功，获取到后台返回的数据，可以做缓存\r\n                    console.log(\" 登录成功\" + response.data.msg);\r\n                    // this.props.history.push(\"/blog\");\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n                //this.props.history.push(\"/login\");\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center-all\">\r\n\r\n                <div className=\"heading   \">\r\n                    <h2>登录 Please sign in</h2>\r\n                </div>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"username\" className=\"sr-only\">名称</label>\r\n                    <input type=\"text\"\r\n                           id=\"username\" name=\"identifier\"\r\n                           onChange={this.handleUsername}\r\n                           value={this.state.username}\r\n                           placeholder=\"手机号/邮箱/用户名\"\r\n                           className=\"form-control\"\r\n                           required\r\n                           autoFocus/>\r\n                </p>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"password\"\r\n                           className=\"sr-only\">密码</label>\r\n                    <input type=\"password\"\r\n                           value={this.state.pwd}\r\n                           onChange={this.handlePwd}\r\n                           onKeyUp={this.keyUpFun}\r\n                           className=\"form-control\"\r\n                           placeholder=\"密码\"\r\n                           id=\"password\"\r\n                           name=\"credential\"\r\n                           required/>\r\n                </p>\r\n\r\n                {/*                    <input name=\"rememberMe\" id=\"rememberMe\" type=\"checkbox\"\r\n                           className=\"checkbox\" value=\"true\"/><label\r\n                    htmlFor=\"rememberMe\">30 天内记住我</label>*/}\r\n\r\n                <input name=\"identityType\" type=\"hidden\" value=\"1\"/>\r\n\r\n                <div>\r\n                    <button onClick={this.loginFun} className=\"btn-login-submit \">点我登录</button>\r\n                </div>\r\n\r\n                <div className=\"forgotPasswordContainer CanBePulledDown\"\r\n                     id=\"forgotPasswordDiv\">\r\n                    <a href=\"https://app.yinxiang.com/ForgotPassword.action\"\r\n                       target=\"_top\" className=\"forgot-password\">\r\n                        忘记密码？</a>\r\n                </div>\r\n\r\n                {/*                 <div className=\"Btn Btn_emph Btn_super Btn_Yx\">\r\n                        <img\r\n                            src=\"https://static.app.yinxiang.com/embedded-web/web/static/media/wechat_icon@2x.e20b7172.png\"/>\r\n                        <span>使用微信登录</span>\r\n                    </div>*/}\r\n\r\n\r\n                <div className=\"footer wrapper\">\r\n                    <a href=\"https://www.yinxiang.com/tos/\" className=\"footer-entry\">服务条款</a>\r\n                    <a href=\"https://www.yinxiang.com/privacy/\" className=\"footer-entry\">|隐私政策</a>\r\n                    <span className=\"footer-entry last\">    版权所有 2007 - 2019 笔记。保留所有权利。</span>\r\n                </div>\r\n\r\n                <hr/>\r\n                <h3> 获取输入值账号{this.state.username}</h3>\r\n                <h3> 获取输入值密码{this.state.pwd} </h3>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport {\r\n    Upload,\r\n    Icon,\r\n    message,\r\n    Button\r\n} from 'antd';\r\n// import axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\n// api接口地址抽取\r\nimport urls from '../../../config/urls.js';\r\n\r\nclass FileUpload2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            fileList: [\r\n                {\r\n                    uid: '-1',\r\n                    name: 'xxx.png',\r\n                    status: 'done',\r\n                    // code: 'done',\r\n                    url: 'http://127.0.0.1:8001/zero/file/upload',\r\n                },\r\n            ],\r\n\r\n            //\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n    render() {\r\n        const props = {\r\n            name: 'file',\r\n            action: urls.file.uploadFile,\r\n            // action: 'http://122.51.110.127:8001/zero/file/upload',\r\n            headers: {\r\n                authorization: 'authorization-text',\r\n            },\r\n            //上传中、完成、失败都会调用这个函数。\r\n            onChange(info) {\r\n                if (info.file.status === 'done' && info.file.response.code === 1) {\r\n                    console.log(\"################################\");\r\n                    console.log(info);\r\n                    console.log(\"--------------------info.file\");\r\n                    console.log(info.file);\r\n                    console.log(\"--------------------info.fileList\");\r\n                    console.log(info.fileList);\r\n                    console.log(\"--------------------info.event\");\r\n                    console.log(info.event);\r\n                    console.log(\"--------------------文件上传成功\");\r\n\r\n                    console.log(info.file.response.code);\r\n                    console.log(info.file.response.msg);\r\n                    console.log(info.file.response.data);\r\n\r\n                    console.log(\"--------------------info.file.response\");\r\n                    console.log(info.file.response);\r\n                    message.success(`${info.file.name}-->${info.file.response.data} 文件上传成功`);\r\n                    let fileName = info.file.response.data;\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(this);\r\n                    //info.flie.name = fileName;\r\n                    // this.setState(\r\n                    //     {\r\n                    //         img2: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n                    //\r\n                    //     }\r\n                    // )\r\n\r\n\r\n                } else if (info.file.status === 'error') {\r\n                    message.error(`${info.file.name} 文件上传失败`);\r\n                } else {\r\n                    //console.log(\"失败\" + info.file.response.msg);\r\n                    console.log(\"失败\");\r\n                }\r\n                console.log(\"################################\");\r\n            },\r\n        };\r\n\r\n        /*        const props_ = {\r\n                    name: 'file',\r\n                    directory: true,\r\n                    //     multiple: true,\r\n                    action: 'http://127.0.0.1:8001/zero/file/upload',\r\n                    onChange(info) {\r\n\r\n                    },\r\n                };*/\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Upload {...props}>\r\n                    <Button>\r\n                        <Icon type=\"upload\"/> 上传\r\n                    </Button>\r\n                </Upload>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUpload2;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport FileDownload from 'react-file-download';\r\n\r\n// 文件下载\r\nclass FileDownload2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            //注意 参数 symbol 意思是“标记”\r\n            //目的是：查询文件记录的一个检索参数，尽可能做到可以确定唯一一条数据，否则 应该提示检索到多条数据，请继续选择一个或者多个 以供下载\r\n            symbol: null,\r\n            alertMessage: \"请出入合法查询条件\",\r\n            // file: null,\r\n            type: null,\r\n        }\r\n    }\r\n\r\n    getFile = (symbol) => {\r\n        //  检索条件 symbol  校验与赋值\r\n        if (this.state.symbol === null || this.state.symbol.trim() === \"\") {\r\n            alert(this.state.alertMessage);\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            symbol: symbol,\r\n        });\r\n\r\n        let url = urls.file.downloadFileByIdOrCode + this.state.symbol;\r\n        console.log(url);\r\n        axios.get(url, {responseType: 'blob'}).then(response => {\r\n\r\n            // let fileName = \"temp.jpg\";\r\n            let fileName = response.headers['filename'];\r\n            console.log(response);\r\n            console.log(response.headers);\r\n            // console.log(response.data.symbol);\r\n\r\n            FileDownload(response.data, fileName);\r\n        })\r\n    };\r\n\r\n\r\n    //onClick button 事件函数\r\n    searchForDownloadFile = (e) => {\r\n        this.getFile(this.state.symbol);\r\n    };\r\n\r\n\r\n    // componentDidMount() {\r\n    //     //获取列表数据\r\n    // }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        //获取原生的事件对像 e.nativeEvent\r\n        this.setState({\r\n            symbol: event.target.value,\r\n        });\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(this.state.symbol);\r\n            this.getFile(event.target.value);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                           placeholder=\"code/id/name\"\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    <button onClick={this.searchForDownloadFile}>获取文件</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileDownload2;\r\n//            <p style={textStyles}>inline style</p>\r\n\r\n//返回数据中获取 文件名称\r\n\r\n\r\n//https://www.jianshu.com/p/eb785e4318f4\r\n//download(){\r\n//         const url = \"文件地址\"\r\n//         axios.get(url,{\r\n//             responseType:'blob'\r\n//         }).then( res => {\r\n//             let blob = new Blob([res.data])\r\n//             let downloadElement = document.createElement('a')\r\n//             let href = window.URL.createObjectURL(blob); //创建下载的链接\r\n//             downloadElement.href = href;\r\n//             downloadElement.download = `new name`; //下载后文件名\r\n//             document.body.appendChild(downloadElement);\r\n//             downloadElement.click(); //点击下载\r\n//             document.body.removeChild(downloadElement); //下载完成移除元素\r\n//             window.URL.revokeObjectURL(href); //释放blob对象\r\n//         })\r\n//\r\n//     }\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\nimport urls from '../../../config/urls.js';\r\n\r\n\r\nclass FileSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            code: null,\r\n            name: '',\r\n            type: null,\r\n            // info: '',\r\n            // image: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n            images: [],\r\n        }\r\n    }\r\n\r\n\r\n    //搜索 获取图片的集合\r\n    searchForImageList = (filename) => {\r\n        console.log(\"######## 搜索 获取图片的集合 #########\");\r\n\r\n        let query = {};\r\n        query.name = this.state.name;\r\n\r\n        console.log(\"查询参数\");\r\n        console.log(query);\r\n\r\n        axios.post(urls.file.listFileByQuery, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(\"################\");\r\n\r\n            // //失败  小于1 失败\r\n            if (response.data.code === 1) {\r\n                this.setState({\r\n                    images: response.data.data\r\n                });\r\n\r\n                console.log(this.state.images);                // this.props.history.push(\"/Success\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                console.log('catch 异常',);\r\n                console.log(error);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForImageList(null);\r\n    }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------> 搜索的参数\");\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                        // required\r\n                        //    value={this.state.name}\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForImageList}>检索文件</button>\r\n                </p>\r\n\r\n\r\n                {this.state.images.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.name}${value.id}`}>\r\n                            <img\r\n                                key={`${value.name}${value.id}`}\r\n                                src={value.url}\r\n                                className='image-node-1'\r\n                                alt=''></img>\r\n                            <p className='front-black'>{value.name}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <h2>完</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileSearch;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    // Modal,\r\n    // Form,\r\n    // Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n}\r\n    from\r\n        'antd';\r\nimport FileDownload from \"react-file-download\";\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\n\r\n//对于 File 的CRUD\r\nclass FileManage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"文件列表\",\r\n            visibleForInsert: false,\r\n            symbol: '',\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.file.listPage, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n                    console.log(dataFromDb);\r\n\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                    console.log(this.state.list);\r\n\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n    };\r\n\r\n    remove(id) {\r\n        axios.get(urls.file.deleteFile + id).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n            });\r\n    }\r\n\r\n\r\n    // download\r\n    download(id) {\r\n        console.log(\"download\");\r\n        console.log(\"id=\" + id);\r\n\r\n        console.log(this.state.symbol);\r\n        console.log(this.state.symbol);\r\n        console.log(this.state.symbol);\r\n        console.log(this.state.symbol);\r\n        let url = urls.file.downloadFileByIdOrCode + id;\r\n        axios.get(url, {responseType: 'blob'})\r\n            .then(response => {\r\n                console.log(\"---------------------------------------\");\r\n                console.log(response.data);\r\n                console.log(response.status);\r\n                console.log(response.statusText);\r\n                console.log(response.headers);\r\n                console.log(response.config);\r\n                console.log(\"---------------------------------------\");\r\n\r\n\r\n                // let fileName = \"temp.jpg\";\r\n                let fileName = response.headers['filename'];\r\n                let contentType = response.headers['content-type'];\r\n                let contentDisposition = response.headers['content-disposition'];\r\n                console.log(\"##############fileName########\");\r\n                console.log(fileName);\r\n                console.log(contentDisposition);\r\n                console.log(contentType);\r\n                console.log(\"######################\");\r\n                console.log(response);\r\n                console.log(response.headers);\r\n                console.log(\"symbol symbol symbol symbol\");\r\n                console.log(response.data.symbol);\r\n\r\n                FileDownload(response.data, fileName);\r\n            }).catch(function (error) {\r\n            //异常\r\n            console.log(error);\r\n            console.log('异常  catch =====',);\r\n        });\r\n    }\r\n\r\n//  错误\r\n//    axios.post('/api',{\r\n//     // 传参\r\n// },\r\n// {\r\n//     responseType:'blob'    // 设置响应数据类型\r\n// })\r\n// .then(res=>{\r\n//     if (res.status == 200) {\r\n//         let url = window.URL.createObjectURL(new Blob([res.data]))\r\n//         let link= document.createElement('a')\r\n//         link.style.display='none'\r\n//         link.href=url\r\n//         link.setAttribute('download', fileName)    // 自定义下载文件名（如exemple.txt）\r\n//         document.body.appendChild(link)\r\n//         link.click()\r\n//     }\r\n// })\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            // {key: 'code', title: 'code', dataIndex: 'code', width: 20, high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'suffix', title: 'suffix', dataIndex: 'suffix'},\r\n            {key: 'version', title: 'version', dataIndex: 'version', high: 20},\r\n            // {key: 'path', title: 'path', dataIndex: 'path', width: 20, high: 20},\r\n            {key: 'state', title: '启用状态', dataIndex: 'state'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '文件大小',\r\n                render: (text, record) => (<span>    {record.length} {record.lengthUnit}</span>)\r\n            },\r\n\r\n            {\r\n                key: 'remove', title: '操作',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.download.bind(this, record.id)}>download-{record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FileManage;\r\n","import React from \"react\";\r\nimport '../../../assets/css/system/file/file.css'\r\n\r\n\r\nimport FileUpload2 from './FileUpload2';\r\n//说明 FileDownload2 是因为名称冲突二取名的， 是用于下载文件的\r\nimport FileDownload2 from './FileDownload2';\r\n//旧版本文件下载 //import FileGet from './FileGet';\r\nimport FileSearch from \"./FileSearch\";\r\nimport FileManage from \"./FileManage\";\r\n\r\nclass File extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //此状态机为display的取值\r\n            display_name: 'none',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n\r\n    //编辑按钮的单击事件，修改状态机display_name的取值\r\n    showFileDownload = () => {\r\n        // this.setState({display_name: 'block',})\r\n        if (this.state.display_name === 'none') {\r\n            this.setState({\r\n                display_name: 'block',\r\n            })\r\n        } else if (this.state.display_name === 'block') {\r\n            this.setState({\r\n                display_name: 'none',\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>\r\n                    <FileDownload2/>\r\n                    <FileUpload2/>\r\n                </span>\r\n\r\n\r\n                {/*文件列表*/}\r\n                <FileManage/>\r\n                <FileSearch/>\r\n\r\n\r\n                <hr/>\r\n                <button onClick={this.showFileDownload}>附加功能开关</button>\r\n                <div style={{\r\n                    background: '#fff',\r\n                    display: this.state.display_name\r\n                }}>\r\n                    {/* 通过状态机display_name获取diaplay取值 */}\r\n                    <FileUpload2/>\r\n                </div>\r\n                <hr/>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default File;\r\n\r\n\r\n// 设计目标：\r\n//1 文件记录数据的列表显示，计划展示属性   1文件全称 2文件版本 3大小 4位置\r\n//2 文件 单个上传 & 单个下载  批量下载是否加入 待定\r\n//3 文件搜索 ， 搜索条件 1名称  2大小过滤 3 类型 5位置（在 develop/server）\r\n//4 单条数据编辑，涉及接口 get update delete\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport urls from \"../../../config/urls\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n} from 'antd';\r\n\r\nclass ShoppingReceipt extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"列表\",\r\n            list: [],\r\n            visibleForInsert: false,\r\n            totalFinalPriceTax: 10000,\r\n\r\n            name: \"\",\r\n            transactionTime: null,//交易时间\r\n            totalFinalPrice: 0,//成交价 四位小数\r\n            state: true,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        console.log(\"获取列表数据----->\");\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.receipt.listPage, {})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n                    console.log(dataFromDb);\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState(\r\n            {\r\n                visibleForInsert: true,\r\n                name: \"\",\r\n            }\r\n        );\r\n\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n\r\n    };\r\n\r\n\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    // 保存 executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存 executeInsertModal\");\r\n        this.saveShoppingReceipt();\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"input的名/值：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            // {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'transactionTime', title: '交易时间', dataIndex: 'transactionTime'},\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '成交价',\r\n                render: (text, record) => (<span>{record.totalFinalPrice}{record.priceUnit}</span>)\r\n            },\r\n\r\n            {key: 'totalDiscount', title: '总折扣', dataIndex: 'totalDiscount', high: 20},\r\n            // {key: 'path', title: 'path', dataIndex: 'path', width: 20, high: 20},\r\n            {key: 'state', title: '启用状态', dataIndex: 'state'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n\r\n            {\r\n                key: 'remove', title: '操作', render: (text, record) => (\r\n                    <span>\r\n                    <Button onClick={this.update}>update {record.id}</Button>\r\n                    <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>)\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n                <Card title={this.state.tableTitle}>\r\n\r\n                    {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                    <Button type=\"primary\" onClick={this.showModal}>新增 </Button>\r\n\r\n                    <Modal\r\n                        title=\"新增\"\r\n                        wrapClassName=\"vertical-center-modal\"\r\n                        visible={this.state.visibleForInsert}\r\n                        onOk={() => this.executeInsertModal(false)}\r\n                        onCancel={() => this.cancelInsertModal(false)}\r\n                    >\r\n\r\n\r\n                        {/* save insert 创建    新增 新建的框框*/}\r\n                        <div>\r\n\r\n                            <div>\r\n                                名称：<input type=\"text\"\r\n                                          name=\"name\"\r\n                                          placeholder=\"name\"\r\n                                          autoFocus\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            />\r\n                            </div>\r\n\r\n                            <div>\r\n                                实付：<input type=\"text\"\r\n                                          id=\"totalFinalPrice\"\r\n                                          name=\"totalFinalPrice\"\r\n                                          placeholder=\"totalFinalPrice\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            /></div>\r\n\r\n                            <div>\r\n                                折扣：<input type=\"text\"\r\n                                          id=\"totalDiscount\"\r\n                                          name=\"totalDiscount\"\r\n                                          placeholder=\"totalDiscount\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            />\r\n                            </div>\r\n\r\n                            <div>\r\n                                状态：<input type=\"text\"\r\n                                          id=\"state\"\r\n                                          name=\"state\"\r\n                                          placeholder=\"state\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            />\r\n                            </div>\r\n\r\n\r\n                            <div>\r\n                                时间：<input type=\"text\"\r\n                                          id=\"transactionTime\"\r\n                                          name=\"transactionTime\"\r\n                                          placeholder=\"transactionTime\"\r\n                                          onChange={e => this.onInputChange(e)}\r\n                            /></div>\r\n\r\n                        </div>\r\n                    </Modal>\r\n\r\n\r\n                    <Table\r\n                        rowKey={record => record.id}\r\n                        columns={columns}\r\n                        dataSource={this.state.list}\r\n                        pageSize={10}\r\n                        bordered>\r\n                    </Table>\r\n                </Card>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = urls.receipt.delete + id;\r\n        console.log(url);\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n    }\r\n\r\n    // update one row\r\n    update(id) {\r\n        console.log(\"update -->\" + id);\r\n        axios.post(urls.receipt.update, {\r\n            //更新\r\n\r\n        }).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveShoppingReceipt = (e) => {\r\n        axios.post(urls.receipt.save,\r\n            {\r\n                name: this.state.name,\r\n                // transactionTime: this.state.transactionTime,\r\n                totalFinalPrice: this.state.totalFinalPrice * 10000,\r\n                //null / 0  其他为true\r\n                state: this.state.state === null || this.state.state === 0 ? false : true\r\n\r\n            }\r\n        ).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    nickname: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        })\r\n\r\n\r\n            //异常\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                alert(response);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default ShoppingReceipt;\r\n","import Index from \"../components/basic/Index\";\r\nimport CssTest from \"../components/test/CssTest\";\r\nimport ToolTest from \"../components/test/ToolTest\";\r\nimport QRTest from \"../components/test/QRTest\";\r\nimport Role from \"../components/system/rbac/role/Role\";\r\nimport User from \"../components/system/rbac/user/User\";\r\nimport Resource from \"../components/system/rbac/resource/Resource\";\r\nimport UserInsert from \"../components/system/rbac/user/UserInsert\";\r\nimport RoleInsert from \"../components/system/rbac/role/RoleInsert\";\r\nimport Food from \"../components/app/food/Food\";\r\nimport Blog from \"../components/app/blog/Blog\";\r\nimport ManageBlog from \"../components/app/blog/ManageBlog\";\r\nimport BlogDetail from \"../components/app/blog/BlogDetail\";\r\nimport BlogMd from \"../components/app/blog/BlogMd\";\r\nimport FoodDetails from \"../components/app/food/FoodDetails\";\r\nimport Menu from \"../components/system/menu/Menu\";\r\nimport Login from \"../components/basic/Login\";\r\n\r\nimport File from \"../components/system/file/File\";\r\nimport FileManage from \"../components/system/file/FileManage\";\r\nimport FileSearch from \"../components/system/file/FileSearch\";\r\n\r\n\r\n//购物小票\r\nimport ShoppingReceipt from '../components/app/shop/ShoppingReceipt'\r\n\r\nconst routers = [\r\n\r\n    // test\r\n    {\r\n        path: \"/css-test\",\r\n        component: CssTest,\r\n        exact: true\r\n    }, {\r\n        path: \"/tool-test\",\r\n        component: ToolTest,\r\n        exact: true\r\n    }, {\r\n        path: \"/qr-test\",\r\n        component: QRTest,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/role\",\r\n        component: Role,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/roleInsert/:aid\",\r\n        component: RoleInsert,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/userInsert\",\r\n        component: UserInsert,\r\n        exact: true\r\n    },\r\n    //app 模块的\r\n    {\r\n        path: \"/blog\",\r\n        component: Blog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/sr\",\r\n        component: ShoppingReceipt,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/manage-blog\",\r\n        component: ManageBlog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/blog-detail\",\r\n        component: BlogDetail,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/bmd\",\r\n        component: BlogMd,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/food\",\r\n        component: Food,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/FoodDetails\",\r\n        component: FoodDetails,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file\",\r\n        component: File,\r\n        exact: true\r\n        //,\r\n        // routes: [\r\n        //     {\r\n        //         path: \"/file-add\",\r\n        //         component: Login,\r\n        //         exact: true\r\n        //     }, {\r\n        //         path: \"/file-update\",\r\n        //         component: Login,\r\n        //         exact: true\r\n        //     },\r\n\r\n        // ]\r\n    },\r\n    {\r\n        path: \"/file-search\",\r\n        component: FileSearch,\r\n        exact: true\r\n    },\r\n\r\n    //system 模块的\r\n\r\n    {\r\n        path: \"/index\",\r\n        component: Index,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/user\",\r\n        component: User,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/menu\",\r\n        component: Menu,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/resource\",\r\n        component: Resource,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file1\",\r\n        component: FileManage,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: Login,\r\n        exact: true\r\n    },\r\n];\r\n\r\nexport default routers;\r\n\r\n//                        reder={props=>(\r\n//                             <route.component{... props} routers={route.children}>\r\n//                         )\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// import Role from '../system/rbac/Role';\r\n// import UserList from '../system/user/UserList';\r\n// import User from '../system/rbac/user/User';\r\n// import UserInsert from '../system/user/UserInsert';\r\n// import RoleInsert from '../system/rbac/RoleInsert';\r\n// import File from '../system/file/File';\r\n// import Login from '../basic/Login';\r\n// import Food from '../app/food/Food';\r\n// import Index from '../basic/Index';\r\n// import FoodDetails from '../app/food/FoodDetails';\r\n// import FileSearch from '../system/file/FileSearch';\r\n// import Menu from '../system/menu/Menu';\r\n\r\n//路由与 api接口地址抽取\r\nimport routers from '../../config/router.js';\r\nimport apis from '../../config/urls.js';\r\n\r\n//css\r\nimport '../../assets/css/layout/home.css'\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    //初始化函数触发\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.getMenusFun();\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    // 初始化的时候去获取菜单数据\r\n    getMenusFun = (e) => {\r\n        var systemId = 4;\r\n        var level = 0;//0 全部\r\n        //localhost:8001/zero/menus/2/levels/0\r\n        // var url = \"http://arc.com/zero/menus/\" + menuId + \"/levels/\" + level;\r\n\r\n        let url = apis.listMenusBySystemIdAndLevel;\r\n        url = url.replace(\"SYSTEM_ID\", systemId);\r\n        url = url.replace(\"LEVEL\", level);\r\n        console.log(url);\r\n\r\n        axios.get(url).then(response => {\r\n            if (response != null) {\r\n                //成功，获取到后台返回的数据，可以做缓存\r\n                // this.props.history.push(\"/Success\");\r\n                this.setState({\r\n                    list: response.data.data\r\n                })\r\n            }\r\n\r\n\r\n            //失败  小于1 失败\r\n            if (null === response && response.data.code < 1) {\r\n                alert(response.data.msg);\r\n                console.log(\"FAIL\");\r\n                this.props.history.push(\"/index\");\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常 被 catch',);\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Router>\r\n                    <div className=\"title\">\r\n                        {\r\n                            this.state.list.map((value, key) => {\r\n                                return (\r\n                                    <Link key={key} to={value.url}>{value.name}</Link>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        routers.map((route, key) => {\r\n                            if (route.exact) {\r\n                                return <Route exact\r\n                                              key={route.path}\r\n                                              path={route.path}\r\n                                              render={props => (\r\n                                                  <route.component{...props} routes={route.routes}/>\r\n                                              )}/>;\r\n                            } else {\r\n                                return <Route\r\n                                    key={route.path}\r\n                                    path={route.path}\r\n                                    render={props => (\r\n                                        <route.component{...props} routes={route.routes}/>\r\n                                    )}/>;\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                    {/*<Route exact path=\"/user\" component={User}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/roleInsert/:aid\" component={RoleInsert}/>*/}\r\n                    {/*<Route exact path=\"/userInsert\" component={UserInsert}/>*/}\r\n                    {/*<Route exact path=\"/food\" component={Food}/>*/}\r\n                    {/*<Route exact path=\"/foodDetails\" component={FoodDetails}/>*/}\r\n                    {/*<Route exact path=\"/file\" component={File}/>*/}\r\n                    {/*<Route exact path=\"/login\" component={Login}/>*/}\r\n                    {/*<Route exact path=\"/index\" component={Index}/>*/}\r\n                    {/*<Route exact path=\"/user-list\" component={UserList}/>*/}\r\n                    {/*<Route exact path=\"/file-search\" component={FileSearch}/>*/}\r\n                    {/*<Route exact path=\"/menu\" component={Menu}/>*/}\r\n\r\n\r\n                </Router>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// 原始的\r\n//              {\r\n//                         routers.map((route, key) => {\r\n//                             if (route.exact) {\r\n//                                 return <Route exact path={route.path} component={route.component} key={route.path}/>\r\n//                             }\r\n//                         })\r\n//\r\n//                     }\r\n","import React from 'react';\nimport Home from './components/layout/Home';\n// import Content from './components/layout/Content';\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n            <Home/>\n            {/*<Route exact path='/roster' component={Home}/>*/}\n            {/*<Content/>*/}\n\n        </div>\n    )\n        ;\n}\n\nexport default App;\n\n// import logo from './assets/image/logo.svg';\n// import './assets/App.css';\n// import './assets/index.css';\n// import Main from './components/layout/Main';\n//https://www.jianshu.com/p/5e8297858ea8\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}