{"version":3,"sources":["components/basic/Index.js","components/test/CssTest.js","components/system/rbac/Role.js","components/system/rbac/user/UserInsert.js","config/urls.js","components/system/rbac/user/User.js","components/system/rbac/RoleInsert.js","components/app/food/Food.js","components/app/blog/Blog.js","components/app/blog/ManageBlog.js","components/app/blog/BlogDetail.js","components/app/blog/BlogMd.js","components/app/food/FoodDetails.js","components/system/file/FileGet.jsx","components/system/file/FileSearch.jsx","components/system/file/FileUpload.jsx","components/system/file/File.jsx","components/system/file/FileManage.jsx","components/basic/Login.js","components/system/menu/Menu.jsx","config/router.js","components/app/shop/ShoppingReceiptInsert.js","components/app/shop/ShoppingReceipt.js","components/layout/Home.js","App.js","serviceWorker.js","index.js"],"names":["Index","props","state","React","Component","CssTest","getCssTests","bgColor","list","aid","avatar","nickname","textStyles","color","backgroundColor","this","map","value","key","className","style","width","height","fontSize","textAlign","href","Role","getUsers","roles","title","to","UserInsert","saveUser","console","log","id","visible","visibleForInsert","setState","wrapClassName","onOk","executeInsertModal","onCancel","cancelInsertModal","layout","onSubmit","updateUser","Item","placeholder","onChange","event","handleMaxBackUp","type","htmlType","prefixUri","host","urls","listMenusBySystemIdAndLevel","file","uploadFile","listFileByQuery","getFileByCode","save","delete","listPage","blog","saveBlog","updateBlog","getBlogArticleByUserId","listBlogByAuthorId","menu","listMenu","saveMenu","user","index","listUser","listPageUser","receipt","User","refreshTable","axios","post","then","response","data","code","msg","alert","fromDb","users","catch","error","showModal","flag","e","tableTitle","test","inputValue","target","inputName","name","columns","dataIndex","render","text","record","onClick","remove","bind","onInputChange","rowKey","dataSource","pageSize","bordered","url","get","RoleInsert","match","params","Food","getFoods","Blog","getTimelineListFun","apis","status","headers","config","table","images","Date","authorId","tagId","sortId","description","content","publishDate","createDate","updateDate","timeLine","ManageBlog","getManageBlog","category","version","sortWeight","modal2Visible","add","setModal2Visible","BlogDetail","mdEditor","mdParser","getArticle","article","markdown","postBody","body","MarkdownIt","html","linkify","typographer","highlight","str","lang","use","emoji","subscript","superscript","footnote","deflist","abbreviation","insert","mark","renderHTML","t1","t2","secondsElapsed","Promise","resolve","setTimeout","ref","node","view","md","imageUrl","BlogMd","handleEditorChange","updateArticleFun","uri","Object","interval","setInterval","tick","clearInterval","ret","callback","reader","FileReader","onImageUpload","handleImageUpload","FoodDetails","query","parse","location","search","FileGet","getFile","trim","responseType","FileDownload","searchForFile","handleGetInputValue","keyCode","onKeyUp","FileSearch","searchForImageList","filename","nativeEvent","autoFocus","src","alt","FileUpload","fileList","uid","routes","action","authorization","info","message","success","fileName","File","showFileDownload","display_name","background","display","FileManage","dataFromDb","high","size","sizeUnit","Login","handleUsername","username","handlePwd","pwd","keyUpFun","loginFun","history","push","pwdConfirm","sex","htmlFor","required","Menu","searchForMenuList","request","parentId","systemId","sort","level","icon","note","handleInputOnChange","nameEnglish","raw","routers","path","component","exact","saveShoppingReceipt","totalFinalPrice","priceUnit","Home","getMenusFun","replace","route","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28ebc573.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>欢迎主页|WELCOME</h1>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\n// import user from '../../../../assets/css/system/rbac/user.css'\r\n\r\nclass CssTest extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bgColor:'blue',\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }, {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n                , {\r\n                    aid: '1',\r\n                    avatar: 'user1',\r\n                    nickname: 'user1',\r\n                    state: 'user1',\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getCssTests = () => {\r\n\r\n    };\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        const textStyles = {\r\n            color: 'black',\r\n            backgroundColor: this.state.bgColor\r\n        };\r\n        return (<div>\r\n            {/*<div  style=\"background-color:red;\">style</div>*/}\r\n            <h1>CssTest</h1>\r\n\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        {/*<Link to={`/userInsert?aid=${value.aid}`}>{value.nickname}</Link>*/}\r\n                        <p  className='user-item'>{value.aid}|{value.nickname}</p>\r\n                        {/*<p  style=\"background-color:red;\">{value.aid}|{value.nickname}</p>*/}\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n            <br/>\r\n            <br/>\r\n            <hr/>\r\n            1. 行内样式\r\n            <div\r\n                style={{\r\n                    width:'200px',\r\n                    height:'80px',\r\n                    backgroundColor:'yellow',\r\n                    fontSize:'24px',\r\n                    textAlign:'center'\r\n                }}>\r\n            <a href=\"https://github.com/lamymay/zero\">后端源码 github</a>\r\n            <a href=\"https://github.com/lamymay/react4\">前端源码 github</a>\r\n            </div>\r\n\r\n            2. 声明样式\r\n            <p style={textStyles}>inline style</p>\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default CssTest;\r\n\r\n//https://segmentfault.com/a/1190000016952542?utm_source=tag-newest\r\n//测试引入css的方式\r\n// 1、行内引入， 特点：即在行内直接写，未能测试通过，报错，切支持度按网上说法也不是很全要驼峰编写\r\n// 2、页内引入，特点：写const变量，这样数据与js会在一起，维护调试不是很方便\r\n//3、外部引入，推荐，特点：与原生几乎一样，\r\n// 第三种的用法：1js头部 “import user from '../../../../assets/css/system/rbac/user.css'” 2使用 \"<p  className='user-item'>{value.aid}|{value.nickname}</p>\"\r\n","import React from \"react\";\r\n// import RoleInsert from './RoleInsert'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Role extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>GET 角色-动态传值测试</h2>\r\n\r\n                <ul>\r\n                    {this.state.roles.map((value, key) => {\r\n                        return <li key={key}>\r\n                            <Link to={`/roleInsert/${value.aid}`}>{value.title}</Link>\r\n                        </li>\r\n\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nimport {Button, Card, Form, Input, Modal} from \"antd\";\r\n\r\n// 新增用户\r\nclass UserInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            id: -1,\r\n            visible: false\r\n            //\r\n            // roles: [\r\n            //     {\r\n            //         aid: '1',\r\n            //         title: '标题1'\r\n            //     }, {\r\n            //         aid: '2',\r\n            //         title: '标题2'\r\n            //     }\r\n            //     , {\r\n            //         aid: '3',\r\n            //         title: '标题3'\r\n            //     }\r\n            //     , {\r\n            //         aid: '4',\r\n            //         title: '标题4'\r\n            //     }\r\n            // ]\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"ch ch ch\");\r\n\r\n        console.log(this.props.visibleForInsert);\r\n        // console.log(this.state.visible);\r\n\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        // let query = url.parse(this.props.location.search, true).query;\r\n        // console.log(query);\r\n        // console.log(this.state.id);\r\n    }\r\n\r\n\r\n    saveUser = () => {\r\n        console.log(\"save!!!!!!\");\r\n    };\r\n\r\n    //\r\n    // getInitialState() {\r\n    //     return {\r\n    //         modal2Visible: false,\r\n    //     };\r\n    // }\r\n\r\n    cancelInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n\r\n            <Modal\r\n                title=\"垂直居中的对话框\"\r\n                wrapClassName=\"vertical-center-modal\"\r\n                visible={this.props.visibleForInsert}\r\n                onOk={() => this.executeInsertModal(false)}\r\n                onCancel={() => this.cancelInsertModal(false)}\r\n            >\r\n\r\n\r\n                <p>对话框的内容= {this.props.visibleForInsert}</p>\r\n                <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                    <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                    </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                    <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInsert;\r\n","// const host = \"http://127.0.0.1:8001\";\r\nconst host = \"http://122.51.110.127:80\";\r\nconst prefixUri = host + \"/zero\";\r\n\r\n// 说明 通常来说\r\n// GET 方法的uri，变量名称的关键字一般有：get\r\n// POST 方法的uri，变量名称的关键字一般有：listXXXByyy\r\n\r\nconst urls = {\r\n    listMenusBySystemIdAndLevel: prefixUri + \"/menus/SYSTEM_ID/levels/LEVEL\",\r\n    file: {\r\n        uploadFile: prefixUri + \"/file/upload\",\r\n        listFileByQuery: prefixUri + \"/sys/file/list\",\r\n        getFileByCode: prefixUri + \"/file/\",\r\n\r\n        //\r\n        save: prefixUri + \"/sys/file/save\",\r\n        delete: prefixUri + \"/sys/file/delete/id/\",\r\n        listPage: prefixUri + \"/sys/file/page\",\r\n    },\r\n    blog: {\r\n        saveBlog: prefixUri + \"/v1/blogs/save\",\r\n        updateBlog: prefixUri + \"/v1/blogs/update\",\r\n        getBlogArticleByUserId: prefixUri + \"/v1/blogs/\",\r\n        listBlogByAuthorId: prefixUri + \"/v1/blogs/timeline/\",\r\n    },\r\n    menu: {\r\n        listMenu: prefixUri + \"/menus/list\",\r\n        saveMenu: prefixUri + \"/menus/save\",\r\n    },\r\n    user: {\r\n        index: \"/user\",\r\n        listUser: prefixUri + \"/sys/users/list\",\r\n        saveUser: prefixUri + \"/sys/users/save\",\r\n        delete: prefixUri + \"/sys/users/delete/\",\r\n        listPageUser: prefixUri + \"/sys/users/page\",\r\n    },\r\n    receipt: {\r\n        index: \"/receipt\",\r\n        // list  : prefixUri + \"/receipt/list\",\r\n        // save  : prefixUri + \"/receipt/save\",\r\n        listPage: prefixUri + \"/shopping/receipt/page\",\r\n        delete: prefixUri + \"/shopping/receipt/delete/\",\r\n    }\r\n};\r\n\r\n\r\nexport default urls;\r\n\r\n// const uriListFile = \"listFile\";\r\n// const profile = \"local\";\r\n// const profile = \"prod_160\";\r\n// function getUriPrefix(key) {\r\n//     if (key === \"local\") {\r\n//         //local\r\n//         return \"http://127.0.0.1:8001\";\r\n//     } else if (key === \"prod_160\") {\r\n//         //160\r\n//         return \"http://122.51.110.127:80\";\r\n//     }\r\n// }\r\n//\r\n// function getUri(key) {\r\n//     let host = getUriPrefix(profile);\r\n//\r\n//     if (key === uriListFile) {\r\n//         return host + \"/zero/sys/file/list\";\r\n//     } else if (key === \"saveMenu\") {\r\n//         return host + \"/zero/111111/sys/file/list\";\r\n//     }\r\n// }\r\n// function getUri(key) {\r\n//\r\n//     //local\r\n//     let protocol = \"http://\";\r\n//     let host = \"127.0.0.1\";\r\n//     let port = 8001;\r\n//     // let listMenu = protocol+host+':'+port+'/zero/menus/list';\r\n//     // let saveMenu = protocol+host+':'+port+'/zero/menus/save';\r\n//\r\n//     let httpLocal = new Object();\r\n//     httpLocal.listMenu = protocol + host + ':' + port + '/zero/menus/list';\r\n//     httpLocal.saveMenu = protocol + host + ':' + port + '/zero/menus/save';\r\n//\r\n//\r\n//     //  160\r\n//     let protocol_160 = \"http://\";\r\n//     let host_160 = \"122.51.110.127\";\r\n//     let port_160 = 80;\r\n//\r\n//     let http160 = new Object();\r\n//     http160.listMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/list';\r\n//     http160.saveMenu = protocol_160 + host_160 + ':' + port_160 + '/zero/menus/save';\r\n//\r\n//\r\n//     //数据封装到map\r\n//     let map = new Map();\r\n//     let local = \"local\";\r\n//     let prod_160 = \"prod_160\";\r\n//     map.set(local, httpLocal);\r\n//     map.set(prod_160, http160);\r\n//     console.log(\"------------------------- get ------------\");\r\n//     console.log(map);\r\n//     console.log(map.size);\r\n//     console.log(map.keys());\r\n//     console.log(map.entries());\r\n//     //从map中获取value  每次只要修改这里即可\r\n//     // let uris = map.get(local);\r\n//     let uris = map.get(prod_160);\r\n//     if (key === \"listMenu\") {\r\n//         return uris.listMenu;\r\n//     } else if (key === \"saveMenu\") {\r\n//         return uris.saveMenu;\r\n//     }\r\n// }\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\n\r\nimport UserInsert from \"./UserInsert\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n} from 'antd';\r\nimport urls from \"../../../../config/urls\";\r\n\r\nclass User extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"用户列表\",\r\n            users: [],\r\n            visibleForInsert: false,\r\n            test: \"453455454\"\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.refreshTable();\r\n    }\r\n\r\n    refreshTable = () => {\r\n        axios.post(urls.user.listPageUser, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n                    console.log(\"refreshTable\");\r\n                    console.log(response.data.msg);\r\n                    console.log(response.data.msg);\r\n                    console.log(response.data.msg);\r\n                }\r\n\r\n\r\n                //失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n\r\n    };\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveUser = (e) => {\r\n        axios.post(urls.user.saveUser, {\r\n            nickname: this.state.nickname,\r\n            state: this.state.state == null ? 0 : this.state.state\r\n\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    nickname: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        })\r\n\r\n\r\n        //异常\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                alert(response);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveUser();\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            // {\r\n            //     key: 'id',\r\n            //     title: '测试合并',\r\n            //     render: (text, record) => (\r\n            //         <span>\r\n            //            {record.nickname}--\r\n            //             {record.avatar}>\r\n            //             </span>\r\n            //     )\r\n            // },\r\n            {\r\n                key: 'nickname',\r\n                title: '昵称',\r\n                dataIndex: 'nickname',\r\n                width: 150\r\n            },\r\n            // {\r\n            //     key: 'avatar',\r\n            //     title: '标识',\r\n            //     dataIndex: 'avatar'\r\n            // },\r\n            {\r\n                key: 'state',\r\n                title: '启用状态',\r\n                dataIndex: 'state'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                        <Button onClick={this.remove.bind(this, record.id)}>删除-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                <Button type=\"primary\" onClick={this.showModal}>新增人员 </Button>\r\n                {/*<Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>*/}\r\n                {/*<Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n\r\n                {/*<UserInsert visibleForInsert={this.state.visibleForInsert} user={this}/>*/}\r\n\r\n                <Modal\r\n                    title=\"新增用户\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.visibleForInsert}\r\n                    onOk={() => this.executeInsertModal(false)}\r\n                    onCancel={() => this.cancelInsertModal(false)}\r\n                >\r\n\r\n                    {/* save insert 创建    新增 新建的框框*/}\r\n                    <div>\r\n\r\n\r\n                        <div>\r\n                            昵称：<input type=\"text\"\r\n                                      name=\"nickname\"\r\n                                      name=\"nickname\"\r\n                                      placeholder=\"nickname\"\r\n                                      autoFocus\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        <div>\r\n                            状态：<input type=\"text\"\r\n                                      id=\"state\"\r\n                                      name=\"state\"\r\n                                      placeholder=\"state\"\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        {/*<div>*/}\r\n                        {/*    avatar：<input type=\"text\"*/}\r\n                        {/*              id=\"avatar\"*/}\r\n                        {/*              name=\"avatar\"*/}\r\n                        {/*              placeholder=\"avatar\"*/}\r\n                        {/*              onChange={e => this.onInputChange(e)}*/}\r\n                        {/*/>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n\r\n\r\n                </Modal>\r\n\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = urls.user.delete + id;\r\n        console.log(url);\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\n\r\nclass RoleInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getRoles();\r\n        //赋值给 roles\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //生命周期函数中获取 GET传值\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n        console.log(this.props.match.params.aid);\r\n\r\n        console.log(\"*******************\");\r\n        console.log(this.props);\r\n        console.log(\"*******************\");\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1> 新增角色</h1>\r\n            <h2> 新增角色</h2>\r\n            <h3> 新增角色</h3>\r\n            <h4> 新增角色</h4>\r\n            <h5> 新增角色</h5>\r\n            <h6> 新增角色</h6>\r\n\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default RoleInsert;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Food extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [\r\n                {\r\n                    aid: '1',\r\n                    title: 'food1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: 'food2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: 'food3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: 'food4'\r\n                }\r\n\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n\r\n    getFoods = () => {\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>Food</h1>\r\n            <ul>\r\n                {this.state.list.map((value, key) => {\r\n                    return <li key={key}>\r\n                        <Link to={`/foodDetails?aid=${value.aid}`}>{value.title}</Link>\r\n                    </li>\r\n\r\n                })}\r\n            </ul>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Food;\r\n","import React from \"react\";\r\nimport {Timeline} from 'antd';\r\nimport axios from 'axios';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass Blog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: 13,\r\n            authorId: '', // 作者，所属用户ID[多作者请在描述中填充第二作者信息]\r\n            tagId: '', // 栏目ID\r\n            sortId: '',// 所属分类\r\n            status: '',// 文章的模式:0为私有，1为公开，2为仅好友查看\r\n            title: '',// 文章名称-64\r\n            description: '',// 文章描述-128\r\n            content: '',// 文章内容[text]\r\n            publishDate: '',// 发布时间\r\n            createDate: '',// 创建时间(创建未发表)\r\n            updateDate: '',// 更新时间\r\n\r\n            //时间线 渲染列表\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n        this.getTimelineListFun();\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n\r\n    // 获取博客数据  图片 + 文字，这里应该获取的是文字数据 阅读数等\r\n    getTimelineListFun = (e) => {\r\n        var uId = 1;\r\n        let url = apis.blog.listBlogByAuthorId + uId;\r\n        console.log(\"--- url ---\");\r\n        console.log(url);\r\n        console.log(url);\r\n        console.log(url);\r\n\r\n\r\n        axios.get(url).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n    onClick = (e) => {\r\n        console.log(new Date());\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/*<Timeline>*/}\r\n                {/*    <Timeline.Item color=\"green\">AAA</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">BB</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"green\">C</Timeline.Item>*/}\r\n                {/*    <Timeline.Item color=\"red\">Create</Timeline.Item>*/}\r\n                {/*</Timeline>*/}\r\n\r\n                <Timeline className='list'>\r\n                    {\r\n                        this.state.list.map((value, key) => {\r\n                            return (\r\n                                <Timeline.Item key={key}\r\n                                               // onClick={this.onClick()}\r\n                                >\r\n                                    <Link to={'/blog-detail'} type=\"span\">{value.timeLine}     </Link>\r\n                                </Timeline.Item>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </Timeline>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\nclass ManageBlog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            id: null,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: null,\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    getInitialState() {\r\n        return {\r\n            modal2Visible: false,\r\n        };\r\n    }\r\n\r\n    setModal2Visible(modal2Visible) {\r\n        this.setState({modal2Visible});\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.getManageBlog();\r\n\r\n    }\r\n\r\n    // hasErrors(fieldsError) {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    getManageBlog = () => {\r\n        var port = 80;\r\n        var url = \"http://127.0.0.1:\" + port + \"/zero/blogs/page\";\r\n        console.log(\"######################################\");\r\n        console.log(url);\r\n        console.log(\"######################################\");\r\n        let user = {};\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败\r\n                if (null == response.data.data) {\r\n                    alert(response.data.msg);\r\n                }\r\n                //登录成功，获取到后台返回的数据，可以做缓存\r\n                var fromDb = response.data.data;\r\n                console.log(fromDb);\r\n                //赋值\r\n                this.setState({users: fromDb});\r\n                console.log(this.state.users);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //更新用户\r\n    updateUser = (e) => {\r\n        console.log(\"uuuuuuuuuuuu\");\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '测试合并',\r\n                render: (text, record) => (\r\n                    <span>\r\n                       {record.id}--\r\n                        {record.version}>\r\n                        </span>\r\n                )\r\n            },\r\n            {\r\n                key: 'authorId',\r\n                title: '作者id',\r\n                dataIndex: 'authorId',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'title',\r\n                title: 'title',\r\n                dataIndex: 'title',\r\n                width: 150\r\n            }, {\r\n                key: 'description',\r\n                title: 'description',\r\n                dataIndex: 'description',\r\n                width: 150\r\n            }, {\r\n                key: 'content',\r\n                title: 'content',\r\n                dataIndex: 'content',\r\n                width: 150\r\n            }, {\r\n                key: 'version',\r\n                title: 'version',\r\n                dataIndex: 'version',\r\n                width: 150\r\n            }, {\r\n                key: 'sortWeight',\r\n                title: 'sortWeight',\r\n                dataIndex: 'sortWeight',\r\n                width: 150\r\n            },\r\n            {\r\n                key: 'tagId',\r\n                title: '标签',\r\n                dataIndex: 'tagId'\r\n            }, {\r\n                key: 'category',\r\n                title: '分类',\r\n                dataIndex: 'category'\r\n            },\r\n            {\r\n                key: 'status',\r\n                title: '状态',\r\n                dataIndex: 'status'\r\n            },\r\n            {\r\n                key: 'createDate',\r\n                title: '创建时间',\r\n                dataIndex: 'createDate'\r\n            },\r\n            {\r\n                key: 'updateDate',\r\n                title: '更新时间',\r\n                dataIndex: 'updateDate'\r\n            },\r\n            {\r\n                key: 'add-remove',\r\n                title: 'add/remove',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        <Button onClick={this.add}>add {record.id}</Button>\r\n                        <Button onClick={this.remove.bind(this)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={\"基础表格\"}>\r\n                {/*    <Button type=\"primary\" onClick={this.updateUser}>测试 primary与后台交互</Button>\r\n                <Button type=\"dashed\" onClick={this.updateUser}>测试 dashed与后台交互</Button>\r\n                <Button type=\"danger\" onClick={this.updateUser}>测试 danger与后台交互</Button>*/}\r\n\r\n                <Button type=\"dashed\" onClick={() => this.setModal2Visible(true)}>显示垂直居中的对话框</Button>\r\n\r\n                <Modal\r\n                    title=\"垂直居中的对话框\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.modal2Visible}\r\n                    // onOk={() => this.setModal2Visible(false)}\r\n                    //  onCancel={() => this.setModal2Visible(false)}\r\n                >\r\n\r\n                    <p>对话框的内容</p>\r\n                    <Form layout=\"inline\" onSubmit={this.updateUser}>\r\n\r\n                        <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                        </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                        <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                        <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                    </Form>\r\n\r\n\r\n                </Modal>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                {/*<Table  rowKey={record=>record.id} columns={columns} dataSource={this.state.users} bordered>*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.users}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>)\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ManageBlog;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\nclass BlogDetail extends React.Component {\r\n\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            //  const MOCK_DATA = \"Hello.\\n\\n * This is markdown.\\n * It is fun\\n * Love it or leave it.\";\r\n            markdown: '# This is a H1  \\n## This is a H2  \\n###### This is a H6',\r\n            // #测试一级标题 ##副标题\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    componentDidMount() {\r\n        console.log(\"----------------------------\");\r\n        console.log(\"componentDidMount\");\r\n//todo 组件间传值\r\n        let id = 13;\r\n        this.getArticle(13);\r\n\r\n        console.log(\"----------------------------\");\r\n    }\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    markdown: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // markdown: article.content\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n    /////////////\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                BlogDetail\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    value={this.state.markdown}\r\n                    // style={{height: '400px'}}\r\n                    renderHTML={this.renderHTML}\r\n\r\n                    config={{\r\n                        view: {\r\n                            menu: false,\r\n                            md: false,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    // onChange={this.handleEditorChange}\r\n                    // onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default BlogDetail;\r\n","import React from \"react\";\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport MarkdownIt from 'markdown-it'\r\nimport emoji from 'markdown-it-emoji'\r\nimport subscript from 'markdown-it-sub'\r\nimport superscript from 'markdown-it-sup'\r\nimport footnote from 'markdown-it-footnote'\r\nimport deflist from 'markdown-it-deflist'\r\nimport abbreviation from 'markdown-it-abbr'\r\nimport insert from 'markdown-it-ins'\r\nimport mark from 'markdown-it-mark'\r\n// import tasklists from 'markdown-it-task-lists'\r\n\r\n//网络请求\r\nimport axios from 'axios';\r\nimport apis from '../../../config/urls.js';\r\n\r\n// import hljs from 'highlight.js'\r\n// import 'highlight.js/styles/atom-one-light.css'\r\n// import './index.less';\r\n// import 'highlight.js/styles/github.css'\r\n\r\n//blog 的详情\r\n//两种写法 导出一个类\r\n//export default class BlogMd extends React.Component {\r\nclass BlogMd extends React.Component {\r\n\r\n    mdEditor = null;\r\n    mdParser = null;\r\n\r\n    //构造器 需要实例化 并初始化\r\n    constructor(props) {\r\n        super(props);\r\n        // initial a parser\r\n        this.mdParser = new MarkdownIt({\r\n            html: true,\r\n            linkify: true,\r\n            typographer: true,\r\n            highlight: function (str, lang) {\r\n                // if (lang && hljs.getLanguage(lang)) {\r\n                //     try {\r\n                //         return hljs.highlight(lang, str).value\r\n                //     } catch (__) {}\r\n                // }\r\n                return '' // use external default escaping\r\n            }\r\n        })\r\n            .use(emoji)\r\n            .use(subscript)\r\n            .use(superscript)\r\n            .use(footnote)\r\n            .use(deflist)\r\n            .use(abbreviation)\r\n            .use(insert)\r\n            .use(mark);\r\n        // .use(tasklists, {enabled: this.taskLists});\r\n        this.renderHTML = this.renderHTML.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            t1: null,\r\n            t2: null,\r\n            secondsElapsed: 0,\r\n            authorId: 1,\r\n            tagId: 0,\r\n            category: 0,\r\n            status: 2,\r\n            title: \"测试 title\",\r\n            description: \"测试description\",\r\n            content: \"测试 content content content content\",\r\n            version: 1,\r\n            sortWeight: 1\r\n        }\r\n    }\r\n\r\n\r\n    /////////////\r\n    //输入文本后 异步渲染Markdown\r\n    renderHTML(text) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(this.mdParser.render(text))\r\n            }, 200)\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        // this.props.form.validateFields();\r\n        console.log(\"----------- md -----------------\");\r\n        let id = 13;\r\n        this.getArticle(13);\r\n        //定时器\r\n        //todo 定时器 触发\r\n        this.interval = setInterval(() => this.tick(), 10000);\r\n\r\n\r\n    }\r\n\r\n    tick() {\r\n        //循环更新\r\n        this.updateArticleFun();\r\n\r\n        // this.setState((prevState) => ({\r\n        //     secondsElapsed: prevState.secondsElapsed + 1\r\n        // }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //清除\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    getArticle = (id) => {\r\n        let url = apis.blog.getBlogArticleByUserId + id;\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功msg-->\" + response.data.msg);\r\n                let article = response.data.data;\r\n                //console.log(article);\r\n                // 重新渲染\r\n                this.setState({\r\n                    id: article.id,\r\n                    content: article.content\r\n                });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    //编辑器有变化的话执行 更新文章\r\n    handleEditorChange = ({html, text}) => {\r\n        // console.log(\"html 是md 输入框中文本转换为html的文本---text 是md 输入框中的文本\");\r\n        //console.log(html);\r\n        //console.log(text);\r\n\r\n        //编辑\r\n        if (this.state.id != null) {\r\n            console.log(this.state.id);\r\n            //文章正文\r\n            this.setState({\r\n                content: text\r\n            });\r\n            //编辑文章 更新即可\r\n            this.updateArticleFun();\r\n        } else {\r\n            //todo 新增文章\r\n\r\n        }\r\n    };\r\n\r\n    updateArticleFun = () => {\r\n        let uri = apis.blog.updateBlog;\r\n        let body = new Object();\r\n        body.id = this.state.id;\r\n        body.content = this.state.content;\r\n        this.postBody(uri, body);\r\n    };\r\n\r\n    //\r\n    postBody = (url, body) => {\r\n        console.log(url);\r\n        console.log(body);\r\n\r\n        axios.post(url, body).then(response => {\r\n            //访问后台接口成功\r\n            if (null != response && response.data.code === 1) {\r\n                console.log(\" 成功-->\" + response.data.msg);\r\n                let data = response.data.data;\r\n                //console.log(article);\r\n                console.log(\"1111111111111\");\r\n                console.log(data);\r\n                // this.setState({\r\n                // id: article.id,\r\n                // });\r\n            } else {\r\n                //访问接口失败\r\n                console.log(\"访问接口失败\");\r\n                // this.props.history.push(\"/TestMdEditor\");\r\n                //this.props.history.push(\"/\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //访问接口异常\r\n                console.log(error);\r\n                console.log('axios catch 异常=====',);\r\n                // this.props.history.push(\"/\");\r\n            })\r\n        ;\r\n        return true;\r\n    }\r\n\r\n\r\n    // handleGetMdValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getMdValue())\r\n    // }\r\n\r\n    // handleGetHtmlValue = () => {\r\n    //     this.mdEditor && alert(this.mdEditor.getHtmlValue())\r\n    // }\r\n\r\n\r\n    //创建文章\r\n    crateArticleFun() {\r\n        // console.log(this.state.username);\r\n        var url = \"http://arc.com/zero/blogs\";\r\n        console.log(url);\r\n        let article = {\r\n            \"authorId\": this.state.authorId,\r\n            \"tagId\": this.state.tagId,\r\n            \"category\": this.state.category,\r\n            \"status\": this.state.status,\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"content\": this.state.content,\r\n            \"version\": this.state.version,\r\n            \"sortWeight\": this.state.sortWeight\r\n        };\r\n\r\n        let ret = this.postBody(url, article);\r\n        console.log(article);\r\n        console.log(ret);\r\n    };\r\n\r\n\r\n    //上传图片\r\n    handleImageUpload(file, callback) {\r\n\r\n        console.log(file);\r\n        console.log(callback);\r\n        const reader = new FileReader();\r\n        console.log(reader);\r\n        // reader.onload = () => {\r\n        //     // const convertBase64UrlToBlob = (urlData) => {\r\n        //     //     let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]\r\n        //     //     let bstr = atob(arr[1]);\r\n        //     //     let n = bstr.length;\r\n        //     //     let u8arr = new Uint8Array(n);\r\n        //     //     while (n--) {\r\n        //     //         u8arr[n] = bstr.charCodeAt(n)\r\n        //     //     }\r\n        //     //     return new Blob([u8arr], {type: mime})\r\n        //     };\r\n        //     const blob = convertBase64UrlToBlob(reader.result);\r\n        //     setTimeout(() => {\r\n        //         // setTimeout 模拟异步上传图片\r\n        //         // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown\r\n        //         callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')\r\n        //     }, 1000)\r\n        // };\r\n        // reader.readAsDataURL(file)\r\n    }\r\n\r\n    //-----------------------------------------------------------------------------\r\n    //react渲染DOM的节点\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <MdEditor\r\n                    ref={node => this.mdEditor = node}\r\n                    style={{height: '700px'}}\r\n                    value={this.state.content}\r\n                    renderHTML={this.renderHTML}\r\n                    config={{\r\n                        view: {\r\n                            menu: true,\r\n                            md: true,\r\n                            html: true\r\n                        },\r\n                        imageUrl: 'https://octodex.github.com/images/minion.png'\r\n                    }}\r\n                    onChange={this.handleEditorChange}\r\n                    onImageUpload={this.handleImageUpload}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BlogMd;\r\n","import React from \"react\";\r\nimport url from 'url';\r\nclass FoodDetails extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            roles: [\r\n                {\r\n                    aid: '1',\r\n                    title: '标题1'\r\n                }, {\r\n                    aid: '2',\r\n                    title: '标题2'\r\n                }\r\n                , {\r\n                    aid: '3',\r\n                    title: '标题3'\r\n                }\r\n                , {\r\n                    aid: '4',\r\n                    title: '标题4'\r\n                }\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        let query = url.parse(this.props.location.search, true).query;\r\n        console.log(query);\r\n        console.log(query.aid);\r\n\r\n    }\r\n\r\n\r\n    getUsers = () => {\r\n\r\n    };\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (<div>\r\n\r\n            <h1>FoodDetails</h1>\r\n\r\n            <hr/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default FoodDetails;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport FileDownload from 'react-file-download';\r\n\r\n\r\nclass FileGet extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            code: null,\r\n            file: null,\r\n            type: null,\r\n        }\r\n    }\r\n\r\n\r\n    getFile = (code) => {\r\n        this.setState({\r\n            code: code,\r\n        });\r\n\r\n        if (this.state.code == null) {\r\n            alert(\"请出入合法的文件编码code\");\r\n            return;\r\n        } else if (this.state.code.trim() == \"\") {\r\n            alert(\"请出入合法的文件编码code\");\r\n            return;\r\n        }\r\n\r\n        let url = urls.file.getFileByCode + this.state.code;\r\n        console.log(url);\r\n        axios.get(url, {responseType: 'blob'}).then(response => {\r\n\r\n            let fileName = \"temp.jpg\";\r\n            console.log(response);\r\n            console.log(response.headers);\r\n            console.log( response.data.code);\r\n\r\n            FileDownload(response.data, fileName);\r\n        })\r\n    };\r\n\r\n\r\n    searchForFile = (e) => {\r\n        this.getFile(this.state.code);\r\n    };\r\n\r\n\r\n\r\n    // componentDidMount() {\r\n    //     //获取列表数据\r\n    // }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        //获取原生的事件对像 e.nativeEvent\r\n        this.setState({\r\n            code: event.target.value,\r\n        });\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(this.state.code);\r\n            this.getFile(event.target.value);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                           placeholder=\"code\"\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    <button onClick={this.searchForFile}>获取文件</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileGet;\r\n//            <p style={textStyles}>inline style</p>\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\nimport urls from '../../../config/urls.js';\r\n\r\n\r\nclass FileSearch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            code: null,\r\n            name: '',\r\n            type: null,\r\n            // info: '',\r\n            // image: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n            images: [],\r\n        }\r\n    }\r\n\r\n\r\n    //搜索 获取图片的集合\r\n    searchForImageList = (filename) => {\r\n        console.log(\"######## 搜索 获取图片的集合 #########\");\r\n\r\n        let query = {};\r\n        query.name = this.state.name;\r\n\r\n        console.log(\"查询参数\");\r\n        console.log(query);\r\n\r\n        axios.post(urls.file.listFileByQuery, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(\"################\");\r\n\r\n            // //失败  小于1 失败\r\n            if (response.data.code === 1) {\r\n                this.setState({\r\n                    images: response.data.data\r\n                });\r\n\r\n                console.log(this.state.images);                // this.props.history.push(\"/Success\");\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                console.log('catch 异常',);\r\n                console.log(error);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForImageList(null);\r\n    }\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------> 搜索的参数\");\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <p>\r\n                    <input type=\"text\"\r\n                           id=\"name\"\r\n                           name=\"name\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                        // required\r\n                        //    value={this.state.name}\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForImageList}>检索图片</button>\r\n                </p>\r\n\r\n\r\n                {this.state.images.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.name}${value.id}`}>\r\n                            <img\r\n                                key={`${value.name}${value.id}`}\r\n                                src={value.url}\r\n                                className='image-node-1'\r\n                                alt=''></img>\r\n                            <p className='front-black'>{value.name}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <h2>完</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FileSearch;\r\n","import React from \"react\";\r\nimport {\r\n    Upload,\r\n    Icon,\r\n    message,\r\n    Button\r\n} from 'antd';\r\n// import axios from \"axios\";\r\nimport '../../../assets/css/system/file/file.css'\r\n// api接口地址抽取\r\nimport urls from '../../../config/urls.js';\r\n\r\nclass FileUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            fileList: [\r\n                {\r\n                    uid: '-1',\r\n                    name: 'xxx.png',\r\n                    status: 'done',\r\n                    // code: 'done',\r\n                    url: 'http://127.0.0.1:8001/zero/file/upload',\r\n                },\r\n            ],\r\n\r\n            //\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n    render() {\r\n        const props = {\r\n            name: 'file',\r\n            action: urls.file.uploadFile,\r\n            // action: 'http://122.51.110.127:8001/zero/file/upload',\r\n            headers: {\r\n                authorization: 'authorization-text',\r\n            },\r\n            //上传中、完成、失败都会调用这个函数。\r\n            onChange(info) {\r\n                if (info.file.status === 'done' && info.file.response.code === 1) {\r\n                    console.log(\"################################\");\r\n                    console.log(info);\r\n                    console.log(\"--------------------info.file\");\r\n                    console.log(info.file);\r\n                    console.log(\"--------------------info.fileList\");\r\n                    console.log(info.fileList);\r\n                    console.log(\"--------------------info.event\");\r\n                    console.log(info.event);\r\n                    console.log(\"--------------------文件上传成功\");\r\n\r\n                    console.log(info.file.response.code);\r\n                    console.log(info.file.response.msg);\r\n                    console.log(info.file.response.data);\r\n\r\n                    console.log(\"--------------------info.file.response\");\r\n                    console.log(info.file.response);\r\n                    message.success(`${info.file.name}-->${info.file.response.data} 文件上传成功`);\r\n                    let fileName = info.file.response.data;\r\n                    console.log(fileName);\r\n                    console.log(fileName);\r\n                    console.log(this);\r\n                    //info.flie.name = fileName;\r\n                    // this.setState(\r\n                    //     {\r\n                    //         img2: 'http://127.0.0.1:8001/zero/file/sunhina_157434301011046cbf990e98546bb859b5fad',\r\n                    //\r\n                    //     }\r\n                    // )\r\n\r\n\r\n                } else if (info.file.status === 'error') {\r\n                    message.error(`${info.file.name} 文件上传失败`);\r\n                } else {\r\n                    //console.log(\"失败\" + info.file.response.msg);\r\n                    console.log(\"失败\");\r\n                }\r\n                console.log(\"################################\");\r\n            },\r\n        };\r\n\r\n        /*        const props_ = {\r\n                    name: 'file',\r\n                    directory: true,\r\n                    //     multiple: true,\r\n                    action: 'http://127.0.0.1:8001/zero/file/upload',\r\n                    onChange(info) {\r\n\r\n                    },\r\n                };*/\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Upload {...props}>\r\n                    <Button>\r\n                        <Icon type=\"upload\"/> 点击以上传图片\r\n                    </Button>\r\n                </Upload>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport '../../../assets/css/system/file/file.css'\r\n\r\nimport FileGet from './FileGet';\r\n\r\nimport FileSearch from \"./FileSearch\";\r\nimport FileUpload from \"./FileUpload\";\r\n\r\nclass File extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            display_name: 'none', //此状态机为display的取值\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"########### this.props.routes) ###########\");\r\n        console.log(this.props.routes);\r\n        console.log(\"######################\");\r\n    }\r\n\r\n\r\n    //编辑按钮的单击事件，修改状态机display_name的取值\r\n    showFileDownload = () => {\r\n        // this.setState({display_name: 'block',})\r\n        if (this.state.display_name == 'none') {\r\n            this.setState({\r\n                display_name: 'block',\r\n            })\r\n        } else if (this.state.display_name == 'block') {\r\n            this.setState({\r\n                display_name: 'none',\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <FileUpload/>\r\n                <FileSearch/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n\r\n                <button onClick={this.showFileDownload}>附加功能开关</button>\r\n                <div style={{\r\n                    background: '#fff',\r\n                    display: this.state.display_name\r\n                }}>    {/* 通过状态机display_name获取diaplay取值 */}\r\n                    <FileGet/>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default File;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport urls from '../../../config/urls.js';\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    // Form,\r\n    // Input,\r\n    // Tooltip,\r\n    // Icon,\r\n    // Cascader,\r\n    // Select,\r\n    // Row,\r\n    // Col,\r\n    // List,\r\n    // Checkbox,\r\n    // AutoComplete,\r\n}\r\n    from\r\n        'antd';\r\n\r\n// import ReactDOM from 'react-dom'\r\n// import Connection from '../common/Connection';\r\n//引入antd，本页面主要是对list数据做渲染\r\n\r\n\r\n//对于 File 的CRUD\r\nclass FileManage extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"文件列表\",\r\n            visibleForInsert: false,\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.file.listPage, {})\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n                    console.log(dataFromDb);\r\n\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                    console.log(this.state.list);\r\n\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            // {key: 'code', title: 'code', dataIndex: 'code', width: 20, high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'suffix', title: 'suffix', dataIndex: 'suffix'},\r\n            {key: 'version', title: 'version', dataIndex: 'version', high: 20},\r\n            // {key: 'path', title: 'path', dataIndex: 'path', width: 20, high: 20},\r\n            {key: 'state', title: '启用状态', dataIndex: 'state'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n            //列名称--数据源的字段名\r\n            {key: 'id', title: '文件大小', render: (text, record) => (<span>    {record.size} {record.sizeUnit}</span>)},\r\n\r\n            {\r\n                key: 'remove', title: '操作',\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                        <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*columns:指定表头          dataSource:指定数据源          borderd:加边框*/}\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        axios.get(urls.file.delete + id).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default FileManage;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n// import {Form, Icon, Input, Button, Checkbox,} from 'antd';\r\n// import \"antd/dist/antd.css\";\r\nimport '../../assets/css/layout/login.css'\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '', //账号\r\n            pwd: '', // 密码\r\n            pwdConfirm: '', // 确认密码\r\n            type: 'worker', // 用户类型 默认求职者\r\n            sex: 3,\r\n            info: '',\r\n        }\r\n    }\r\n\r\n\r\n    //   hasErrors=(fieldsError)=> {\r\n    //     return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n    // }\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        console.log(\"----------------------------\");\r\n        console.log(new Date());\r\n        console.log(\"componentDidMount\");\r\n        console.log(\"----------------------------\");\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    handleUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    };\r\n\r\n    handlePwd = (e) => {\r\n        this.setState({\r\n            pwd: e.target.value\r\n        });\r\n    };\r\n\r\n    keyUpFun = (e) => {\r\n        console.log(e.keyCode === 13);\r\n        if (13 === e.keyCode) {\r\n            this.loginFun(e);\r\n        }\r\n    };\r\n\r\n    //在密码框中点了回车就直接发请求登陆\r\n    //login\r\n    loginFun = (e) => {\r\n\r\n\r\n        let host = \"http://127.0.0.1\";\r\n        let port = 8001;\r\n        let uri = \"/zero/v2/login/json/process\";\r\n        let url = host + \":\" + port + uri;\r\n        console.log(this.state.username);\r\n        console.log(this.state.pwd);\r\n        console.log(this.state.info);\r\n\r\n\r\n        console.log(url);\r\n        let user = {\r\n            'identifier': this.state.username,\r\n            \"credential\": this.state.pwd,\r\n            \"identityType\": 1\r\n            //identityType\r\n        };\r\n\r\n        axios.post(url, user)\r\n            .then(response => {\r\n                console.log(\"response  then ==获取到后台返回的数据\");\r\n                console.log(response.data);\r\n                //登录失败  小于1 失败\r\n                if (null === response && response.data.code < 1) {\r\n                    alert(response.data.msg);\r\n                    this.props.history.push(\"/user\");\r\n                } else {\r\n                    //登录成功，获取到后台返回的数据，可以做缓存\r\n                    console.log(\" 登录成功\" + response.data.msg);\r\n                    // this.props.history.push(\"/blog\");\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n                //this.props.history.push(\"/login\");\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center-all\">\r\n\r\n                <div className=\"heading   \">\r\n                    <h2>登录 Please sign in</h2>\r\n                </div>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"username\" className=\"sr-only\">名称</label>\r\n                    <input type=\"text\"\r\n                           id=\"username\" name=\"identifier\"\r\n                           onChange={this.handleUsername}\r\n                           value={this.state.username}\r\n                           placeholder=\"手机号/邮箱/用户名\"\r\n                           className=\"form-control\"\r\n                           required\r\n                           autoFocus/>\r\n                </p>\r\n\r\n\r\n                <p>\r\n                    <label htmlFor=\"password\"\r\n                           className=\"sr-only\">密码</label>\r\n                    <input type=\"password\"\r\n                           value={this.state.pwd}\r\n                           onChange={this.handlePwd}\r\n                           onKeyUp={this.keyUpFun}\r\n                           className=\"form-control\"\r\n                           placeholder=\"密码\"\r\n                           id=\"password\"\r\n                           name=\"credential\"\r\n                           required/>\r\n                </p>\r\n\r\n                {/*                    <input name=\"rememberMe\" id=\"rememberMe\" type=\"checkbox\"\r\n                           className=\"checkbox\" value=\"true\"/><label\r\n                    htmlFor=\"rememberMe\">30 天内记住我</label>*/}\r\n\r\n                <input name=\"identityType\" type=\"hidden\" value=\"1\"/>\r\n\r\n                <div>\r\n                    <button onClick={this.loginFun} className=\"btn-login-submit \">点我登录</button>\r\n                </div>\r\n\r\n                <div className=\"forgotPasswordContainer CanBePulledDown\"\r\n                     id=\"forgotPasswordDiv\">\r\n                    <a href=\"https://app.yinxiang.com/ForgotPassword.action\"\r\n                       target=\"_top\" className=\"forgot-password\">\r\n                        忘记密码？</a>\r\n                </div>\r\n\r\n                {/*                 <div className=\"Btn Btn_emph Btn_super Btn_Yx\">\r\n                        <img\r\n                            src=\"https://static.app.yinxiang.com/embedded-web/web/static/media/wechat_icon@2x.e20b7172.png\"/>\r\n                        <span>使用微信登录</span>\r\n                    </div>*/}\r\n\r\n\r\n                <div className=\"footer wrapper\">\r\n                    <a href=\"https://www.yinxiang.com/tos/\" className=\"footer-entry\">服务条款</a>\r\n                    <a href=\"https://www.yinxiang.com/privacy/\" className=\"footer-entry\">|隐私政策</a>\r\n                    <span className=\"footer-entry last\">    版权所有 2007 - 2019 笔记。保留所有权利。</span>\r\n                </div>\r\n\r\n                <hr/>\r\n                <h3> 获取输入值账号{this.state.username}</h3>\r\n                <h3> 获取输入值密码{this.state.pwd} </h3>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import {Link} from \"react-router-dom\";\r\n// import  Home from '../../../components/layout/Home'\r\nimport '../../../assets/css/system/menu/menu.css'\r\nimport apis from '../../../config/urls.js';\r\n\r\n\r\nclass Menu extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            parentId: null,\r\n            systemId: null,//适用系统的id\r\n            code: null,\r\n            name: \"测试\",\r\n            nameEnglish: null,\r\n            sort: 0,\r\n            level: 0,// 级别，1=第一级，2=第二级，，，\r\n            state: 1,// 状态，暂时规划true=非0/false=0\r\n            url: null,// 菜单URL地址\r\n            icon: null,// icon地址\r\n            note: null,\r\n\r\n\r\n            raw: {\r\n                id: null,\r\n                parentId: null,\r\n                systemId: null,//适用系统的id\r\n                code: null,\r\n                name: \"测试\",\r\n                nameEnglish: null,\r\n                sort: 0,\r\n                level: 0,// 级别，1=第一级，2=第二级，，，\r\n                state: 1,// 状态，暂时规划true=非0/false=0\r\n                url: null,// 菜单URL地址\r\n                icon: null,// icon地址\r\n                note: null,\r\n            },\r\n            // info: '',\r\n            list: [],\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        this.searchForMenuList(\"\");\r\n    }\r\n\r\n    //请求服务器获取数据集合\r\n    searchForMenuList = (e) => {\r\n        let url = apis.menu.listMenu;\r\n        let query = {};\r\n        axios.post(url, query).then(response => {\r\n            console.log(\"##### response ####\");\r\n            console.log(response);\r\n            console.log(response.config);\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(\"###################\");\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                this.setState({\r\n                    list: response.data.data\r\n                });\r\n                console.table(this.state.images);\r\n            }\r\n            //\r\n            // } else {\r\n            //     alert(response.data.msg);\r\n            //     alert(\"FAIL\");\r\n            //     console.log(\"FAIL\");\r\n            //     console.log(response);\r\n            //     // this.props.history.push(\"/file-search\");\r\n            // }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n\r\n\r\n    };\r\n\r\n\r\n    /*\r\n        searchForMenuList = (name) => {\r\n            let url = apis.menu.listMenu;\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n            console.log(url);\r\n\r\n            console.log(\"######## 搜索 获取图片的集合 #########\");\r\n            let query = {};\r\n            // console.log(filename);\r\n            // query.name = this.state.name;\r\n            // query.name = this.state.name;\r\n            axios.post(url,query).then(response => {\r\n                console.log(\"##### response ####\");\r\n                console.log(response);\r\n                console.log(\"###################\");\r\n                let code = response.data.code;\r\n                // //失败  小于1 失败\r\n                // if (null === response && response.data.code == 1) {\r\n                //     // this.props.history.push(\"/Success\");\r\n                if (code === 1) {\r\n                    let arr = [];\r\n                    // arr.push(this.state.raw);\r\n                    // console.log(\"arr.push(response.data.data);\");\r\n                    // console.log(response.data.data);\r\n                    let resultArray = arr.concat(response.data.data);\r\n                    console.log(resultArray);\r\n                    this.setState({\r\n                        list: resultArray\r\n                    });\r\n                    console.table(this.state.images);\r\n                }\r\n                //\r\n                // } else {\r\n                //     alert(response.data.msg);\r\n                //     alert(\"FAIL\");\r\n                //     console.log(\"FAIL\");\r\n                //     console.log(response);\r\n                //     // this.props.history.push(\"/file-search\");\r\n                // }\r\n            })\r\n                // .catch(function (error) {\r\n                //     //异常\r\n                //     console.log(error);\r\n                //     console.log('catch 异常',);\r\n                // });\r\n            ;\r\n        };\r\n    */\r\n\r\n    //请求服务器 保存数据\r\n    saveMenu = (e) => {\r\n        console.log(\"######## saveMenu #########\");\r\n        let url = apis.menu.saveMenu;\r\n        console.log(url);\r\n        //input 的参数怎么获取\r\n\r\n\r\n        let request = {};\r\n        request.parentId = this.state.parentId;\r\n        request.code = null;\r\n        request.name = this.state.name;\r\n        request.systemId = this.state.systemId;\r\n        request.sort = this.state.sort;\r\n        request.level = this.state.level;\r\n        request.state = this.state.state;\r\n        request.url = this.state.url;\r\n        request.icon = this.state.icon;\r\n        request.note = this.state.note;\r\n\r\n        //request  .nameEnglish = this.state.nameEnglish;\r\n        console.table(this.state);\r\n        console.table(request);\r\n        console.log(request);\r\n\r\n        // query.name = this.state.name;\r\n        axios.post(url, request).then(response => {\r\n\r\n            console.log(\"##### response.data.code ####\");\r\n            let code = response.data.code;\r\n            console.log(code);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.msg ####\");\r\n            console.log(response.data.msg);\r\n            console.log(\"###################\");\r\n\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n                console.log(response.data.msg);\r\n\r\n                // this.setState({\r\n                // });\r\n            }\r\n            console.log(\"##### response ####\");\r\n            console.log(response.status);\r\n            console.log(response.headers);\r\n            console.log(response.config);\r\n            console.log(response);\r\n            console.log(\"###################\");\r\n\r\n\r\n            console.log(\"##### response.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n            console.log(\"##### response.data.data ####\");\r\n            console.log(response.data.data);\r\n            console.log(\"###################\");\r\n\r\n\r\n            // //失败  小于1 失败\r\n            // if (null === response && response.data.code == 1) {\r\n            //     //成功，获取到后台返回的数据，可以做缓存\r\n            //     console.log(\" 成功\" + response.data.msg);\r\n            //     // this.props.history.push(\"/Success\");\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        //异常\r\n            .catch(function (error) {\r\n                alert(error);\r\n                console.log(error);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    /////////////////////////////////\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n\r\n            // raw: {\r\n            //     [inputName]: inputValue\r\n            // }\r\n        })\r\n    }\r\n\r\n\r\n    //获取表单的值\r\n    handleGetInputValue = (event) => {\r\n        console.log(event);\r\n\r\n        //获取原生的事件对像 e.nativeEvent\r\n        console.log(event.nativeEvent);\r\n\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    //获取input的值\r\n    handleInputOnChange = (event) => {\r\n        console.log(event);\r\n        // onKeyUp\r\n        console.log(event.keyCode);\r\n        //获取输入的值\r\n        console.log(event.target.value);\r\n\r\n        //如何知道是那个id的input框 ？\r\n        this.setState({\r\n            name: event.target.value,\r\n        });\r\n\r\n\r\n        if (13 === event.keyCode) {\r\n            console.log(\"按了回车键 ------>\");\r\n            console.log(\"搜索的参数\");\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            console.log(this.state.name);\r\n            let name = event.target.value;\r\n            // searchImageList(name);\r\n            console.log(name);\r\n            console.log(this.state.name);\r\n            this.searchForImageList(name);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>  {this.state.name}</h3>\r\n                <h4>  {this.state.note}</h4>\r\n                <h4>  {this.state.systemId}</h4>\r\n                <h4>  {this.state.sort}</h4>\r\n\r\n\r\n                <h2>菜单管理</h2>\r\n\r\n                {/*<p className=\"front-black\">检索菜单</p>*/}\r\n                <p>\r\n                    {/*<label htmlFor=\"username\" className=\"sr-only\">名称</label>*/}\r\n                    <input type=\"text\"\r\n                        // value={this.state.username}\r\n                           placeholder=\"name / code \"\r\n                           autoFocus\r\n                           required\r\n                        // value={this.state.name}\r\n                        // defaultValue={this.state.name}\r\n\r\n                           className='file-search-input'\r\n                           onKeyUp={this.handleGetInputValue}\r\n                    />\r\n                    {/*搜索按钮*/}\r\n                    <button onClick={this.searchForMenuList}>检索菜单</button>\r\n                </p>\r\n\r\n\r\n                {/* save insert 创建    新增 新建的框框*/}\r\n                <form className='image-node'>\r\n\r\n                    <div>\r\n                        名称：<input type=\"text\"\r\n                                  id=\"name\"\r\n                                  name=\"name\"\r\n                                  placeholder=\"name\"\r\n                                  autoFocus\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n                        地址：<input type=\"text\"\r\n                                  id=\"url\"\r\n                                  name=\"url\"\r\n                                  placeholder=\"url\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n\r\n                        系统：<input type=\"text\"\r\n                                  id=\"systemId\"\r\n                                  name=\"systemId\"\r\n                                  placeholder=\"systemId\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        上级：<input type=\"text\"\r\n                                  id=\"parentId\"\r\n                                  name=\"parentId\"\r\n                                  placeholder=\"parentId\"\r\n                        // required\r\n                        //    value={this.state.name}\r\n                                  className='menu-input-save'\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        状态：<input type=\"text\"\r\n                                  id=\"state\"\r\n                                  name=\"state\"\r\n                                  placeholder=\"state\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        注释：<input type=\"text\"\r\n                                  id=\"note\"\r\n                                  name=\"note\"\r\n                                  placeholder=\"note\"\r\n                                  className=\"menu-input-save\"\r\n                                  onChange={e => this.onInputChange(e)}\r\n                    />\r\n                    </div>\r\n\r\n                    排序：<input type=\"text\"\r\n                              id=\"sort\"\r\n                              name=\"sort\"\r\n                              placeholder=\"sort\"\r\n                              className=\"menu-input-save-sort\"\r\n                              onChange={e => this.onInputChange(e)}\r\n                />\r\n\r\n\r\n                    {/*nameEnglish  icon  */}\r\n                    <button\r\n                        className=\"node-for-save-btn\"\r\n                        onClick={e => this.saveMenu(e)}>保存\r\n                    </button>\r\n\r\n                </form>\r\n\r\n                {/*渲染list 数据*/}\r\n\r\n                {this.state.list.map((value, key) => {\r\n                    return (\r\n                        <div key={`${value.id}${value.name}`}\r\n                             className='image-node'\r\n                        >\r\n                            id:{value.id}\r\n                            <br/>\r\n                            systemId:{value.systemId}\r\n                            <br/>\r\n                            pId:{value.parentId}\r\n                            <br/>\r\n                            sort{value.sort} <br/>\r\n                            name:{value.name}\r\n                            <br/>\r\n                            level:{value.level}\r\n                            <br/>\r\n                            state:{value.state}\r\n                            <br/>\r\n                            url:{value.url}\r\n                            <br/>\r\n                            icon:{value.icon}\r\n                            <br/>\r\n                            {/*note:{value.note}*/}\r\n                            {/*createDate:{value.createDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*updateDate:{value.updateDate}*/}\r\n                            {/*<br/>*/}\r\n                            {/*<p className='front-black'>{value.name}</p>*/}\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import Index from \"../components/basic/Index\";\r\nimport CssTest from \"../components/test/CssTest\";\r\nimport Role from \"../components/system/rbac/Role\";\r\nimport User from \"../components/system/rbac/user/User\";\r\nimport UserInsert from \"../components/system/rbac/user/UserInsert\";\r\nimport RoleInsert from \"../components/system/rbac/RoleInsert\";\r\nimport Food from \"../components/app/food/Food\";\r\nimport Blog from \"../components/app/blog/Blog\";\r\nimport ManageBlog from \"../components/app/blog/ManageBlog\";\r\nimport BlogDetail from \"../components/app/blog/BlogDetail\";\r\nimport BlogMd from \"../components/app/blog/BlogMd\";\r\nimport FoodDetails from \"../components/app/food/FoodDetails\";\r\nimport File from \"../components/system/file/File\";\r\nimport FileManage from \"../components/system/file/FileManage\";\r\nimport Login from \"../components/basic/Login\";\r\nimport FileSearch from \"../components/system/file/FileSearch\";\r\nimport Menu from \"../components/system/menu/Menu\";\r\nimport React from \"react\";\r\n\r\n//购物小票\r\nimport ShoppingReceipt from '../components/app/shop/ShoppingReceipt'\r\n\r\nconst routers = [\r\n    {\r\n        path: \"/index\",\r\n        component: Index,\r\n        exact: true\r\n    },\r\n    //system 模块的\r\n    {\r\n        path: \"/user\",\r\n        component: User,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/files\",\r\n        component: FileManage,\r\n        exact: true\r\n    },\r\n\r\n\r\n    // test\r\n    {\r\n        path: \"/css-test\",\r\n        component: CssTest,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/role\",\r\n        component: Role,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/roleInsert/:aid\",\r\n        component: RoleInsert,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/userInsert\",\r\n        component: UserInsert,\r\n        exact: true\r\n    },\r\n    //app 模块的\r\n    {\r\n        path: \"/blog\",\r\n        component: Blog,\r\n        exact: true\r\n    },    {\r\n        path: \"/sr\",\r\n        component: ShoppingReceipt,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/manage-blog\",\r\n        component: ManageBlog,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/blog-detail\",\r\n        component: BlogDetail,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/bmd\",\r\n        component: BlogMd,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/food\",\r\n        component: Food,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/FoodDetails\",\r\n        component: FoodDetails,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file\",\r\n        component: File,\r\n        exact: true,\r\n        routes: [\r\n            {\r\n                path: \"/file-add\",\r\n                component: Login,\r\n                exact: true\r\n            }, {\r\n                path: \"/file-update\",\r\n                component: Login,\r\n                exact: true\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        component: Login,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/file-search\",\r\n        component: FileSearch,\r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/menu\",\r\n        component: Menu,\r\n        exact: true\r\n    }\r\n];\r\n\r\nexport default routers;\r\n\r\n//                        reder={props=>(\r\n//                             <route.component{... props} routers={route.children}>\r\n//                         )\r\n","import React from \"react\";\r\nimport urls from \"../../../config/urls\";\r\n\r\nimport {Button, Card, Form, Input, Modal} from \"antd\";\r\n\r\n// 新增用户\r\nclass ShoppingReceiptInsert extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            id: -1,\r\n            visible: false\r\n            //\r\n            // roles: [\r\n            //     {\r\n            //         aid: '1',\r\n            //         title: '标题1'\r\n            //     }, {\r\n            //         aid: '2',\r\n            //         title: '标题2'\r\n            //     }\r\n            //     , {\r\n            //         aid: '3',\r\n            //         title: '标题3'\r\n            //     }\r\n            //     , {\r\n            //         aid: '4',\r\n            //         title: '标题4'\r\n            //     }\r\n            // ]\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"ch ch ch\");\r\n\r\n        console.log(this.props.visibleForInsert);\r\n        // console.log(this.state.visible);\r\n\r\n        //获取列表数据\r\n        // this.getList();\r\n        //赋值给 list\r\n        //渲染 表格 在页面中做 新增 编辑 删除 等\r\n        //1可以获取到值了，需要自己解析 console.log(this.props.location.search);\r\n        //2 使用现成的类库来解析\r\n        // let query = url.parse(this.props.location.search, true).query;\r\n        // console.log(query);\r\n        // console.log(this.state.id);\r\n    }\r\n\r\n\r\n    saveShoppingReceipt = () => {\r\n        console.log(\"save!!!!!!\");\r\n    };\r\n\r\n    //\r\n    // getInitialState() {\r\n    //     return {\r\n    //         modal2Visible: false,\r\n    //     };\r\n    // }\r\n\r\n    cancelInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        console.log(visible);\r\n        this.setState({visible: visible});\r\n        console.log(\"  ----------------->保存用户 executeInsertModal\");\r\n        this.saveShoppingReceipt();\r\n    }\r\n\r\n\r\n    //字符串拼接\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n\r\n            <Modal\r\n                title=\"垂直居中的对话框\"\r\n                wrapClassName=\"vertical-center-modal\"\r\n                visible={this.props.visibleForInsert}\r\n                onOk={() => this.executeInsertModal(false)}\r\n                onCancel={() => this.cancelInsertModal(false)}\r\n            >\r\n\r\n\r\n                <p>对话框的内容= {this.props.visibleForInsert}</p>\r\n                <Form layout=\"inline\" onSubmit={this.updateShoppingReceipt}>\r\n\r\n                    <Form.Item> <Input placeholder=\"nickname\" onChange={event => this.handleMaxBackUp(event)}/>\r\n                    </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"avatar\"></Input> </Form.Item>\r\n                    <Form.Item> <Input placeholder=\"state\"></Input> </Form.Item>\r\n\r\n                    <Form.Item> <Button type=\"primary\" htmlType=\"submit\"> Log in </Button> </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShoppingReceiptInsert;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport axios from 'axios';\r\nimport ShoppingReceiptInsert from \"./ShoppingReceiptInsert\";\r\nimport urls from \"../../../config/urls\";\r\n\r\nimport {\r\n    Table,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n} from 'antd';\r\n\r\nclass ShoppingReceipt extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tableTitle: \"列表\",\r\n            list: [],\r\n            visibleForInsert: false,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //获取列表数据\r\n        console.log(\"获取列表数据----->\");\r\n        this.refreshTable();\r\n    }\r\n\r\n    //刷新表格\r\n    refreshTable = () => {\r\n        axios.post(urls.receipt.listPage, {})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (response != null && response.data.code === 1) {\r\n\r\n                    var dataFromDb = response.data.data.content;\r\n                    console.log(dataFromDb);\r\n                    //赋值\r\n                    this.setState({list: dataFromDb});\r\n                }\r\n\r\n\r\n            })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常  catch =====',);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    //子父组件传值\r\n    showModal = () => {\r\n        this.setState({\r\n            visibleForInsert: true,\r\n        });\r\n\r\n\r\n        console.log(\"原始状态 \" + this.state.visibleForInsert);\r\n        let flag = !this.state.visibleForInsert;\r\n        console.log(\"flag= \" + flag);\r\n        //this.setState({visibleForInsert: flag});\r\n        console.log(\"子父组件传值 ，flag= \" + flag + \" 状态= \" + this.state.visibleForInsert);\r\n\r\n\r\n    };\r\n\r\n\r\n    //请求服务器 保存数据\r\n    saveShoppingReceipt = (e) => {\r\n        axios.post(urls.user.saveShoppingReceipt, {\r\n            nickname: this.state.nickname,\r\n            state: this.state.state == null ? 0 : this.state.state\r\n\r\n        }).then(response => {\r\n            let code = response.data.code;\r\n            if (code === 1) {\r\n                console.log(response.data.msg);\r\n                //关闭弹出框\r\n                this.setState({\r\n                    visibleForInsert: false,\r\n                    nickname: \"\",\r\n                    state: 0\r\n                });\r\n\r\n                //刷新\r\n                this.refreshTable();\r\n\r\n                // location.reload();\r\n                // this.forceUpdate();\r\n                // this.props.history.push(urls.user.index);\r\n\r\n            }\r\n        })\r\n\r\n\r\n        //异常\r\n            .catch(function (response) {\r\n                console.log(response);\r\n                alert(response);\r\n                console.log('catch 异常',);\r\n            });\r\n        ;\r\n    };\r\n\r\n\r\n    cancelInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->取消 填充数据 cancelInsertModal\");\r\n    }\r\n\r\n    //executeInsertModal\r\n    executeInsertModal(visible) {\r\n        this.setState({visibleForInsert: visible});\r\n        console.log(\"  ----------------->保存 executeInsertModal\");\r\n        this.saveShoppingReceipt();\r\n    }\r\n\r\n\r\n    onInputChange(e) {\r\n        //es6变量名是一个变量\r\n        let inputValue = e.target.value,\r\n            inputName = e.target.name;\r\n        console.log(\"#####################\");\r\n        console.log(\"inputName/inputValue：\" + inputName + \"/\" + inputValue);\r\n        // this.state.raw.[inputName] = inputValue\r\n        this.setState({\r\n            [inputName]: inputValue\r\n        })\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        //定义表头，一般放在render()中\r\n        const columns = [\r\n            // {key: 'id', title: 'id', dataIndex: 'id', high: 20},\r\n            {key: 'name', title: 'name', dataIndex: 'name', high: 20},\r\n            {key: 'transactionTime', title: '交易时间', dataIndex: 'transactionTime'},\r\n            {key: 'totalDiscount', title: '总折扣', dataIndex: 'totalDiscount', high: 20},\r\n            // {key: 'path', title: 'path', dataIndex: 'path', width: 20, high: 20},\r\n            {key: 'state', title: '启用状态', dataIndex: 'state'},\r\n            // {key: 'createTime', title: '创建时间', dataIndex: 'createTime'},\r\n            // {key: 'updateTime', title: '更新时间', dataIndex: 'updateTime'},\r\n\r\n            //列名称--数据源的字段名\r\n            {\r\n                key: 'id',\r\n                title: '成交价',\r\n                render: (text, record) => (<span> {record.totalFinalPrice}{record.priceUnit}</span>)\r\n            },\r\n\r\n            {\r\n                key: 'remove', title: '操作', render: (text, record) => (<span>\r\n                        {/*<Button onClick={this.add}>add {record.id}</Button>*/}\r\n                    <Button onClick={this.remove.bind(this, record.id)}>remove-{record.id}</Button>\r\n                    </span>)\r\n            }\r\n        ];\r\n        //////////////////////\r\n\r\n        return (<div>\r\n\r\n            <Card title={this.state.tableTitle}>\r\n\r\n                {/*点击新增按钮：1、弹出输入框 2、获取输入数据保存 3、关闭输入框*/}\r\n                <Button type=\"primary\" onClick={this.showModal}>新增 </Button>\r\n\r\n                <Modal\r\n                    title=\"新增\"\r\n                    wrapClassName=\"vertical-center-modal\"\r\n                    visible={this.state.visibleForInsert}\r\n                    onOk={() => this.executeInsertModal(false)}\r\n                    onCancel={() => this.cancelInsertModal(false)}\r\n                >\r\n\r\n                    {/* save insert 创建    新增 新建的框框*/}\r\n                    <div>\r\n\r\n\r\n                        <div>\r\n                            昵称：<input type=\"text\"\r\n                                      name=\"nickname\"\r\n                                      name=\"nickname\"\r\n                                      placeholder=\"nickname\"\r\n                                      autoFocus\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        <div>\r\n                            状态：<input type=\"text\"\r\n                                      id=\"state\"\r\n                                      name=\"state\"\r\n                                      placeholder=\"state\"\r\n                                      onChange={e => this.onInputChange(e)}\r\n                        />\r\n                        </div>\r\n                        {/*<div>*/}\r\n                        {/*    avatar：<input type=\"text\"*/}\r\n                        {/*              id=\"avatar\"*/}\r\n                        {/*              name=\"avatar\"*/}\r\n                        {/*              placeholder=\"avatar\"*/}\r\n                        {/*              onChange={e => this.onInputChange(e)}*/}\r\n                        {/*/>*/}\r\n                        {/*</div>*/}\r\n                    </div>\r\n                </Modal>\r\n\r\n\r\n                <Table\r\n                    rowKey={record => record.id}\r\n                    columns={columns}\r\n                    dataSource={this.state.list}\r\n                    pageSize={10}\r\n                    bordered>\r\n                </Table>\r\n            </Card>\r\n        </div>);\r\n\r\n    }\r\n\r\n    remove(id) {\r\n        console.log(\"删除--\" + id);\r\n        console.log(id);\r\n        let url = urls.receipt.delete + id;\r\n        console.log(url);\r\n        console.log(url);\r\n        axios.get(url).then(response => {\r\n            if (response != null && response.data.code === 1) {\r\n                console.log(response.data.msg);\r\n                //刷新\r\n                this.refreshTable();\r\n            }\r\n\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('登陆异常  catch =====',);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ShoppingReceipt;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// import Role from '../system/rbac/Role';\r\n// import UserList from '../system/user/UserList';\r\n// import User from '../system/rbac/user/User';\r\n// import UserInsert from '../system/user/UserInsert';\r\n// import RoleInsert from '../system/rbac/RoleInsert';\r\n// import File from '../system/file/File';\r\n// import Login from '../basic/Login';\r\n// import Food from '../app/food/Food';\r\n// import Index from '../basic/Index';\r\n// import FoodDetails from '../app/food/FoodDetails';\r\n// import FileSearch from '../system/file/FileSearch';\r\n// import Menu from '../system/menu/Menu';\r\n\r\n//路由与 api接口地址抽取\r\nimport routers from '../../config/router.js';\r\nimport apis from '../../config/urls.js';\r\n\r\n//css\r\nimport '../../assets/css/layout/home.css'\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    //初始化函数触发\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.getMenusFun();\r\n        // this.props.form.validateFields();\r\n    }\r\n\r\n    // 初始化的时候去获取菜单数据\r\n    getMenusFun = (e) => {\r\n        var systemId = 4;\r\n        var level = 0;//0 全部\r\n        //localhost:8001/zero/menus/2/levels/0\r\n        // var url = \"http://arc.com/zero/menus/\" + menuId + \"/levels/\" + level;\r\n\r\n        let url = apis.listMenusBySystemIdAndLevel;\r\n        url = url.replace(\"SYSTEM_ID\", systemId);\r\n        url = url.replace(\"LEVEL\", level);\r\n        console.log(url);\r\n\r\n        axios.get(url).then(response => {\r\n            if (response != null) {\r\n                //成功，获取到后台返回的数据，可以做缓存\r\n                // this.props.history.push(\"/Success\");\r\n                this.setState({\r\n                    list: response.data.data\r\n                })\r\n            }\r\n\r\n\r\n            //失败  小于1 失败\r\n            if (null === response && response.data.code < 1) {\r\n                alert(response.data.msg);\r\n                console.log(\"FAIL\");\r\n                this.props.history.push(\"/index\");\r\n            }\r\n        })\r\n            .catch(function (error) {\r\n                //异常\r\n                console.log(error);\r\n                console.log('异常 被 catch',);\r\n            });\r\n        ;\r\n\r\n    };\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////////////////////  render\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Router>\r\n                    <div className=\"title\">\r\n                        {\r\n                            this.state.list.map((value, key) => {\r\n                                return (\r\n                                    <Link key={key} to={value.url}>{value.name}</Link>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        routers.map((route, key) => {\r\n                            if (route.exact) {\r\n                                return <Route exact\r\n                                              key={route.path}\r\n                                              path={route.path}\r\n                                              render={props => (\r\n                                                  <route.component{...props} routes={route.routes}/>\r\n                                              )}/>;\r\n                            } else {\r\n                                return <Route\r\n                                    key={route.path}\r\n                                    path={route.path}\r\n                                    render={props => (\r\n                                        <route.component{...props} routes={route.routes}/>\r\n                                    )}/>;\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                    {/*<Route exact path=\"/user\" component={User}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/role\" component={Role}/>*/}\r\n                    {/*<Route exact path=\"/roleInsert/:aid\" component={RoleInsert}/>*/}\r\n                    {/*<Route exact path=\"/userInsert\" component={UserInsert}/>*/}\r\n                    {/*<Route exact path=\"/food\" component={Food}/>*/}\r\n                    {/*<Route exact path=\"/foodDetails\" component={FoodDetails}/>*/}\r\n                    {/*<Route exact path=\"/file\" component={File}/>*/}\r\n                    {/*<Route exact path=\"/login\" component={Login}/>*/}\r\n                    {/*<Route exact path=\"/index\" component={Index}/>*/}\r\n                    {/*<Route exact path=\"/user-list\" component={UserList}/>*/}\r\n                    {/*<Route exact path=\"/file-search\" component={FileSearch}/>*/}\r\n                    {/*<Route exact path=\"/menu\" component={Menu}/>*/}\r\n\r\n\r\n                </Router>\r\n\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n// 原始的\r\n//              {\r\n//                         routers.map((route, key) => {\r\n//                             if (route.exact) {\r\n//                                 return <Route exact path={route.path} component={route.component} key={route.path}/>\r\n//                             }\r\n//                         })\r\n//\r\n//                     }\r\n","import React from 'react';\nimport Home from './components/layout/Home';\n// import Content from './components/layout/Content';\n// import {BrowserRouter as Router, Link, Route} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n            <Home/>\n            {/*<Content/>*/}\n\n        </div>\n    )\n        ;\n}\n\nexport default App;\n\n// import logo from './assets/image/logo.svg';\n// import './assets/App.css';\n// import './assets/index.css';\n// import Main from './components/layout/Main';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}